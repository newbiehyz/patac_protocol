# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cylinder_multitask.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import common_pb2 as common__pb2
import obstacle_raw_pb2 as obstacle__raw__pb2
import real3d_pb2 as real3d__pb2
import sync_cylinder_parsing_pb2 as sync__cylinder__parsing__pb2
import perception_base_pb2 as perception__base__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='cylinder_multitask.proto',
  package='autodrive.workflow.proto',
  syntax='proto3',
  serialized_pb=_b('\n\x18\x63ylinder_multitask.proto\x12\x18\x61utodrive.workflow.proto\x1a\x0c\x63ommon.proto\x1a\x12obstacle_raw.proto\x1a\x0creal3d.proto\x1a\x1bsync_cylinder_parsing.proto\x1a\x15perception_base.proto\"\xaf\x01\n\x0f\x43\x61meraValidFlag\x12\x44\n\tsensor_id\x18\x01 \x01(\x0e\x32\x31.autodrive.workflow.proto.perception_base.ImageId\x12\x1f\n\x17obstacle_raw_data_valid\x18\x02 \x01(\x08\x12\x19\n\x11real3d_data_valid\x18\x03 \x01(\x08\x12\x1a\n\x12parsing_data_valid\x18\x04 \x01(\x08\"\x89\x03\n\x11\x43ylinderMultiTask\x12\x33\n\x06header\x18\x01 \x01(\x0b\x32#.autodrive.workflow.proto.MsgHeader\x12.\n\x05\x65rror\x18\x02 \x01(\x0b\x32\x1f.autodrive.workflow.proto.Error\x12\x43\n\x10\x63\x61mera_flag_data\x18\x03 \x03(\x0b\x32).autodrive.workflow.proto.CameraValidFlag\x12\x45\n\x11obstacle_raw_data\x18\x04 \x03(\x0b\x32*.autodrive.workflow.proto.ObstacleRawsData\x12\x39\n\x0breal3d_data\x18\x05 \x03(\x0b\x32$.autodrive.workflow.proto.Real3DData\x12H\n\x0cparsing_data\x18\x06 \x03(\x0b\x32\x32.autodrive.workflow.proto.CylinderParsingImageDatab\x06proto3')
  ,
  dependencies=[common__pb2.DESCRIPTOR,obstacle__raw__pb2.DESCRIPTOR,real3d__pb2.DESCRIPTOR,sync__cylinder__parsing__pb2.DESCRIPTOR,perception__base__pb2.DESCRIPTOR,])




_CAMERAVALIDFLAG = _descriptor.Descriptor(
  name='CameraValidFlag',
  full_name='autodrive.workflow.proto.CameraValidFlag',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sensor_id', full_name='autodrive.workflow.proto.CameraValidFlag.sensor_id', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='obstacle_raw_data_valid', full_name='autodrive.workflow.proto.CameraValidFlag.obstacle_raw_data_valid', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='real3d_data_valid', full_name='autodrive.workflow.proto.CameraValidFlag.real3d_data_valid', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='parsing_data_valid', full_name='autodrive.workflow.proto.CameraValidFlag.parsing_data_valid', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=155,
  serialized_end=330,
)


_CYLINDERMULTITASK = _descriptor.Descriptor(
  name='CylinderMultiTask',
  full_name='autodrive.workflow.proto.CylinderMultiTask',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='autodrive.workflow.proto.CylinderMultiTask.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='error', full_name='autodrive.workflow.proto.CylinderMultiTask.error', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='camera_flag_data', full_name='autodrive.workflow.proto.CylinderMultiTask.camera_flag_data', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='obstacle_raw_data', full_name='autodrive.workflow.proto.CylinderMultiTask.obstacle_raw_data', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='real3d_data', full_name='autodrive.workflow.proto.CylinderMultiTask.real3d_data', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='parsing_data', full_name='autodrive.workflow.proto.CylinderMultiTask.parsing_data', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=333,
  serialized_end=726,
)

_CAMERAVALIDFLAG.fields_by_name['sensor_id'].enum_type = perception__base__pb2._IMAGEID
_CYLINDERMULTITASK.fields_by_name['header'].message_type = common__pb2._MSGHEADER
_CYLINDERMULTITASK.fields_by_name['error'].message_type = common__pb2._ERROR
_CYLINDERMULTITASK.fields_by_name['camera_flag_data'].message_type = _CAMERAVALIDFLAG
_CYLINDERMULTITASK.fields_by_name['obstacle_raw_data'].message_type = obstacle__raw__pb2._OBSTACLERAWSDATA
_CYLINDERMULTITASK.fields_by_name['real3d_data'].message_type = real3d__pb2._REAL3DDATA
_CYLINDERMULTITASK.fields_by_name['parsing_data'].message_type = sync__cylinder__parsing__pb2._CYLINDERPARSINGIMAGEDATA
DESCRIPTOR.message_types_by_name['CameraValidFlag'] = _CAMERAVALIDFLAG
DESCRIPTOR.message_types_by_name['CylinderMultiTask'] = _CYLINDERMULTITASK
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CameraValidFlag = _reflection.GeneratedProtocolMessageType('CameraValidFlag', (_message.Message,), dict(
  DESCRIPTOR = _CAMERAVALIDFLAG,
  __module__ = 'cylinder_multitask_pb2'
  # @@protoc_insertion_point(class_scope:autodrive.workflow.proto.CameraValidFlag)
  ))
_sym_db.RegisterMessage(CameraValidFlag)

CylinderMultiTask = _reflection.GeneratedProtocolMessageType('CylinderMultiTask', (_message.Message,), dict(
  DESCRIPTOR = _CYLINDERMULTITASK,
  __module__ = 'cylinder_multitask_pb2'
  # @@protoc_insertion_point(class_scope:autodrive.workflow.proto.CylinderMultiTask)
  ))
_sym_db.RegisterMessage(CylinderMultiTask)


# @@protoc_insertion_point(module_scope)
