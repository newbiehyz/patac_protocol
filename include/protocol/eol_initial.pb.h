// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: eol_initial.proto

#ifndef PROTOBUF_eol_5finitial_2eproto__INCLUDED
#define PROTOBUF_eol_5finitial_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
#include "camera_extrinsics.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_eol_5finitial_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsChessboardDataImpl();
void InitDefaultsChessboardData();
void InitDefaultsCircleGridDataImpl();
void InitDefaultsCircleGridData();
void InitDefaultsVehicleExtrinsicDataImpl();
void InitDefaultsVehicleExtrinsicData();
void InitDefaultsEolInitialMsgImpl();
void InitDefaultsEolInitialMsg();
inline void InitDefaults() {
  InitDefaultsChessboardData();
  InitDefaultsCircleGridData();
  InitDefaultsVehicleExtrinsicData();
  InitDefaultsEolInitialMsg();
}
}  // namespace protobuf_eol_5finitial_2eproto
namespace autodrive {
namespace workflow {
namespace proto {
class ChessboardData;
class ChessboardDataDefaultTypeInternal;
extern ChessboardDataDefaultTypeInternal _ChessboardData_default_instance_;
class CircleGridData;
class CircleGridDataDefaultTypeInternal;
extern CircleGridDataDefaultTypeInternal _CircleGridData_default_instance_;
class EolInitialMsg;
class EolInitialMsgDefaultTypeInternal;
extern EolInitialMsgDefaultTypeInternal _EolInitialMsg_default_instance_;
class VehicleExtrinsicData;
class VehicleExtrinsicDataDefaultTypeInternal;
extern VehicleExtrinsicDataDefaultTypeInternal _VehicleExtrinsicData_default_instance_;
}  // namespace proto
}  // namespace workflow
}  // namespace autodrive
namespace autodrive {
namespace workflow {
namespace proto {

// ===================================================================

class ChessboardData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:autodrive.workflow.proto.ChessboardData) */ {
 public:
  ChessboardData();
  virtual ~ChessboardData();

  ChessboardData(const ChessboardData& from);

  inline ChessboardData& operator=(const ChessboardData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChessboardData(ChessboardData&& from) noexcept
    : ChessboardData() {
    *this = ::std::move(from);
  }

  inline ChessboardData& operator=(ChessboardData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChessboardData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChessboardData* internal_default_instance() {
    return reinterpret_cast<const ChessboardData*>(
               &_ChessboardData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ChessboardData* other);
  friend void swap(ChessboardData& a, ChessboardData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChessboardData* New() const PROTOBUF_FINAL { return New(NULL); }

  ChessboardData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChessboardData& from);
  void MergeFrom(const ChessboardData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChessboardData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .autodrive.workflow.proto.CameraID camera_id = 1;
  void clear_camera_id();
  static const int kCameraIdFieldNumber = 1;
  ::autodrive::workflow::proto::CameraID camera_id() const;
  void set_camera_id(::autodrive::workflow::proto::CameraID value);

  // float top_left_x = 2;
  void clear_top_left_x();
  static const int kTopLeftXFieldNumber = 2;
  float top_left_x() const;
  void set_top_left_x(float value);

  // float top_left_y = 3;
  void clear_top_left_y();
  static const int kTopLeftYFieldNumber = 3;
  float top_left_y() const;
  void set_top_left_y(float value);

  // float height_interval = 4;
  void clear_height_interval();
  static const int kHeightIntervalFieldNumber = 4;
  float height_interval() const;
  void set_height_interval(float value);

  // float width_interval = 5;
  void clear_width_interval();
  static const int kWidthIntervalFieldNumber = 5;
  float width_interval() const;
  void set_width_interval(float value);

  // @@protoc_insertion_point(class_scope:autodrive.workflow.proto.ChessboardData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int camera_id_;
  float top_left_x_;
  float top_left_y_;
  float height_interval_;
  float width_interval_;
  mutable int _cached_size_;
  friend struct ::protobuf_eol_5finitial_2eproto::TableStruct;
  friend void ::protobuf_eol_5finitial_2eproto::InitDefaultsChessboardDataImpl();
};
// -------------------------------------------------------------------

class CircleGridData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:autodrive.workflow.proto.CircleGridData) */ {
 public:
  CircleGridData();
  virtual ~CircleGridData();

  CircleGridData(const CircleGridData& from);

  inline CircleGridData& operator=(const CircleGridData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CircleGridData(CircleGridData&& from) noexcept
    : CircleGridData() {
    *this = ::std::move(from);
  }

  inline CircleGridData& operator=(CircleGridData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CircleGridData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CircleGridData* internal_default_instance() {
    return reinterpret_cast<const CircleGridData*>(
               &_CircleGridData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CircleGridData* other);
  friend void swap(CircleGridData& a, CircleGridData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CircleGridData* New() const PROTOBUF_FINAL { return New(NULL); }

  CircleGridData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CircleGridData& from);
  void MergeFrom(const CircleGridData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CircleGridData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .autodrive.workflow.proto.CameraID camera_id = 1;
  void clear_camera_id();
  static const int kCameraIdFieldNumber = 1;
  ::autodrive::workflow::proto::CameraID camera_id() const;
  void set_camera_id(::autodrive::workflow::proto::CameraID value);

  // float basic_pt_z = 2;
  void clear_basic_pt_z();
  static const int kBasicPtZFieldNumber = 2;
  float basic_pt_z() const;
  void set_basic_pt_z(float value);

  // float height_interval = 3;
  void clear_height_interval();
  static const int kHeightIntervalFieldNumber = 3;
  float height_interval() const;
  void set_height_interval(float value);

  // float width_interval = 4;
  void clear_width_interval();
  static const int kWidthIntervalFieldNumber = 4;
  float width_interval() const;
  void set_width_interval(float value);

  // float basic_pt_x = 5;
  void clear_basic_pt_x();
  static const int kBasicPtXFieldNumber = 5;
  float basic_pt_x() const;
  void set_basic_pt_x(float value);

  // float basic_pt_y = 6;
  void clear_basic_pt_y();
  static const int kBasicPtYFieldNumber = 6;
  float basic_pt_y() const;
  void set_basic_pt_y(float value);

  // @@protoc_insertion_point(class_scope:autodrive.workflow.proto.CircleGridData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int camera_id_;
  float basic_pt_z_;
  float height_interval_;
  float width_interval_;
  float basic_pt_x_;
  float basic_pt_y_;
  mutable int _cached_size_;
  friend struct ::protobuf_eol_5finitial_2eproto::TableStruct;
  friend void ::protobuf_eol_5finitial_2eproto::InitDefaultsCircleGridDataImpl();
};
// -------------------------------------------------------------------

class VehicleExtrinsicData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:autodrive.workflow.proto.VehicleExtrinsicData) */ {
 public:
  VehicleExtrinsicData();
  virtual ~VehicleExtrinsicData();

  VehicleExtrinsicData(const VehicleExtrinsicData& from);

  inline VehicleExtrinsicData& operator=(const VehicleExtrinsicData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleExtrinsicData(VehicleExtrinsicData&& from) noexcept
    : VehicleExtrinsicData() {
    *this = ::std::move(from);
  }

  inline VehicleExtrinsicData& operator=(VehicleExtrinsicData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleExtrinsicData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleExtrinsicData* internal_default_instance() {
    return reinterpret_cast<const VehicleExtrinsicData*>(
               &_VehicleExtrinsicData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(VehicleExtrinsicData* other);
  friend void swap(VehicleExtrinsicData& a, VehicleExtrinsicData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleExtrinsicData* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleExtrinsicData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VehicleExtrinsicData& from);
  void MergeFrom(const VehicleExtrinsicData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VehicleExtrinsicData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .autodrive.workflow.proto.Extrinsic ori_extrinsic = 2;
  int ori_extrinsic_size() const;
  void clear_ori_extrinsic();
  static const int kOriExtrinsicFieldNumber = 2;
  const ::autodrive::workflow::proto::Extrinsic& ori_extrinsic(int index) const;
  ::autodrive::workflow::proto::Extrinsic* mutable_ori_extrinsic(int index);
  ::autodrive::workflow::proto::Extrinsic* add_ori_extrinsic();
  ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::Extrinsic >*
      mutable_ori_extrinsic();
  const ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::Extrinsic >&
      ori_extrinsic() const;

  // float wheelbase = 1;
  void clear_wheelbase();
  static const int kWheelbaseFieldNumber = 1;
  float wheelbase() const;
  void set_wheelbase(float value);

  // @@protoc_insertion_point(class_scope:autodrive.workflow.proto.VehicleExtrinsicData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::Extrinsic > ori_extrinsic_;
  float wheelbase_;
  mutable int _cached_size_;
  friend struct ::protobuf_eol_5finitial_2eproto::TableStruct;
  friend void ::protobuf_eol_5finitial_2eproto::InitDefaultsVehicleExtrinsicDataImpl();
};
// -------------------------------------------------------------------

class EolInitialMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:autodrive.workflow.proto.EolInitialMsg) */ {
 public:
  EolInitialMsg();
  virtual ~EolInitialMsg();

  EolInitialMsg(const EolInitialMsg& from);

  inline EolInitialMsg& operator=(const EolInitialMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EolInitialMsg(EolInitialMsg&& from) noexcept
    : EolInitialMsg() {
    *this = ::std::move(from);
  }

  inline EolInitialMsg& operator=(EolInitialMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EolInitialMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EolInitialMsg* internal_default_instance() {
    return reinterpret_cast<const EolInitialMsg*>(
               &_EolInitialMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(EolInitialMsg* other);
  friend void swap(EolInitialMsg& a, EolInitialMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EolInitialMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  EolInitialMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EolInitialMsg& from);
  void MergeFrom(const EolInitialMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EolInitialMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .autodrive.workflow.proto.ChessboardData cb_data = 4;
  int cb_data_size() const;
  void clear_cb_data();
  static const int kCbDataFieldNumber = 4;
  const ::autodrive::workflow::proto::ChessboardData& cb_data(int index) const;
  ::autodrive::workflow::proto::ChessboardData* mutable_cb_data(int index);
  ::autodrive::workflow::proto::ChessboardData* add_cb_data();
  ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::ChessboardData >*
      mutable_cb_data();
  const ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::ChessboardData >&
      cb_data() const;

  // repeated .autodrive.workflow.proto.CircleGridData cg_data = 5;
  int cg_data_size() const;
  void clear_cg_data();
  static const int kCgDataFieldNumber = 5;
  const ::autodrive::workflow::proto::CircleGridData& cg_data(int index) const;
  ::autodrive::workflow::proto::CircleGridData* mutable_cg_data(int index);
  ::autodrive::workflow::proto::CircleGridData* add_cg_data();
  ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::CircleGridData >*
      mutable_cg_data();
  const ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::CircleGridData >&
      cg_data() const;

  // .autodrive.workflow.proto.MsgHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::autodrive::workflow::proto::MsgHeader& header() const;
  ::autodrive::workflow::proto::MsgHeader* release_header();
  ::autodrive::workflow::proto::MsgHeader* mutable_header();
  void set_allocated_header(::autodrive::workflow::proto::MsgHeader* header);

  // .autodrive.workflow.proto.Error error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::autodrive::workflow::proto::Error& error() const;
  ::autodrive::workflow::proto::Error* release_error();
  ::autodrive::workflow::proto::Error* mutable_error();
  void set_allocated_error(::autodrive::workflow::proto::Error* error);

  // .autodrive.workflow.proto.VehicleExtrinsicData vehicle_data = 3;
  bool has_vehicle_data() const;
  void clear_vehicle_data();
  static const int kVehicleDataFieldNumber = 3;
  const ::autodrive::workflow::proto::VehicleExtrinsicData& vehicle_data() const;
  ::autodrive::workflow::proto::VehicleExtrinsicData* release_vehicle_data();
  ::autodrive::workflow::proto::VehicleExtrinsicData* mutable_vehicle_data();
  void set_allocated_vehicle_data(::autodrive::workflow::proto::VehicleExtrinsicData* vehicle_data);

  // @@protoc_insertion_point(class_scope:autodrive.workflow.proto.EolInitialMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::ChessboardData > cb_data_;
  ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::CircleGridData > cg_data_;
  ::autodrive::workflow::proto::MsgHeader* header_;
  ::autodrive::workflow::proto::Error* error_;
  ::autodrive::workflow::proto::VehicleExtrinsicData* vehicle_data_;
  mutable int _cached_size_;
  friend struct ::protobuf_eol_5finitial_2eproto::TableStruct;
  friend void ::protobuf_eol_5finitial_2eproto::InitDefaultsEolInitialMsgImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ChessboardData

// .autodrive.workflow.proto.CameraID camera_id = 1;
inline void ChessboardData::clear_camera_id() {
  camera_id_ = 0;
}
inline ::autodrive::workflow::proto::CameraID ChessboardData::camera_id() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.ChessboardData.camera_id)
  return static_cast< ::autodrive::workflow::proto::CameraID >(camera_id_);
}
inline void ChessboardData::set_camera_id(::autodrive::workflow::proto::CameraID value) {
  
  camera_id_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.ChessboardData.camera_id)
}

// float top_left_x = 2;
inline void ChessboardData::clear_top_left_x() {
  top_left_x_ = 0;
}
inline float ChessboardData::top_left_x() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.ChessboardData.top_left_x)
  return top_left_x_;
}
inline void ChessboardData::set_top_left_x(float value) {
  
  top_left_x_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.ChessboardData.top_left_x)
}

// float top_left_y = 3;
inline void ChessboardData::clear_top_left_y() {
  top_left_y_ = 0;
}
inline float ChessboardData::top_left_y() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.ChessboardData.top_left_y)
  return top_left_y_;
}
inline void ChessboardData::set_top_left_y(float value) {
  
  top_left_y_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.ChessboardData.top_left_y)
}

// float height_interval = 4;
inline void ChessboardData::clear_height_interval() {
  height_interval_ = 0;
}
inline float ChessboardData::height_interval() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.ChessboardData.height_interval)
  return height_interval_;
}
inline void ChessboardData::set_height_interval(float value) {
  
  height_interval_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.ChessboardData.height_interval)
}

// float width_interval = 5;
inline void ChessboardData::clear_width_interval() {
  width_interval_ = 0;
}
inline float ChessboardData::width_interval() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.ChessboardData.width_interval)
  return width_interval_;
}
inline void ChessboardData::set_width_interval(float value) {
  
  width_interval_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.ChessboardData.width_interval)
}

// -------------------------------------------------------------------

// CircleGridData

// .autodrive.workflow.proto.CameraID camera_id = 1;
inline void CircleGridData::clear_camera_id() {
  camera_id_ = 0;
}
inline ::autodrive::workflow::proto::CameraID CircleGridData::camera_id() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.CircleGridData.camera_id)
  return static_cast< ::autodrive::workflow::proto::CameraID >(camera_id_);
}
inline void CircleGridData::set_camera_id(::autodrive::workflow::proto::CameraID value) {
  
  camera_id_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.CircleGridData.camera_id)
}

// float basic_pt_z = 2;
inline void CircleGridData::clear_basic_pt_z() {
  basic_pt_z_ = 0;
}
inline float CircleGridData::basic_pt_z() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.CircleGridData.basic_pt_z)
  return basic_pt_z_;
}
inline void CircleGridData::set_basic_pt_z(float value) {
  
  basic_pt_z_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.CircleGridData.basic_pt_z)
}

// float height_interval = 3;
inline void CircleGridData::clear_height_interval() {
  height_interval_ = 0;
}
inline float CircleGridData::height_interval() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.CircleGridData.height_interval)
  return height_interval_;
}
inline void CircleGridData::set_height_interval(float value) {
  
  height_interval_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.CircleGridData.height_interval)
}

// float width_interval = 4;
inline void CircleGridData::clear_width_interval() {
  width_interval_ = 0;
}
inline float CircleGridData::width_interval() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.CircleGridData.width_interval)
  return width_interval_;
}
inline void CircleGridData::set_width_interval(float value) {
  
  width_interval_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.CircleGridData.width_interval)
}

// float basic_pt_x = 5;
inline void CircleGridData::clear_basic_pt_x() {
  basic_pt_x_ = 0;
}
inline float CircleGridData::basic_pt_x() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.CircleGridData.basic_pt_x)
  return basic_pt_x_;
}
inline void CircleGridData::set_basic_pt_x(float value) {
  
  basic_pt_x_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.CircleGridData.basic_pt_x)
}

// float basic_pt_y = 6;
inline void CircleGridData::clear_basic_pt_y() {
  basic_pt_y_ = 0;
}
inline float CircleGridData::basic_pt_y() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.CircleGridData.basic_pt_y)
  return basic_pt_y_;
}
inline void CircleGridData::set_basic_pt_y(float value) {
  
  basic_pt_y_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.CircleGridData.basic_pt_y)
}

// -------------------------------------------------------------------

// VehicleExtrinsicData

// float wheelbase = 1;
inline void VehicleExtrinsicData::clear_wheelbase() {
  wheelbase_ = 0;
}
inline float VehicleExtrinsicData::wheelbase() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.VehicleExtrinsicData.wheelbase)
  return wheelbase_;
}
inline void VehicleExtrinsicData::set_wheelbase(float value) {
  
  wheelbase_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.VehicleExtrinsicData.wheelbase)
}

// repeated .autodrive.workflow.proto.Extrinsic ori_extrinsic = 2;
inline int VehicleExtrinsicData::ori_extrinsic_size() const {
  return ori_extrinsic_.size();
}
inline const ::autodrive::workflow::proto::Extrinsic& VehicleExtrinsicData::ori_extrinsic(int index) const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.VehicleExtrinsicData.ori_extrinsic)
  return ori_extrinsic_.Get(index);
}
inline ::autodrive::workflow::proto::Extrinsic* VehicleExtrinsicData::mutable_ori_extrinsic(int index) {
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.VehicleExtrinsicData.ori_extrinsic)
  return ori_extrinsic_.Mutable(index);
}
inline ::autodrive::workflow::proto::Extrinsic* VehicleExtrinsicData::add_ori_extrinsic() {
  // @@protoc_insertion_point(field_add:autodrive.workflow.proto.VehicleExtrinsicData.ori_extrinsic)
  return ori_extrinsic_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::Extrinsic >*
VehicleExtrinsicData::mutable_ori_extrinsic() {
  // @@protoc_insertion_point(field_mutable_list:autodrive.workflow.proto.VehicleExtrinsicData.ori_extrinsic)
  return &ori_extrinsic_;
}
inline const ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::Extrinsic >&
VehicleExtrinsicData::ori_extrinsic() const {
  // @@protoc_insertion_point(field_list:autodrive.workflow.proto.VehicleExtrinsicData.ori_extrinsic)
  return ori_extrinsic_;
}

// -------------------------------------------------------------------

// EolInitialMsg

// .autodrive.workflow.proto.MsgHeader header = 1;
inline bool EolInitialMsg::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::autodrive::workflow::proto::MsgHeader& EolInitialMsg::header() const {
  const ::autodrive::workflow::proto::MsgHeader* p = header_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.EolInitialMsg.header)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::MsgHeader*>(
      &::autodrive::workflow::proto::_MsgHeader_default_instance_);
}
inline ::autodrive::workflow::proto::MsgHeader* EolInitialMsg::release_header() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.EolInitialMsg.header)
  
  ::autodrive::workflow::proto::MsgHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::MsgHeader* EolInitialMsg::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::autodrive::workflow::proto::MsgHeader;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.EolInitialMsg.header)
  return header_;
}
inline void EolInitialMsg::set_allocated_header(::autodrive::workflow::proto::MsgHeader* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.EolInitialMsg.header)
}

// .autodrive.workflow.proto.Error error = 2;
inline bool EolInitialMsg::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline const ::autodrive::workflow::proto::Error& EolInitialMsg::error() const {
  const ::autodrive::workflow::proto::Error* p = error_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.EolInitialMsg.error)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::Error*>(
      &::autodrive::workflow::proto::_Error_default_instance_);
}
inline ::autodrive::workflow::proto::Error* EolInitialMsg::release_error() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.EolInitialMsg.error)
  
  ::autodrive::workflow::proto::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::Error* EolInitialMsg::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::autodrive::workflow::proto::Error;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.EolInitialMsg.error)
  return error_;
}
inline void EolInitialMsg::set_allocated_error(::autodrive::workflow::proto::Error* error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(error_);
  }
  if (error) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    
  } else {
    
  }
  error_ = error;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.EolInitialMsg.error)
}

// .autodrive.workflow.proto.VehicleExtrinsicData vehicle_data = 3;
inline bool EolInitialMsg::has_vehicle_data() const {
  return this != internal_default_instance() && vehicle_data_ != NULL;
}
inline void EolInitialMsg::clear_vehicle_data() {
  if (GetArenaNoVirtual() == NULL && vehicle_data_ != NULL) {
    delete vehicle_data_;
  }
  vehicle_data_ = NULL;
}
inline const ::autodrive::workflow::proto::VehicleExtrinsicData& EolInitialMsg::vehicle_data() const {
  const ::autodrive::workflow::proto::VehicleExtrinsicData* p = vehicle_data_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.EolInitialMsg.vehicle_data)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::VehicleExtrinsicData*>(
      &::autodrive::workflow::proto::_VehicleExtrinsicData_default_instance_);
}
inline ::autodrive::workflow::proto::VehicleExtrinsicData* EolInitialMsg::release_vehicle_data() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.EolInitialMsg.vehicle_data)
  
  ::autodrive::workflow::proto::VehicleExtrinsicData* temp = vehicle_data_;
  vehicle_data_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::VehicleExtrinsicData* EolInitialMsg::mutable_vehicle_data() {
  
  if (vehicle_data_ == NULL) {
    vehicle_data_ = new ::autodrive::workflow::proto::VehicleExtrinsicData;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.EolInitialMsg.vehicle_data)
  return vehicle_data_;
}
inline void EolInitialMsg::set_allocated_vehicle_data(::autodrive::workflow::proto::VehicleExtrinsicData* vehicle_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vehicle_data_;
  }
  if (vehicle_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vehicle_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vehicle_data, submessage_arena);
    }
    
  } else {
    
  }
  vehicle_data_ = vehicle_data;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.EolInitialMsg.vehicle_data)
}

// repeated .autodrive.workflow.proto.ChessboardData cb_data = 4;
inline int EolInitialMsg::cb_data_size() const {
  return cb_data_.size();
}
inline void EolInitialMsg::clear_cb_data() {
  cb_data_.Clear();
}
inline const ::autodrive::workflow::proto::ChessboardData& EolInitialMsg::cb_data(int index) const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.EolInitialMsg.cb_data)
  return cb_data_.Get(index);
}
inline ::autodrive::workflow::proto::ChessboardData* EolInitialMsg::mutable_cb_data(int index) {
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.EolInitialMsg.cb_data)
  return cb_data_.Mutable(index);
}
inline ::autodrive::workflow::proto::ChessboardData* EolInitialMsg::add_cb_data() {
  // @@protoc_insertion_point(field_add:autodrive.workflow.proto.EolInitialMsg.cb_data)
  return cb_data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::ChessboardData >*
EolInitialMsg::mutable_cb_data() {
  // @@protoc_insertion_point(field_mutable_list:autodrive.workflow.proto.EolInitialMsg.cb_data)
  return &cb_data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::ChessboardData >&
EolInitialMsg::cb_data() const {
  // @@protoc_insertion_point(field_list:autodrive.workflow.proto.EolInitialMsg.cb_data)
  return cb_data_;
}

// repeated .autodrive.workflow.proto.CircleGridData cg_data = 5;
inline int EolInitialMsg::cg_data_size() const {
  return cg_data_.size();
}
inline void EolInitialMsg::clear_cg_data() {
  cg_data_.Clear();
}
inline const ::autodrive::workflow::proto::CircleGridData& EolInitialMsg::cg_data(int index) const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.EolInitialMsg.cg_data)
  return cg_data_.Get(index);
}
inline ::autodrive::workflow::proto::CircleGridData* EolInitialMsg::mutable_cg_data(int index) {
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.EolInitialMsg.cg_data)
  return cg_data_.Mutable(index);
}
inline ::autodrive::workflow::proto::CircleGridData* EolInitialMsg::add_cg_data() {
  // @@protoc_insertion_point(field_add:autodrive.workflow.proto.EolInitialMsg.cg_data)
  return cg_data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::CircleGridData >*
EolInitialMsg::mutable_cg_data() {
  // @@protoc_insertion_point(field_mutable_list:autodrive.workflow.proto.EolInitialMsg.cg_data)
  return &cg_data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::CircleGridData >&
EolInitialMsg::cg_data() const {
  // @@protoc_insertion_point(field_list:autodrive.workflow.proto.EolInitialMsg.cg_data)
  return cg_data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace workflow
}  // namespace autodrive

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_eol_5finitial_2eproto__INCLUDED
