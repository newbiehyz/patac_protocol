// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: camera_extrinsics.proto

#ifndef PROTOBUF_camera_5fextrinsics_2eproto__INCLUDED
#define PROTOBUF_camera_5fextrinsics_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_camera_5fextrinsics_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsExtrinsicImpl();
void InitDefaultsExtrinsic();
void InitDefaultsCameraExtrinsicsMsgImpl();
void InitDefaultsCameraExtrinsicsMsg();
inline void InitDefaults() {
  InitDefaultsExtrinsic();
  InitDefaultsCameraExtrinsicsMsg();
}
}  // namespace protobuf_camera_5fextrinsics_2eproto
namespace autodrive {
namespace workflow {
namespace proto {
class CameraExtrinsicsMsg;
class CameraExtrinsicsMsgDefaultTypeInternal;
extern CameraExtrinsicsMsgDefaultTypeInternal _CameraExtrinsicsMsg_default_instance_;
class Extrinsic;
class ExtrinsicDefaultTypeInternal;
extern ExtrinsicDefaultTypeInternal _Extrinsic_default_instance_;
}  // namespace proto
}  // namespace workflow
}  // namespace autodrive
namespace autodrive {
namespace workflow {
namespace proto {

enum CameraID {
  CAMERA_DIRECTION_UNKNOWN = 0,
  CAMERA_DIRECTION_BACK = 1,
  CAMERA_DIRECTION_FRONT = 2,
  CAMERA_DIRECTION_LEFT = 3,
  CAMERA_DIRECTION_RIGHT = 4,
  CAMERA_DIRECTION_PIN_REAR = 5,
  CAMERA_DIRECTION_PIN_FRONT = 6,
  CAMERA_DIRECTION_OMNI_BACK = 7,
  CAMERA_DIRECTION_OMNI_FRONT = 8,
  CAMERA_DIRECTION_OMNI_LEFT = 9,
  CAMERA_DIRECTION_OMNI_RIGHT = 10,
  CameraID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CameraID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CameraID_IsValid(int value);
const CameraID CameraID_MIN = CAMERA_DIRECTION_UNKNOWN;
const CameraID CameraID_MAX = CAMERA_DIRECTION_OMNI_RIGHT;
const int CameraID_ARRAYSIZE = CameraID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CameraID_descriptor();
inline const ::std::string& CameraID_Name(CameraID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CameraID_descriptor(), value);
}
inline bool CameraID_Parse(
    const ::std::string& name, CameraID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CameraID>(
    CameraID_descriptor(), name, value);
}
// ===================================================================

class Extrinsic : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:autodrive.workflow.proto.Extrinsic) */ {
 public:
  Extrinsic();
  virtual ~Extrinsic();

  Extrinsic(const Extrinsic& from);

  inline Extrinsic& operator=(const Extrinsic& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Extrinsic(Extrinsic&& from) noexcept
    : Extrinsic() {
    *this = ::std::move(from);
  }

  inline Extrinsic& operator=(Extrinsic&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Extrinsic& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Extrinsic* internal_default_instance() {
    return reinterpret_cast<const Extrinsic*>(
               &_Extrinsic_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Extrinsic* other);
  friend void swap(Extrinsic& a, Extrinsic& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Extrinsic* New() const PROTOBUF_FINAL { return New(NULL); }

  Extrinsic* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Extrinsic& from);
  void MergeFrom(const Extrinsic& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Extrinsic* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // float roll = 4;
  void clear_roll();
  static const int kRollFieldNumber = 4;
  float roll() const;
  void set_roll(float value);

  // float pitch = 5;
  void clear_pitch();
  static const int kPitchFieldNumber = 5;
  float pitch() const;
  void set_pitch(float value);

  // float yaw = 6;
  void clear_yaw();
  static const int kYawFieldNumber = 6;
  float yaw() const;
  void set_yaw(float value);

  // .autodrive.workflow.proto.CameraID cam_id = 7;
  void clear_cam_id();
  static const int kCamIdFieldNumber = 7;
  ::autodrive::workflow::proto::CameraID cam_id() const;
  void set_cam_id(::autodrive::workflow::proto::CameraID value);

  // uint32 num_extrinsic = 8;
  void clear_num_extrinsic();
  static const int kNumExtrinsicFieldNumber = 8;
  ::google::protobuf::uint32 num_extrinsic() const;
  void set_num_extrinsic(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:autodrive.workflow.proto.Extrinsic)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  float roll_;
  float pitch_;
  float yaw_;
  int cam_id_;
  ::google::protobuf::uint32 num_extrinsic_;
  mutable int _cached_size_;
  friend struct ::protobuf_camera_5fextrinsics_2eproto::TableStruct;
  friend void ::protobuf_camera_5fextrinsics_2eproto::InitDefaultsExtrinsicImpl();
};
// -------------------------------------------------------------------

class CameraExtrinsicsMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:autodrive.workflow.proto.CameraExtrinsicsMsg) */ {
 public:
  CameraExtrinsicsMsg();
  virtual ~CameraExtrinsicsMsg();

  CameraExtrinsicsMsg(const CameraExtrinsicsMsg& from);

  inline CameraExtrinsicsMsg& operator=(const CameraExtrinsicsMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CameraExtrinsicsMsg(CameraExtrinsicsMsg&& from) noexcept
    : CameraExtrinsicsMsg() {
    *this = ::std::move(from);
  }

  inline CameraExtrinsicsMsg& operator=(CameraExtrinsicsMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CameraExtrinsicsMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CameraExtrinsicsMsg* internal_default_instance() {
    return reinterpret_cast<const CameraExtrinsicsMsg*>(
               &_CameraExtrinsicsMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CameraExtrinsicsMsg* other);
  friend void swap(CameraExtrinsicsMsg& a, CameraExtrinsicsMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CameraExtrinsicsMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  CameraExtrinsicsMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CameraExtrinsicsMsg& from);
  void MergeFrom(const CameraExtrinsicsMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CameraExtrinsicsMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .autodrive.workflow.proto.Extrinsic extrinsics = 3;
  int extrinsics_size() const;
  void clear_extrinsics();
  static const int kExtrinsicsFieldNumber = 3;
  const ::autodrive::workflow::proto::Extrinsic& extrinsics(int index) const;
  ::autodrive::workflow::proto::Extrinsic* mutable_extrinsics(int index);
  ::autodrive::workflow::proto::Extrinsic* add_extrinsics();
  ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::Extrinsic >*
      mutable_extrinsics();
  const ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::Extrinsic >&
      extrinsics() const;

  // .autodrive.workflow.proto.MsgHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::autodrive::workflow::proto::MsgHeader& header() const;
  ::autodrive::workflow::proto::MsgHeader* release_header();
  ::autodrive::workflow::proto::MsgHeader* mutable_header();
  void set_allocated_header(::autodrive::workflow::proto::MsgHeader* header);

  // .autodrive.workflow.proto.Error error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::autodrive::workflow::proto::Error& error() const;
  ::autodrive::workflow::proto::Error* release_error();
  ::autodrive::workflow::proto::Error* mutable_error();
  void set_allocated_error(::autodrive::workflow::proto::Error* error);

  // @@protoc_insertion_point(class_scope:autodrive.workflow.proto.CameraExtrinsicsMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::Extrinsic > extrinsics_;
  ::autodrive::workflow::proto::MsgHeader* header_;
  ::autodrive::workflow::proto::Error* error_;
  mutable int _cached_size_;
  friend struct ::protobuf_camera_5fextrinsics_2eproto::TableStruct;
  friend void ::protobuf_camera_5fextrinsics_2eproto::InitDefaultsCameraExtrinsicsMsgImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Extrinsic

// float x = 1;
inline void Extrinsic::clear_x() {
  x_ = 0;
}
inline float Extrinsic::x() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.Extrinsic.x)
  return x_;
}
inline void Extrinsic::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.Extrinsic.x)
}

// float y = 2;
inline void Extrinsic::clear_y() {
  y_ = 0;
}
inline float Extrinsic::y() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.Extrinsic.y)
  return y_;
}
inline void Extrinsic::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.Extrinsic.y)
}

// float z = 3;
inline void Extrinsic::clear_z() {
  z_ = 0;
}
inline float Extrinsic::z() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.Extrinsic.z)
  return z_;
}
inline void Extrinsic::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.Extrinsic.z)
}

// float roll = 4;
inline void Extrinsic::clear_roll() {
  roll_ = 0;
}
inline float Extrinsic::roll() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.Extrinsic.roll)
  return roll_;
}
inline void Extrinsic::set_roll(float value) {
  
  roll_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.Extrinsic.roll)
}

// float pitch = 5;
inline void Extrinsic::clear_pitch() {
  pitch_ = 0;
}
inline float Extrinsic::pitch() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.Extrinsic.pitch)
  return pitch_;
}
inline void Extrinsic::set_pitch(float value) {
  
  pitch_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.Extrinsic.pitch)
}

// float yaw = 6;
inline void Extrinsic::clear_yaw() {
  yaw_ = 0;
}
inline float Extrinsic::yaw() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.Extrinsic.yaw)
  return yaw_;
}
inline void Extrinsic::set_yaw(float value) {
  
  yaw_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.Extrinsic.yaw)
}

// .autodrive.workflow.proto.CameraID cam_id = 7;
inline void Extrinsic::clear_cam_id() {
  cam_id_ = 0;
}
inline ::autodrive::workflow::proto::CameraID Extrinsic::cam_id() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.Extrinsic.cam_id)
  return static_cast< ::autodrive::workflow::proto::CameraID >(cam_id_);
}
inline void Extrinsic::set_cam_id(::autodrive::workflow::proto::CameraID value) {
  
  cam_id_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.Extrinsic.cam_id)
}

// uint32 num_extrinsic = 8;
inline void Extrinsic::clear_num_extrinsic() {
  num_extrinsic_ = 0u;
}
inline ::google::protobuf::uint32 Extrinsic::num_extrinsic() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.Extrinsic.num_extrinsic)
  return num_extrinsic_;
}
inline void Extrinsic::set_num_extrinsic(::google::protobuf::uint32 value) {
  
  num_extrinsic_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.Extrinsic.num_extrinsic)
}

// -------------------------------------------------------------------

// CameraExtrinsicsMsg

// .autodrive.workflow.proto.MsgHeader header = 1;
inline bool CameraExtrinsicsMsg::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::autodrive::workflow::proto::MsgHeader& CameraExtrinsicsMsg::header() const {
  const ::autodrive::workflow::proto::MsgHeader* p = header_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.CameraExtrinsicsMsg.header)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::MsgHeader*>(
      &::autodrive::workflow::proto::_MsgHeader_default_instance_);
}
inline ::autodrive::workflow::proto::MsgHeader* CameraExtrinsicsMsg::release_header() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.CameraExtrinsicsMsg.header)
  
  ::autodrive::workflow::proto::MsgHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::MsgHeader* CameraExtrinsicsMsg::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::autodrive::workflow::proto::MsgHeader;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.CameraExtrinsicsMsg.header)
  return header_;
}
inline void CameraExtrinsicsMsg::set_allocated_header(::autodrive::workflow::proto::MsgHeader* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.CameraExtrinsicsMsg.header)
}

// .autodrive.workflow.proto.Error error = 2;
inline bool CameraExtrinsicsMsg::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline const ::autodrive::workflow::proto::Error& CameraExtrinsicsMsg::error() const {
  const ::autodrive::workflow::proto::Error* p = error_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.CameraExtrinsicsMsg.error)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::Error*>(
      &::autodrive::workflow::proto::_Error_default_instance_);
}
inline ::autodrive::workflow::proto::Error* CameraExtrinsicsMsg::release_error() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.CameraExtrinsicsMsg.error)
  
  ::autodrive::workflow::proto::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::Error* CameraExtrinsicsMsg::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::autodrive::workflow::proto::Error;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.CameraExtrinsicsMsg.error)
  return error_;
}
inline void CameraExtrinsicsMsg::set_allocated_error(::autodrive::workflow::proto::Error* error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(error_);
  }
  if (error) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    
  } else {
    
  }
  error_ = error;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.CameraExtrinsicsMsg.error)
}

// repeated .autodrive.workflow.proto.Extrinsic extrinsics = 3;
inline int CameraExtrinsicsMsg::extrinsics_size() const {
  return extrinsics_.size();
}
inline void CameraExtrinsicsMsg::clear_extrinsics() {
  extrinsics_.Clear();
}
inline const ::autodrive::workflow::proto::Extrinsic& CameraExtrinsicsMsg::extrinsics(int index) const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.CameraExtrinsicsMsg.extrinsics)
  return extrinsics_.Get(index);
}
inline ::autodrive::workflow::proto::Extrinsic* CameraExtrinsicsMsg::mutable_extrinsics(int index) {
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.CameraExtrinsicsMsg.extrinsics)
  return extrinsics_.Mutable(index);
}
inline ::autodrive::workflow::proto::Extrinsic* CameraExtrinsicsMsg::add_extrinsics() {
  // @@protoc_insertion_point(field_add:autodrive.workflow.proto.CameraExtrinsicsMsg.extrinsics)
  return extrinsics_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::Extrinsic >*
CameraExtrinsicsMsg::mutable_extrinsics() {
  // @@protoc_insertion_point(field_mutable_list:autodrive.workflow.proto.CameraExtrinsicsMsg.extrinsics)
  return &extrinsics_;
}
inline const ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::Extrinsic >&
CameraExtrinsicsMsg::extrinsics() const {
  // @@protoc_insertion_point(field_list:autodrive.workflow.proto.CameraExtrinsicsMsg.extrinsics)
  return extrinsics_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace workflow
}  // namespace autodrive

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::autodrive::workflow::proto::CameraID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::autodrive::workflow::proto::CameraID>() {
  return ::autodrive::workflow::proto::CameraID_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_camera_5fextrinsics_2eproto__INCLUDED
