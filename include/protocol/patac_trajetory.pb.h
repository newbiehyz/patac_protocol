// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: patac_trajetory.proto

#ifndef PROTOBUF_patac_5ftrajetory_2eproto__INCLUDED
#define PROTOBUF_patac_5ftrajetory_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "basic.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_patac_5ftrajetory_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsTrajectoryPointImpl();
void InitDefaultsTrajectoryPoint();
void InitDefaultsTrajectoryImpl();
void InitDefaultsTrajectory();
inline void InitDefaults() {
  InitDefaultsTrajectoryPoint();
  InitDefaultsTrajectory();
}
}  // namespace protobuf_patac_5ftrajetory_2eproto
namespace patac_hpp {
class Trajectory;
class TrajectoryDefaultTypeInternal;
extern TrajectoryDefaultTypeInternal _Trajectory_default_instance_;
class TrajectoryPoint;
class TrajectoryPointDefaultTypeInternal;
extern TrajectoryPointDefaultTypeInternal _TrajectoryPoint_default_instance_;
}  // namespace patac_hpp
namespace patac_hpp {

// ===================================================================

class TrajectoryPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:patac_hpp.TrajectoryPoint) */ {
 public:
  TrajectoryPoint();
  virtual ~TrajectoryPoint();

  TrajectoryPoint(const TrajectoryPoint& from);

  inline TrajectoryPoint& operator=(const TrajectoryPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrajectoryPoint(TrajectoryPoint&& from) noexcept
    : TrajectoryPoint() {
    *this = ::std::move(from);
  }

  inline TrajectoryPoint& operator=(TrajectoryPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TrajectoryPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrajectoryPoint* internal_default_instance() {
    return reinterpret_cast<const TrajectoryPoint*>(
               &_TrajectoryPoint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TrajectoryPoint* other);
  friend void swap(TrajectoryPoint& a, TrajectoryPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrajectoryPoint* New() const PROTOBUF_FINAL { return New(NULL); }

  TrajectoryPoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TrajectoryPoint& from);
  void MergeFrom(const TrajectoryPoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TrajectoryPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // uint32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // float x = 3;
  void clear_x();
  static const int kXFieldNumber = 3;
  float x() const;
  void set_x(float value);

  // float y = 4;
  void clear_y();
  static const int kYFieldNumber = 4;
  float y() const;
  void set_y(float value);

  // float z = 5;
  void clear_z();
  static const int kZFieldNumber = 5;
  float z() const;
  void set_z(float value);

  // float qx = 6;
  void clear_qx();
  static const int kQxFieldNumber = 6;
  float qx() const;
  void set_qx(float value);

  // float qy = 7;
  void clear_qy();
  static const int kQyFieldNumber = 7;
  float qy() const;
  void set_qy(float value);

  // float qz = 8;
  void clear_qz();
  static const int kQzFieldNumber = 8;
  float qz() const;
  void set_qz(float value);

  // float qw = 9;
  void clear_qw();
  static const int kQwFieldNumber = 9;
  float qw() const;
  void set_qw(float value);

  // float velocity = 10;
  void clear_velocity();
  static const int kVelocityFieldNumber = 10;
  float velocity() const;
  void set_velocity(float value);

  // float angular_velocity = 11;
  void clear_angular_velocity();
  static const int kAngularVelocityFieldNumber = 11;
  float angular_velocity() const;
  void set_angular_velocity(float value);

  // @@protoc_insertion_point(class_scope:patac_hpp.TrajectoryPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::uint32 id_;
  float x_;
  float y_;
  float z_;
  float qx_;
  float qy_;
  float qz_;
  float qw_;
  float velocity_;
  float angular_velocity_;
  mutable int _cached_size_;
  friend struct ::protobuf_patac_5ftrajetory_2eproto::TableStruct;
  friend void ::protobuf_patac_5ftrajetory_2eproto::InitDefaultsTrajectoryPointImpl();
};
// -------------------------------------------------------------------

class Trajectory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:patac_hpp.Trajectory) */ {
 public:
  Trajectory();
  virtual ~Trajectory();

  Trajectory(const Trajectory& from);

  inline Trajectory& operator=(const Trajectory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Trajectory(Trajectory&& from) noexcept
    : Trajectory() {
    *this = ::std::move(from);
  }

  inline Trajectory& operator=(Trajectory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Trajectory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Trajectory* internal_default_instance() {
    return reinterpret_cast<const Trajectory*>(
               &_Trajectory_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Trajectory* other);
  friend void swap(Trajectory& a, Trajectory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Trajectory* New() const PROTOBUF_FINAL { return New(NULL); }

  Trajectory* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Trajectory& from);
  void MergeFrom(const Trajectory& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Trajectory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .patac_hpp.TrajectoryPoint trajectory_point_list = 2;
  int trajectory_point_list_size() const;
  void clear_trajectory_point_list();
  static const int kTrajectoryPointListFieldNumber = 2;
  const ::patac_hpp::TrajectoryPoint& trajectory_point_list(int index) const;
  ::patac_hpp::TrajectoryPoint* mutable_trajectory_point_list(int index);
  ::patac_hpp::TrajectoryPoint* add_trajectory_point_list();
  ::google::protobuf::RepeatedPtrField< ::patac_hpp::TrajectoryPoint >*
      mutable_trajectory_point_list();
  const ::google::protobuf::RepeatedPtrField< ::patac_hpp::TrajectoryPoint >&
      trajectory_point_list() const;

  // uint32 num_trajectory_point = 1;
  void clear_num_trajectory_point();
  static const int kNumTrajectoryPointFieldNumber = 1;
  ::google::protobuf::uint32 num_trajectory_point() const;
  void set_num_trajectory_point(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:patac_hpp.Trajectory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::patac_hpp::TrajectoryPoint > trajectory_point_list_;
  ::google::protobuf::uint32 num_trajectory_point_;
  mutable int _cached_size_;
  friend struct ::protobuf_patac_5ftrajetory_2eproto::TableStruct;
  friend void ::protobuf_patac_5ftrajetory_2eproto::InitDefaultsTrajectoryImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TrajectoryPoint

// uint64 timestamp = 1;
inline void TrajectoryPoint::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TrajectoryPoint::timestamp() const {
  // @@protoc_insertion_point(field_get:patac_hpp.TrajectoryPoint.timestamp)
  return timestamp_;
}
inline void TrajectoryPoint::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:patac_hpp.TrajectoryPoint.timestamp)
}

// uint32 id = 2;
inline void TrajectoryPoint::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 TrajectoryPoint::id() const {
  // @@protoc_insertion_point(field_get:patac_hpp.TrajectoryPoint.id)
  return id_;
}
inline void TrajectoryPoint::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:patac_hpp.TrajectoryPoint.id)
}

// float x = 3;
inline void TrajectoryPoint::clear_x() {
  x_ = 0;
}
inline float TrajectoryPoint::x() const {
  // @@protoc_insertion_point(field_get:patac_hpp.TrajectoryPoint.x)
  return x_;
}
inline void TrajectoryPoint::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:patac_hpp.TrajectoryPoint.x)
}

// float y = 4;
inline void TrajectoryPoint::clear_y() {
  y_ = 0;
}
inline float TrajectoryPoint::y() const {
  // @@protoc_insertion_point(field_get:patac_hpp.TrajectoryPoint.y)
  return y_;
}
inline void TrajectoryPoint::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:patac_hpp.TrajectoryPoint.y)
}

// float z = 5;
inline void TrajectoryPoint::clear_z() {
  z_ = 0;
}
inline float TrajectoryPoint::z() const {
  // @@protoc_insertion_point(field_get:patac_hpp.TrajectoryPoint.z)
  return z_;
}
inline void TrajectoryPoint::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:patac_hpp.TrajectoryPoint.z)
}

// float qx = 6;
inline void TrajectoryPoint::clear_qx() {
  qx_ = 0;
}
inline float TrajectoryPoint::qx() const {
  // @@protoc_insertion_point(field_get:patac_hpp.TrajectoryPoint.qx)
  return qx_;
}
inline void TrajectoryPoint::set_qx(float value) {
  
  qx_ = value;
  // @@protoc_insertion_point(field_set:patac_hpp.TrajectoryPoint.qx)
}

// float qy = 7;
inline void TrajectoryPoint::clear_qy() {
  qy_ = 0;
}
inline float TrajectoryPoint::qy() const {
  // @@protoc_insertion_point(field_get:patac_hpp.TrajectoryPoint.qy)
  return qy_;
}
inline void TrajectoryPoint::set_qy(float value) {
  
  qy_ = value;
  // @@protoc_insertion_point(field_set:patac_hpp.TrajectoryPoint.qy)
}

// float qz = 8;
inline void TrajectoryPoint::clear_qz() {
  qz_ = 0;
}
inline float TrajectoryPoint::qz() const {
  // @@protoc_insertion_point(field_get:patac_hpp.TrajectoryPoint.qz)
  return qz_;
}
inline void TrajectoryPoint::set_qz(float value) {
  
  qz_ = value;
  // @@protoc_insertion_point(field_set:patac_hpp.TrajectoryPoint.qz)
}

// float qw = 9;
inline void TrajectoryPoint::clear_qw() {
  qw_ = 0;
}
inline float TrajectoryPoint::qw() const {
  // @@protoc_insertion_point(field_get:patac_hpp.TrajectoryPoint.qw)
  return qw_;
}
inline void TrajectoryPoint::set_qw(float value) {
  
  qw_ = value;
  // @@protoc_insertion_point(field_set:patac_hpp.TrajectoryPoint.qw)
}

// float velocity = 10;
inline void TrajectoryPoint::clear_velocity() {
  velocity_ = 0;
}
inline float TrajectoryPoint::velocity() const {
  // @@protoc_insertion_point(field_get:patac_hpp.TrajectoryPoint.velocity)
  return velocity_;
}
inline void TrajectoryPoint::set_velocity(float value) {
  
  velocity_ = value;
  // @@protoc_insertion_point(field_set:patac_hpp.TrajectoryPoint.velocity)
}

// float angular_velocity = 11;
inline void TrajectoryPoint::clear_angular_velocity() {
  angular_velocity_ = 0;
}
inline float TrajectoryPoint::angular_velocity() const {
  // @@protoc_insertion_point(field_get:patac_hpp.TrajectoryPoint.angular_velocity)
  return angular_velocity_;
}
inline void TrajectoryPoint::set_angular_velocity(float value) {
  
  angular_velocity_ = value;
  // @@protoc_insertion_point(field_set:patac_hpp.TrajectoryPoint.angular_velocity)
}

// -------------------------------------------------------------------

// Trajectory

// uint32 num_trajectory_point = 1;
inline void Trajectory::clear_num_trajectory_point() {
  num_trajectory_point_ = 0u;
}
inline ::google::protobuf::uint32 Trajectory::num_trajectory_point() const {
  // @@protoc_insertion_point(field_get:patac_hpp.Trajectory.num_trajectory_point)
  return num_trajectory_point_;
}
inline void Trajectory::set_num_trajectory_point(::google::protobuf::uint32 value) {
  
  num_trajectory_point_ = value;
  // @@protoc_insertion_point(field_set:patac_hpp.Trajectory.num_trajectory_point)
}

// repeated .patac_hpp.TrajectoryPoint trajectory_point_list = 2;
inline int Trajectory::trajectory_point_list_size() const {
  return trajectory_point_list_.size();
}
inline void Trajectory::clear_trajectory_point_list() {
  trajectory_point_list_.Clear();
}
inline const ::patac_hpp::TrajectoryPoint& Trajectory::trajectory_point_list(int index) const {
  // @@protoc_insertion_point(field_get:patac_hpp.Trajectory.trajectory_point_list)
  return trajectory_point_list_.Get(index);
}
inline ::patac_hpp::TrajectoryPoint* Trajectory::mutable_trajectory_point_list(int index) {
  // @@protoc_insertion_point(field_mutable:patac_hpp.Trajectory.trajectory_point_list)
  return trajectory_point_list_.Mutable(index);
}
inline ::patac_hpp::TrajectoryPoint* Trajectory::add_trajectory_point_list() {
  // @@protoc_insertion_point(field_add:patac_hpp.Trajectory.trajectory_point_list)
  return trajectory_point_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::patac_hpp::TrajectoryPoint >*
Trajectory::mutable_trajectory_point_list() {
  // @@protoc_insertion_point(field_mutable_list:patac_hpp.Trajectory.trajectory_point_list)
  return &trajectory_point_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::patac_hpp::TrajectoryPoint >&
Trajectory::trajectory_point_list() const {
  // @@protoc_insertion_point(field_list:patac_hpp.Trajectory.trajectory_point_list)
  return trajectory_point_list_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace patac_hpp

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_patac_5ftrajetory_2eproto__INCLUDED
