// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: patac_dr.proto

#ifndef PROTOBUF_patac_5fdr_2eproto__INCLUDED
#define PROTOBUF_patac_5fdr_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_patac_5fdr_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsDRPoseImpl();
void InitDefaultsDRPose();
inline void InitDefaults() {
  InitDefaultsDRPose();
}
}  // namespace protobuf_patac_5fdr_2eproto
namespace patac_hpp {
class DRPose;
class DRPoseDefaultTypeInternal;
extern DRPoseDefaultTypeInternal _DRPose_default_instance_;
}  // namespace patac_hpp
namespace patac_hpp {

// ===================================================================

class DRPose : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:patac_hpp.DRPose) */ {
 public:
  DRPose();
  virtual ~DRPose();

  DRPose(const DRPose& from);

  inline DRPose& operator=(const DRPose& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DRPose(DRPose&& from) noexcept
    : DRPose() {
    *this = ::std::move(from);
  }

  inline DRPose& operator=(DRPose&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DRPose& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DRPose* internal_default_instance() {
    return reinterpret_cast<const DRPose*>(
               &_DRPose_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(DRPose* other);
  friend void swap(DRPose& a, DRPose& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DRPose* New() const PROTOBUF_FINAL { return New(NULL); }

  DRPose* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DRPose& from);
  void MergeFrom(const DRPose& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DRPose* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // float x = 2;
  void clear_x();
  static const int kXFieldNumber = 2;
  float x() const;
  void set_x(float value);

  // float y = 3;
  void clear_y();
  static const int kYFieldNumber = 3;
  float y() const;
  void set_y(float value);

  // float z = 4;
  void clear_z();
  static const int kZFieldNumber = 4;
  float z() const;
  void set_z(float value);

  // float yaw = 5;
  void clear_yaw();
  static const int kYawFieldNumber = 5;
  float yaw() const;
  void set_yaw(float value);

  // float velocity = 6;
  void clear_velocity();
  static const int kVelocityFieldNumber = 6;
  float velocity() const;
  void set_velocity(float value);

  // float angular_velocity = 7;
  void clear_angular_velocity();
  static const int kAngularVelocityFieldNumber = 7;
  float angular_velocity() const;
  void set_angular_velocity(float value);

  // @@protoc_insertion_point(class_scope:patac_hpp.DRPose)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 timestamp_;
  float x_;
  float y_;
  float z_;
  float yaw_;
  float velocity_;
  float angular_velocity_;
  mutable int _cached_size_;
  friend struct ::protobuf_patac_5fdr_2eproto::TableStruct;
  friend void ::protobuf_patac_5fdr_2eproto::InitDefaultsDRPoseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DRPose

// uint64 timestamp = 1;
inline void DRPose::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DRPose::timestamp() const {
  // @@protoc_insertion_point(field_get:patac_hpp.DRPose.timestamp)
  return timestamp_;
}
inline void DRPose::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:patac_hpp.DRPose.timestamp)
}

// float x = 2;
inline void DRPose::clear_x() {
  x_ = 0;
}
inline float DRPose::x() const {
  // @@protoc_insertion_point(field_get:patac_hpp.DRPose.x)
  return x_;
}
inline void DRPose::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:patac_hpp.DRPose.x)
}

// float y = 3;
inline void DRPose::clear_y() {
  y_ = 0;
}
inline float DRPose::y() const {
  // @@protoc_insertion_point(field_get:patac_hpp.DRPose.y)
  return y_;
}
inline void DRPose::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:patac_hpp.DRPose.y)
}

// float z = 4;
inline void DRPose::clear_z() {
  z_ = 0;
}
inline float DRPose::z() const {
  // @@protoc_insertion_point(field_get:patac_hpp.DRPose.z)
  return z_;
}
inline void DRPose::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:patac_hpp.DRPose.z)
}

// float yaw = 5;
inline void DRPose::clear_yaw() {
  yaw_ = 0;
}
inline float DRPose::yaw() const {
  // @@protoc_insertion_point(field_get:patac_hpp.DRPose.yaw)
  return yaw_;
}
inline void DRPose::set_yaw(float value) {
  
  yaw_ = value;
  // @@protoc_insertion_point(field_set:patac_hpp.DRPose.yaw)
}

// float velocity = 6;
inline void DRPose::clear_velocity() {
  velocity_ = 0;
}
inline float DRPose::velocity() const {
  // @@protoc_insertion_point(field_get:patac_hpp.DRPose.velocity)
  return velocity_;
}
inline void DRPose::set_velocity(float value) {
  
  velocity_ = value;
  // @@protoc_insertion_point(field_set:patac_hpp.DRPose.velocity)
}

// float angular_velocity = 7;
inline void DRPose::clear_angular_velocity() {
  angular_velocity_ = 0;
}
inline float DRPose::angular_velocity() const {
  // @@protoc_insertion_point(field_get:patac_hpp.DRPose.angular_velocity)
  return angular_velocity_;
}
inline void DRPose::set_angular_velocity(float value) {
  
  angular_velocity_ = value;
  // @@protoc_insertion_point(field_set:patac_hpp.DRPose.angular_velocity)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace patac_hpp

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_patac_5fdr_2eproto__INCLUDED
