// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: uss_base.proto

#ifndef PROTOBUF_uss_5fbase_2eproto__INCLUDED
#define PROTOBUF_uss_5fbase_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_uss_5fbase_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPerFusUssHeaderImpl();
void InitDefaultsPerFusUssHeader();
void InitDefaultsUssPointImpl();
void InitDefaultsUssPoint();
void InitDefaultsStateMachineImpl();
void InitDefaultsStateMachine();
inline void InitDefaults() {
  InitDefaultsPerFusUssHeader();
  InitDefaultsUssPoint();
  InitDefaultsStateMachine();
}
}  // namespace protobuf_uss_5fbase_2eproto
namespace autodrive {
namespace workflow {
namespace proto {
class PerFusUssHeader;
class PerFusUssHeaderDefaultTypeInternal;
extern PerFusUssHeaderDefaultTypeInternal _PerFusUssHeader_default_instance_;
class StateMachine;
class StateMachineDefaultTypeInternal;
extern StateMachineDefaultTypeInternal _StateMachine_default_instance_;
class UssPoint;
class UssPointDefaultTypeInternal;
extern UssPointDefaultTypeInternal _UssPoint_default_instance_;
}  // namespace proto
}  // namespace workflow
}  // namespace autodrive
namespace autodrive {
namespace workflow {
namespace proto {

enum UssHeaderGroupIdEn {
  kUssHeaderGroupIdEnNone = 0,
  kUssHeaderGroupIdEn1 = 1,
  kUssHeaderGroupIdEn2 = 2,
  kUssHeaderGroupIdEn3 = 3,
  kUssHeaderGroupIdEn4 = 4,
  kUssHeaderGroupIdEnMax = 255,
  UssHeaderGroupIdEn_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UssHeaderGroupIdEn_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UssHeaderGroupIdEn_IsValid(int value);
const UssHeaderGroupIdEn UssHeaderGroupIdEn_MIN = kUssHeaderGroupIdEnNone;
const UssHeaderGroupIdEn UssHeaderGroupIdEn_MAX = kUssHeaderGroupIdEnMax;
const int UssHeaderGroupIdEn_ARRAYSIZE = UssHeaderGroupIdEn_MAX + 1;

const ::google::protobuf::EnumDescriptor* UssHeaderGroupIdEn_descriptor();
inline const ::std::string& UssHeaderGroupIdEn_Name(UssHeaderGroupIdEn value) {
  return ::google::protobuf::internal::NameOfEnum(
    UssHeaderGroupIdEn_descriptor(), value);
}
inline bool UssHeaderGroupIdEn_Parse(
    const ::std::string& name, UssHeaderGroupIdEn* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UssHeaderGroupIdEn>(
    UssHeaderGroupIdEn_descriptor(), name, value);
}
enum FreqModeEn {
  kFreqModeEnNone = 0,
  kFreqModeEnFixed = 1,
  kFreqModeEnChirp = 2,
  kFreqModeEnMax = 255,
  FreqModeEn_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FreqModeEn_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FreqModeEn_IsValid(int value);
const FreqModeEn FreqModeEn_MIN = kFreqModeEnNone;
const FreqModeEn FreqModeEn_MAX = kFreqModeEnMax;
const int FreqModeEn_ARRAYSIZE = FreqModeEn_MAX + 1;

const ::google::protobuf::EnumDescriptor* FreqModeEn_descriptor();
inline const ::std::string& FreqModeEn_Name(FreqModeEn value) {
  return ::google::protobuf::internal::NameOfEnum(
    FreqModeEn_descriptor(), value);
}
inline bool FreqModeEn_Parse(
    const ::std::string& name, FreqModeEn* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FreqModeEn>(
    FreqModeEn_descriptor(), name, value);
}
enum PlvState {
  kPlvStateNone = 0,
  kPlvStateOff = 1,
  kPlvStateActive = 2,
  kPlvStateMax = 255,
  PlvState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlvState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlvState_IsValid(int value);
const PlvState PlvState_MIN = kPlvStateNone;
const PlvState PlvState_MAX = kPlvStateMax;
const int PlvState_ARRAYSIZE = PlvState_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlvState_descriptor();
inline const ::std::string& PlvState_Name(PlvState value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlvState_descriptor(), value);
}
inline bool PlvState_Parse(
    const ::std::string& name, PlvState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlvState>(
    PlvState_descriptor(), name, value);
}
enum PsuState {
  kPsuStateNone = 0,
  kPsuStateOff = 1,
  kPsuStatePiActive = 2,
  kPsuStatePoActive = 3,
  kPsuStateMax = 255,
  PsuState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PsuState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PsuState_IsValid(int value);
const PsuState PsuState_MIN = kPsuStateNone;
const PsuState PsuState_MAX = kPsuStateMax;
const int PsuState_ARRAYSIZE = PsuState_MAX + 1;

const ::google::protobuf::EnumDescriptor* PsuState_descriptor();
inline const ::std::string& PsuState_Name(PsuState value) {
  return ::google::protobuf::internal::NameOfEnum(
    PsuState_descriptor(), value);
}
inline bool PsuState_Parse(
    const ::std::string& name, PsuState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PsuState>(
    PsuState_descriptor(), name, value);
}
enum OdoState {
  kOdoStateNone = 0,
  kOdoStateReset = 1,
  kOdoStateActive = 2,
  kOdoStateResetSuccess = 3,
  kOdoStateMax = 255,
  OdoState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OdoState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OdoState_IsValid(int value);
const OdoState OdoState_MIN = kOdoStateNone;
const OdoState OdoState_MAX = kOdoStateMax;
const int OdoState_ARRAYSIZE = OdoState_MAX + 1;

const ::google::protobuf::EnumDescriptor* OdoState_descriptor();
inline const ::std::string& OdoState_Name(OdoState value) {
  return ::google::protobuf::internal::NameOfEnum(
    OdoState_descriptor(), value);
}
inline bool OdoState_Parse(
    const ::std::string& name, OdoState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OdoState>(
    OdoState_descriptor(), name, value);
}
// ===================================================================

class PerFusUssHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:autodrive.workflow.proto.PerFusUssHeader) */ {
 public:
  PerFusUssHeader();
  virtual ~PerFusUssHeader();

  PerFusUssHeader(const PerFusUssHeader& from);

  inline PerFusUssHeader& operator=(const PerFusUssHeader& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PerFusUssHeader(PerFusUssHeader&& from) noexcept
    : PerFusUssHeader() {
    *this = ::std::move(from);
  }

  inline PerFusUssHeader& operator=(PerFusUssHeader&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PerFusUssHeader& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PerFusUssHeader* internal_default_instance() {
    return reinterpret_cast<const PerFusUssHeader*>(
               &_PerFusUssHeader_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PerFusUssHeader* other);
  friend void swap(PerFusUssHeader& a, PerFusUssHeader& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PerFusUssHeader* New() const PROTOBUF_FINAL { return New(NULL); }

  PerFusUssHeader* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PerFusUssHeader& from);
  void MergeFrom(const PerFusUssHeader& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PerFusUssHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 mcu_send_stamp_si64 = 1;
  void clear_mcu_send_stamp_si64();
  static const int kMcuSendStampSi64FieldNumber = 1;
  ::google::protobuf::int64 mcu_send_stamp_si64() const;
  void set_mcu_send_stamp_si64(::google::protobuf::int64 value);

  // int64 mcu_send_wave_stamp_si64 = 2;
  void clear_mcu_send_wave_stamp_si64();
  static const int kMcuSendWaveStampSi64FieldNumber = 2;
  ::google::protobuf::int64 mcu_send_wave_stamp_si64() const;
  void set_mcu_send_wave_stamp_si64(::google::protobuf::int64 value);

  // uint32 mesa_group_tx_mask_ui16 = 3;
  void clear_mesa_group_tx_mask_ui16();
  static const int kMesaGroupTxMaskUi16FieldNumber = 3;
  ::google::protobuf::uint32 mesa_group_tx_mask_ui16() const;
  void set_mesa_group_tx_mask_ui16(::google::protobuf::uint32 value);

  // uint32 mesa_group_rx_mask_ui16 = 4;
  void clear_mesa_group_rx_mask_ui16();
  static const int kMesaGroupRxMaskUi16FieldNumber = 4;
  ::google::protobuf::uint32 mesa_group_rx_mask_ui16() const;
  void set_mesa_group_rx_mask_ui16(::google::protobuf::uint32 value);

  // .autodrive.workflow.proto.UssHeaderGroupIdEn uss_header_group_id = 5;
  void clear_uss_header_group_id();
  static const int kUssHeaderGroupIdFieldNumber = 5;
  ::autodrive::workflow::proto::UssHeaderGroupIdEn uss_header_group_id() const;
  void set_uss_header_group_id(::autodrive::workflow::proto::UssHeaderGroupIdEn value);

  // .autodrive.workflow.proto.FreqModeEn uss_header_freq_mode = 6;
  void clear_uss_header_freq_mode();
  static const int kUssHeaderFreqModeFieldNumber = 6;
  ::autodrive::workflow::proto::FreqModeEn uss_header_freq_mode() const;
  void set_uss_header_freq_mode(::autodrive::workflow::proto::FreqModeEn value);

  // @@protoc_insertion_point(class_scope:autodrive.workflow.proto.PerFusUssHeader)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 mcu_send_stamp_si64_;
  ::google::protobuf::int64 mcu_send_wave_stamp_si64_;
  ::google::protobuf::uint32 mesa_group_tx_mask_ui16_;
  ::google::protobuf::uint32 mesa_group_rx_mask_ui16_;
  int uss_header_group_id_;
  int uss_header_freq_mode_;
  mutable int _cached_size_;
  friend struct ::protobuf_uss_5fbase_2eproto::TableStruct;
  friend void ::protobuf_uss_5fbase_2eproto::InitDefaultsPerFusUssHeaderImpl();
};
// -------------------------------------------------------------------

class UssPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:autodrive.workflow.proto.UssPoint) */ {
 public:
  UssPoint();
  virtual ~UssPoint();

  UssPoint(const UssPoint& from);

  inline UssPoint& operator=(const UssPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UssPoint(UssPoint&& from) noexcept
    : UssPoint() {
    *this = ::std::move(from);
  }

  inline UssPoint& operator=(UssPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UssPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UssPoint* internal_default_instance() {
    return reinterpret_cast<const UssPoint*>(
               &_UssPoint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(UssPoint* other);
  friend void swap(UssPoint& a, UssPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UssPoint* New() const PROTOBUF_FINAL { return New(NULL); }

  UssPoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UssPoint& from);
  void MergeFrom(const UssPoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UssPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 x_si32 = 1;
  void clear_x_si32();
  static const int kXSi32FieldNumber = 1;
  ::google::protobuf::int32 x_si32() const;
  void set_x_si32(::google::protobuf::int32 value);

  // int32 y_si32 = 2;
  void clear_y_si32();
  static const int kYSi32FieldNumber = 2;
  ::google::protobuf::int32 y_si32() const;
  void set_y_si32(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:autodrive.workflow.proto.UssPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 x_si32_;
  ::google::protobuf::int32 y_si32_;
  mutable int _cached_size_;
  friend struct ::protobuf_uss_5fbase_2eproto::TableStruct;
  friend void ::protobuf_uss_5fbase_2eproto::InitDefaultsUssPointImpl();
};
// -------------------------------------------------------------------

class StateMachine : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:autodrive.workflow.proto.StateMachine) */ {
 public:
  StateMachine();
  virtual ~StateMachine();

  StateMachine(const StateMachine& from);

  inline StateMachine& operator=(const StateMachine& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StateMachine(StateMachine&& from) noexcept
    : StateMachine() {
    *this = ::std::move(from);
  }

  inline StateMachine& operator=(StateMachine&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StateMachine& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateMachine* internal_default_instance() {
    return reinterpret_cast<const StateMachine*>(
               &_StateMachine_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(StateMachine* other);
  friend void swap(StateMachine& a, StateMachine& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StateMachine* New() const PROTOBUF_FINAL { return New(NULL); }

  StateMachine* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StateMachine& from);
  void MergeFrom(const StateMachine& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StateMachine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .autodrive.workflow.proto.PlvState plv_state = 1;
  void clear_plv_state();
  static const int kPlvStateFieldNumber = 1;
  ::autodrive::workflow::proto::PlvState plv_state() const;
  void set_plv_state(::autodrive::workflow::proto::PlvState value);

  // .autodrive.workflow.proto.PsuState psu_state = 2;
  void clear_psu_state();
  static const int kPsuStateFieldNumber = 2;
  ::autodrive::workflow::proto::PsuState psu_state() const;
  void set_psu_state(::autodrive::workflow::proto::PsuState value);

  // .autodrive.workflow.proto.OdoState odo_state = 3;
  void clear_odo_state();
  static const int kOdoStateFieldNumber = 3;
  ::autodrive::workflow::proto::OdoState odo_state() const;
  void set_odo_state(::autodrive::workflow::proto::OdoState value);

  // @@protoc_insertion_point(class_scope:autodrive.workflow.proto.StateMachine)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int plv_state_;
  int psu_state_;
  int odo_state_;
  mutable int _cached_size_;
  friend struct ::protobuf_uss_5fbase_2eproto::TableStruct;
  friend void ::protobuf_uss_5fbase_2eproto::InitDefaultsStateMachineImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PerFusUssHeader

// int64 mcu_send_stamp_si64 = 1;
inline void PerFusUssHeader::clear_mcu_send_stamp_si64() {
  mcu_send_stamp_si64_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PerFusUssHeader::mcu_send_stamp_si64() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssHeader.mcu_send_stamp_si64)
  return mcu_send_stamp_si64_;
}
inline void PerFusUssHeader::set_mcu_send_stamp_si64(::google::protobuf::int64 value) {
  
  mcu_send_stamp_si64_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.PerFusUssHeader.mcu_send_stamp_si64)
}

// int64 mcu_send_wave_stamp_si64 = 2;
inline void PerFusUssHeader::clear_mcu_send_wave_stamp_si64() {
  mcu_send_wave_stamp_si64_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PerFusUssHeader::mcu_send_wave_stamp_si64() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssHeader.mcu_send_wave_stamp_si64)
  return mcu_send_wave_stamp_si64_;
}
inline void PerFusUssHeader::set_mcu_send_wave_stamp_si64(::google::protobuf::int64 value) {
  
  mcu_send_wave_stamp_si64_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.PerFusUssHeader.mcu_send_wave_stamp_si64)
}

// uint32 mesa_group_tx_mask_ui16 = 3;
inline void PerFusUssHeader::clear_mesa_group_tx_mask_ui16() {
  mesa_group_tx_mask_ui16_ = 0u;
}
inline ::google::protobuf::uint32 PerFusUssHeader::mesa_group_tx_mask_ui16() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssHeader.mesa_group_tx_mask_ui16)
  return mesa_group_tx_mask_ui16_;
}
inline void PerFusUssHeader::set_mesa_group_tx_mask_ui16(::google::protobuf::uint32 value) {
  
  mesa_group_tx_mask_ui16_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.PerFusUssHeader.mesa_group_tx_mask_ui16)
}

// uint32 mesa_group_rx_mask_ui16 = 4;
inline void PerFusUssHeader::clear_mesa_group_rx_mask_ui16() {
  mesa_group_rx_mask_ui16_ = 0u;
}
inline ::google::protobuf::uint32 PerFusUssHeader::mesa_group_rx_mask_ui16() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssHeader.mesa_group_rx_mask_ui16)
  return mesa_group_rx_mask_ui16_;
}
inline void PerFusUssHeader::set_mesa_group_rx_mask_ui16(::google::protobuf::uint32 value) {
  
  mesa_group_rx_mask_ui16_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.PerFusUssHeader.mesa_group_rx_mask_ui16)
}

// .autodrive.workflow.proto.UssHeaderGroupIdEn uss_header_group_id = 5;
inline void PerFusUssHeader::clear_uss_header_group_id() {
  uss_header_group_id_ = 0;
}
inline ::autodrive::workflow::proto::UssHeaderGroupIdEn PerFusUssHeader::uss_header_group_id() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssHeader.uss_header_group_id)
  return static_cast< ::autodrive::workflow::proto::UssHeaderGroupIdEn >(uss_header_group_id_);
}
inline void PerFusUssHeader::set_uss_header_group_id(::autodrive::workflow::proto::UssHeaderGroupIdEn value) {
  
  uss_header_group_id_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.PerFusUssHeader.uss_header_group_id)
}

// .autodrive.workflow.proto.FreqModeEn uss_header_freq_mode = 6;
inline void PerFusUssHeader::clear_uss_header_freq_mode() {
  uss_header_freq_mode_ = 0;
}
inline ::autodrive::workflow::proto::FreqModeEn PerFusUssHeader::uss_header_freq_mode() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssHeader.uss_header_freq_mode)
  return static_cast< ::autodrive::workflow::proto::FreqModeEn >(uss_header_freq_mode_);
}
inline void PerFusUssHeader::set_uss_header_freq_mode(::autodrive::workflow::proto::FreqModeEn value) {
  
  uss_header_freq_mode_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.PerFusUssHeader.uss_header_freq_mode)
}

// -------------------------------------------------------------------

// UssPoint

// int32 x_si32 = 1;
inline void UssPoint::clear_x_si32() {
  x_si32_ = 0;
}
inline ::google::protobuf::int32 UssPoint::x_si32() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.UssPoint.x_si32)
  return x_si32_;
}
inline void UssPoint::set_x_si32(::google::protobuf::int32 value) {
  
  x_si32_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.UssPoint.x_si32)
}

// int32 y_si32 = 2;
inline void UssPoint::clear_y_si32() {
  y_si32_ = 0;
}
inline ::google::protobuf::int32 UssPoint::y_si32() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.UssPoint.y_si32)
  return y_si32_;
}
inline void UssPoint::set_y_si32(::google::protobuf::int32 value) {
  
  y_si32_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.UssPoint.y_si32)
}

// -------------------------------------------------------------------

// StateMachine

// .autodrive.workflow.proto.PlvState plv_state = 1;
inline void StateMachine::clear_plv_state() {
  plv_state_ = 0;
}
inline ::autodrive::workflow::proto::PlvState StateMachine::plv_state() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.StateMachine.plv_state)
  return static_cast< ::autodrive::workflow::proto::PlvState >(plv_state_);
}
inline void StateMachine::set_plv_state(::autodrive::workflow::proto::PlvState value) {
  
  plv_state_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.StateMachine.plv_state)
}

// .autodrive.workflow.proto.PsuState psu_state = 2;
inline void StateMachine::clear_psu_state() {
  psu_state_ = 0;
}
inline ::autodrive::workflow::proto::PsuState StateMachine::psu_state() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.StateMachine.psu_state)
  return static_cast< ::autodrive::workflow::proto::PsuState >(psu_state_);
}
inline void StateMachine::set_psu_state(::autodrive::workflow::proto::PsuState value) {
  
  psu_state_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.StateMachine.psu_state)
}

// .autodrive.workflow.proto.OdoState odo_state = 3;
inline void StateMachine::clear_odo_state() {
  odo_state_ = 0;
}
inline ::autodrive::workflow::proto::OdoState StateMachine::odo_state() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.StateMachine.odo_state)
  return static_cast< ::autodrive::workflow::proto::OdoState >(odo_state_);
}
inline void StateMachine::set_odo_state(::autodrive::workflow::proto::OdoState value) {
  
  odo_state_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.StateMachine.odo_state)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace workflow
}  // namespace autodrive

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::autodrive::workflow::proto::UssHeaderGroupIdEn> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::autodrive::workflow::proto::UssHeaderGroupIdEn>() {
  return ::autodrive::workflow::proto::UssHeaderGroupIdEn_descriptor();
}
template <> struct is_proto_enum< ::autodrive::workflow::proto::FreqModeEn> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::autodrive::workflow::proto::FreqModeEn>() {
  return ::autodrive::workflow::proto::FreqModeEn_descriptor();
}
template <> struct is_proto_enum< ::autodrive::workflow::proto::PlvState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::autodrive::workflow::proto::PlvState>() {
  return ::autodrive::workflow::proto::PlvState_descriptor();
}
template <> struct is_proto_enum< ::autodrive::workflow::proto::PsuState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::autodrive::workflow::proto::PsuState>() {
  return ::autodrive::workflow::proto::PsuState_descriptor();
}
template <> struct is_proto_enum< ::autodrive::workflow::proto::OdoState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::autodrive::workflow::proto::OdoState>() {
  return ::autodrive::workflow::proto::OdoState_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_uss_5fbase_2eproto__INCLUDED
