// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: uss_parking_slots.proto

#ifndef PROTOBUF_uss_5fparking_5fslots_2eproto__INCLUDED
#define PROTOBUF_uss_5fparking_5fslots_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
#include "uss_base.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_uss_5fparking_5fslots_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPerFusUssPsImpl();
void InitDefaultsPerFusUssPs();
void InitDefaultsUssParkingSlotsMsgImpl();
void InitDefaultsUssParkingSlotsMsg();
inline void InitDefaults() {
  InitDefaultsPerFusUssPs();
  InitDefaultsUssParkingSlotsMsg();
}
}  // namespace protobuf_uss_5fparking_5fslots_2eproto
namespace autodrive {
namespace workflow {
namespace proto {
class PerFusUssPs;
class PerFusUssPsDefaultTypeInternal;
extern PerFusUssPsDefaultTypeInternal _PerFusUssPs_default_instance_;
class UssParkingSlotsMsg;
class UssParkingSlotsMsgDefaultTypeInternal;
extern UssParkingSlotsMsgDefaultTypeInternal _UssParkingSlotsMsg_default_instance_;
}  // namespace proto
}  // namespace workflow
}  // namespace autodrive
namespace autodrive {
namespace workflow {
namespace proto {

enum UssPsStatusEn {
  kUssPsStatusEnNone = 0,
  kUssPsStatusEnSearch = 1,
  kUssPsStatusEnCorret = 2,
  kUssPsStatusEnMax = 3,
  UssPsStatusEn_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UssPsStatusEn_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UssPsStatusEn_IsValid(int value);
const UssPsStatusEn UssPsStatusEn_MIN = kUssPsStatusEnNone;
const UssPsStatusEn UssPsStatusEn_MAX = kUssPsStatusEnMax;
const int UssPsStatusEn_ARRAYSIZE = UssPsStatusEn_MAX + 1;

const ::google::protobuf::EnumDescriptor* UssPsStatusEn_descriptor();
inline const ::std::string& UssPsStatusEn_Name(UssPsStatusEn value) {
  return ::google::protobuf::internal::NameOfEnum(
    UssPsStatusEn_descriptor(), value);
}
inline bool UssPsStatusEn_Parse(
    const ::std::string& name, UssPsStatusEn* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UssPsStatusEn>(
    UssPsStatusEn_descriptor(), name, value);
}
enum UssPsTypeEn {
  kUssPsTypeEnNone = 0,
  kUssPsTypeEnParallel = 1,
  kUssPsTypeEnCross = 2,
  kUssPsTypeEnDiagonal = 3,
  kUssPsTypeEnMax = 4,
  UssPsTypeEn_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UssPsTypeEn_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UssPsTypeEn_IsValid(int value);
const UssPsTypeEn UssPsTypeEn_MIN = kUssPsTypeEnNone;
const UssPsTypeEn UssPsTypeEn_MAX = kUssPsTypeEnMax;
const int UssPsTypeEn_ARRAYSIZE = UssPsTypeEn_MAX + 1;

const ::google::protobuf::EnumDescriptor* UssPsTypeEn_descriptor();
inline const ::std::string& UssPsTypeEn_Name(UssPsTypeEn value) {
  return ::google::protobuf::internal::NameOfEnum(
    UssPsTypeEn_descriptor(), value);
}
inline bool UssPsTypeEn_Parse(
    const ::std::string& name, UssPsTypeEn* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UssPsTypeEn>(
    UssPsTypeEn_descriptor(), name, value);
}
enum UssPsOrientationEn {
  kUssPsOrientationEnNone = 0,
  kUssPsOrientationEnLeft = 1,
  kUssPsOrientationEnRight = 2,
  kUssPsOrientationEnMax = 3,
  UssPsOrientationEn_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UssPsOrientationEn_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UssPsOrientationEn_IsValid(int value);
const UssPsOrientationEn UssPsOrientationEn_MIN = kUssPsOrientationEnNone;
const UssPsOrientationEn UssPsOrientationEn_MAX = kUssPsOrientationEnMax;
const int UssPsOrientationEn_ARRAYSIZE = UssPsOrientationEn_MAX + 1;

const ::google::protobuf::EnumDescriptor* UssPsOrientationEn_descriptor();
inline const ::std::string& UssPsOrientationEn_Name(UssPsOrientationEn value) {
  return ::google::protobuf::internal::NameOfEnum(
    UssPsOrientationEn_descriptor(), value);
}
inline bool UssPsOrientationEn_Parse(
    const ::std::string& name, UssPsOrientationEn* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UssPsOrientationEn>(
    UssPsOrientationEn_descriptor(), name, value);
}
enum UssPsBoundaryTypeEn {
  kPerFusUssPsBoundaryTypeVirtual = 0,
  kPerFusUssPsBoundaryTypeLow = 1,
  kPerFusUssPsBoundaryTypeHigh = 2,
  kPerFusUssPsBoundaryTypeWall = 3,
  kPerFusUssPsBoundaryTypeCurb = 4,
  kPerFusUssPsBoundaryTypeMax = 5,
  UssPsBoundaryTypeEn_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UssPsBoundaryTypeEn_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UssPsBoundaryTypeEn_IsValid(int value);
const UssPsBoundaryTypeEn UssPsBoundaryTypeEn_MIN = kPerFusUssPsBoundaryTypeVirtual;
const UssPsBoundaryTypeEn UssPsBoundaryTypeEn_MAX = kPerFusUssPsBoundaryTypeMax;
const int UssPsBoundaryTypeEn_ARRAYSIZE = UssPsBoundaryTypeEn_MAX + 1;

const ::google::protobuf::EnumDescriptor* UssPsBoundaryTypeEn_descriptor();
inline const ::std::string& UssPsBoundaryTypeEn_Name(UssPsBoundaryTypeEn value) {
  return ::google::protobuf::internal::NameOfEnum(
    UssPsBoundaryTypeEn_descriptor(), value);
}
inline bool UssPsBoundaryTypeEn_Parse(
    const ::std::string& name, UssPsBoundaryTypeEn* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UssPsBoundaryTypeEn>(
    UssPsBoundaryTypeEn_descriptor(), name, value);
}
// ===================================================================

class PerFusUssPs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:autodrive.workflow.proto.PerFusUssPs) */ {
 public:
  PerFusUssPs();
  virtual ~PerFusUssPs();

  PerFusUssPs(const PerFusUssPs& from);

  inline PerFusUssPs& operator=(const PerFusUssPs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PerFusUssPs(PerFusUssPs&& from) noexcept
    : PerFusUssPs() {
    *this = ::std::move(from);
  }

  inline PerFusUssPs& operator=(PerFusUssPs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PerFusUssPs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PerFusUssPs* internal_default_instance() {
    return reinterpret_cast<const PerFusUssPs*>(
               &_PerFusUssPs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PerFusUssPs* other);
  friend void swap(PerFusUssPs& a, PerFusUssPs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PerFusUssPs* New() const PROTOBUF_FINAL { return New(NULL); }

  PerFusUssPs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PerFusUssPs& from);
  void MergeFrom(const PerFusUssPs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PerFusUssPs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .autodrive.workflow.proto.UssPoint uss_ps_1st_corner = 11;
  bool has_uss_ps_1st_corner() const;
  void clear_uss_ps_1st_corner();
  static const int kUssPs1StCornerFieldNumber = 11;
  const ::autodrive::workflow::proto::UssPoint& uss_ps_1st_corner() const;
  ::autodrive::workflow::proto::UssPoint* release_uss_ps_1st_corner();
  ::autodrive::workflow::proto::UssPoint* mutable_uss_ps_1st_corner();
  void set_allocated_uss_ps_1st_corner(::autodrive::workflow::proto::UssPoint* uss_ps_1st_corner);

  // .autodrive.workflow.proto.UssPoint uss_ps_2nd_corner = 12;
  bool has_uss_ps_2nd_corner() const;
  void clear_uss_ps_2nd_corner();
  static const int kUssPs2NdCornerFieldNumber = 12;
  const ::autodrive::workflow::proto::UssPoint& uss_ps_2nd_corner() const;
  ::autodrive::workflow::proto::UssPoint* release_uss_ps_2nd_corner();
  ::autodrive::workflow::proto::UssPoint* mutable_uss_ps_2nd_corner();
  void set_allocated_uss_ps_2nd_corner(::autodrive::workflow::proto::UssPoint* uss_ps_2nd_corner);

  // .autodrive.workflow.proto.UssPoint uss_ps_3st_corner = 13;
  bool has_uss_ps_3st_corner() const;
  void clear_uss_ps_3st_corner();
  static const int kUssPs3StCornerFieldNumber = 13;
  const ::autodrive::workflow::proto::UssPoint& uss_ps_3st_corner() const;
  ::autodrive::workflow::proto::UssPoint* release_uss_ps_3st_corner();
  ::autodrive::workflow::proto::UssPoint* mutable_uss_ps_3st_corner();
  void set_allocated_uss_ps_3st_corner(::autodrive::workflow::proto::UssPoint* uss_ps_3st_corner);

  // .autodrive.workflow.proto.UssPoint uss_ps_4nd_corner = 14;
  bool has_uss_ps_4nd_corner() const;
  void clear_uss_ps_4nd_corner();
  static const int kUssPs4NdCornerFieldNumber = 14;
  const ::autodrive::workflow::proto::UssPoint& uss_ps_4nd_corner() const;
  ::autodrive::workflow::proto::UssPoint* release_uss_ps_4nd_corner();
  ::autodrive::workflow::proto::UssPoint* mutable_uss_ps_4nd_corner();
  void set_allocated_uss_ps_4nd_corner(::autodrive::workflow::proto::UssPoint* uss_ps_4nd_corner);

  // .autodrive.workflow.proto.UssPoint uss_ps_1st_corner_gcs = 15;
  bool has_uss_ps_1st_corner_gcs() const;
  void clear_uss_ps_1st_corner_gcs();
  static const int kUssPs1StCornerGcsFieldNumber = 15;
  const ::autodrive::workflow::proto::UssPoint& uss_ps_1st_corner_gcs() const;
  ::autodrive::workflow::proto::UssPoint* release_uss_ps_1st_corner_gcs();
  ::autodrive::workflow::proto::UssPoint* mutable_uss_ps_1st_corner_gcs();
  void set_allocated_uss_ps_1st_corner_gcs(::autodrive::workflow::proto::UssPoint* uss_ps_1st_corner_gcs);

  // .autodrive.workflow.proto.UssPoint uss_ps_2nd_corner_gcs = 16;
  bool has_uss_ps_2nd_corner_gcs() const;
  void clear_uss_ps_2nd_corner_gcs();
  static const int kUssPs2NdCornerGcsFieldNumber = 16;
  const ::autodrive::workflow::proto::UssPoint& uss_ps_2nd_corner_gcs() const;
  ::autodrive::workflow::proto::UssPoint* release_uss_ps_2nd_corner_gcs();
  ::autodrive::workflow::proto::UssPoint* mutable_uss_ps_2nd_corner_gcs();
  void set_allocated_uss_ps_2nd_corner_gcs(::autodrive::workflow::proto::UssPoint* uss_ps_2nd_corner_gcs);

  // .autodrive.workflow.proto.UssPoint uss_ps_3st_corner_gcs = 17;
  bool has_uss_ps_3st_corner_gcs() const;
  void clear_uss_ps_3st_corner_gcs();
  static const int kUssPs3StCornerGcsFieldNumber = 17;
  const ::autodrive::workflow::proto::UssPoint& uss_ps_3st_corner_gcs() const;
  ::autodrive::workflow::proto::UssPoint* release_uss_ps_3st_corner_gcs();
  ::autodrive::workflow::proto::UssPoint* mutable_uss_ps_3st_corner_gcs();
  void set_allocated_uss_ps_3st_corner_gcs(::autodrive::workflow::proto::UssPoint* uss_ps_3st_corner_gcs);

  // .autodrive.workflow.proto.UssPoint uss_ps_4nd_corner_gcs = 18;
  bool has_uss_ps_4nd_corner_gcs() const;
  void clear_uss_ps_4nd_corner_gcs();
  static const int kUssPs4NdCornerGcsFieldNumber = 18;
  const ::autodrive::workflow::proto::UssPoint& uss_ps_4nd_corner_gcs() const;
  ::autodrive::workflow::proto::UssPoint* release_uss_ps_4nd_corner_gcs();
  ::autodrive::workflow::proto::UssPoint* mutable_uss_ps_4nd_corner_gcs();
  void set_allocated_uss_ps_4nd_corner_gcs(::autodrive::workflow::proto::UssPoint* uss_ps_4nd_corner_gcs);

  // .autodrive.workflow.proto.UssPoint uss_ps_boundary_1st_info = 19;
  bool has_uss_ps_boundary_1st_info() const;
  void clear_uss_ps_boundary_1st_info();
  static const int kUssPsBoundary1StInfoFieldNumber = 19;
  const ::autodrive::workflow::proto::UssPoint& uss_ps_boundary_1st_info() const;
  ::autodrive::workflow::proto::UssPoint* release_uss_ps_boundary_1st_info();
  ::autodrive::workflow::proto::UssPoint* mutable_uss_ps_boundary_1st_info();
  void set_allocated_uss_ps_boundary_1st_info(::autodrive::workflow::proto::UssPoint* uss_ps_boundary_1st_info);

  // .autodrive.workflow.proto.UssPoint uss_ps_boundary_2nd_info = 20;
  bool has_uss_ps_boundary_2nd_info() const;
  void clear_uss_ps_boundary_2nd_info();
  static const int kUssPsBoundary2NdInfoFieldNumber = 20;
  const ::autodrive::workflow::proto::UssPoint& uss_ps_boundary_2nd_info() const;
  ::autodrive::workflow::proto::UssPoint* release_uss_ps_boundary_2nd_info();
  ::autodrive::workflow::proto::UssPoint* mutable_uss_ps_boundary_2nd_info();
  void set_allocated_uss_ps_boundary_2nd_info(::autodrive::workflow::proto::UssPoint* uss_ps_boundary_2nd_info);

  // uint32 uss_ps_id_ui8 = 1;
  void clear_uss_ps_id_ui8();
  static const int kUssPsIdUi8FieldNumber = 1;
  ::google::protobuf::uint32 uss_ps_id_ui8() const;
  void set_uss_ps_id_ui8(::google::protobuf::uint32 value);

  // .autodrive.workflow.proto.UssPsStatusEn uss_ps_status_en = 2;
  void clear_uss_ps_status_en();
  static const int kUssPsStatusEnFieldNumber = 2;
  ::autodrive::workflow::proto::UssPsStatusEn uss_ps_status_en() const;
  void set_uss_ps_status_en(::autodrive::workflow::proto::UssPsStatusEn value);

  // .autodrive.workflow.proto.UssPsTypeEn uss_ps_type_en = 3;
  void clear_uss_ps_type_en();
  static const int kUssPsTypeEnFieldNumber = 3;
  ::autodrive::workflow::proto::UssPsTypeEn uss_ps_type_en() const;
  void set_uss_ps_type_en(::autodrive::workflow::proto::UssPsTypeEn value);

  // .autodrive.workflow.proto.UssPsOrientationEn uss_ps_orientation_en = 4;
  void clear_uss_ps_orientation_en();
  static const int kUssPsOrientationEnFieldNumber = 4;
  ::autodrive::workflow::proto::UssPsOrientationEn uss_ps_orientation_en() const;
  void set_uss_ps_orientation_en(::autodrive::workflow::proto::UssPsOrientationEn value);

  // .autodrive.workflow.proto.UssPsBoundaryTypeEn uss_ps_1st_boundary_type_en = 5;
  void clear_uss_ps_1st_boundary_type_en();
  static const int kUssPs1StBoundaryTypeEnFieldNumber = 5;
  ::autodrive::workflow::proto::UssPsBoundaryTypeEn uss_ps_1st_boundary_type_en() const;
  void set_uss_ps_1st_boundary_type_en(::autodrive::workflow::proto::UssPsBoundaryTypeEn value);

  // .autodrive.workflow.proto.UssPsBoundaryTypeEn uss_ps_2nd_boundary_type_en = 6;
  void clear_uss_ps_2nd_boundary_type_en();
  static const int kUssPs2NdBoundaryTypeEnFieldNumber = 6;
  ::autodrive::workflow::proto::UssPsBoundaryTypeEn uss_ps_2nd_boundary_type_en() const;
  void set_uss_ps_2nd_boundary_type_en(::autodrive::workflow::proto::UssPsBoundaryTypeEn value);

  // .autodrive.workflow.proto.UssPsBoundaryTypeEn uss_ps_cross_boundary_type_en = 7;
  void clear_uss_ps_cross_boundary_type_en();
  static const int kUssPsCrossBoundaryTypeEnFieldNumber = 7;
  ::autodrive::workflow::proto::UssPsBoundaryTypeEn uss_ps_cross_boundary_type_en() const;
  void set_uss_ps_cross_boundary_type_en(::autodrive::workflow::proto::UssPsBoundaryTypeEn value);

  // uint32 uss_ps_depth_ui16 = 8;
  void clear_uss_ps_depth_ui16();
  static const int kUssPsDepthUi16FieldNumber = 8;
  ::google::protobuf::uint32 uss_ps_depth_ui16() const;
  void set_uss_ps_depth_ui16(::google::protobuf::uint32 value);

  // uint32 uss_ps_length_ui16 = 9;
  void clear_uss_ps_length_ui16();
  static const int kUssPsLengthUi16FieldNumber = 9;
  ::google::protobuf::uint32 uss_ps_length_ui16() const;
  void set_uss_ps_length_ui16(::google::protobuf::uint32 value);

  // int32 uss_ps_angle_i16 = 10;
  void clear_uss_ps_angle_i16();
  static const int kUssPsAngleI16FieldNumber = 10;
  ::google::protobuf::int32 uss_ps_angle_i16() const;
  void set_uss_ps_angle_i16(::google::protobuf::int32 value);

  // int64 uss_ps_finish_timestamp = 21;
  void clear_uss_ps_finish_timestamp();
  static const int kUssPsFinishTimestampFieldNumber = 21;
  ::google::protobuf::int64 uss_ps_finish_timestamp() const;
  void set_uss_ps_finish_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:autodrive.workflow.proto.PerFusUssPs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::autodrive::workflow::proto::UssPoint* uss_ps_1st_corner_;
  ::autodrive::workflow::proto::UssPoint* uss_ps_2nd_corner_;
  ::autodrive::workflow::proto::UssPoint* uss_ps_3st_corner_;
  ::autodrive::workflow::proto::UssPoint* uss_ps_4nd_corner_;
  ::autodrive::workflow::proto::UssPoint* uss_ps_1st_corner_gcs_;
  ::autodrive::workflow::proto::UssPoint* uss_ps_2nd_corner_gcs_;
  ::autodrive::workflow::proto::UssPoint* uss_ps_3st_corner_gcs_;
  ::autodrive::workflow::proto::UssPoint* uss_ps_4nd_corner_gcs_;
  ::autodrive::workflow::proto::UssPoint* uss_ps_boundary_1st_info_;
  ::autodrive::workflow::proto::UssPoint* uss_ps_boundary_2nd_info_;
  ::google::protobuf::uint32 uss_ps_id_ui8_;
  int uss_ps_status_en_;
  int uss_ps_type_en_;
  int uss_ps_orientation_en_;
  int uss_ps_1st_boundary_type_en_;
  int uss_ps_2nd_boundary_type_en_;
  int uss_ps_cross_boundary_type_en_;
  ::google::protobuf::uint32 uss_ps_depth_ui16_;
  ::google::protobuf::uint32 uss_ps_length_ui16_;
  ::google::protobuf::int32 uss_ps_angle_i16_;
  ::google::protobuf::int64 uss_ps_finish_timestamp_;
  mutable int _cached_size_;
  friend struct ::protobuf_uss_5fparking_5fslots_2eproto::TableStruct;
  friend void ::protobuf_uss_5fparking_5fslots_2eproto::InitDefaultsPerFusUssPsImpl();
};
// -------------------------------------------------------------------

class UssParkingSlotsMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:autodrive.workflow.proto.UssParkingSlotsMsg) */ {
 public:
  UssParkingSlotsMsg();
  virtual ~UssParkingSlotsMsg();

  UssParkingSlotsMsg(const UssParkingSlotsMsg& from);

  inline UssParkingSlotsMsg& operator=(const UssParkingSlotsMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UssParkingSlotsMsg(UssParkingSlotsMsg&& from) noexcept
    : UssParkingSlotsMsg() {
    *this = ::std::move(from);
  }

  inline UssParkingSlotsMsg& operator=(UssParkingSlotsMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UssParkingSlotsMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UssParkingSlotsMsg* internal_default_instance() {
    return reinterpret_cast<const UssParkingSlotsMsg*>(
               &_UssParkingSlotsMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(UssParkingSlotsMsg* other);
  friend void swap(UssParkingSlotsMsg& a, UssParkingSlotsMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UssParkingSlotsMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  UssParkingSlotsMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UssParkingSlotsMsg& from);
  void MergeFrom(const UssParkingSlotsMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UssParkingSlotsMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .autodrive.workflow.proto.PerFusUssHeader uss_header = 4;
  int uss_header_size() const;
  void clear_uss_header();
  static const int kUssHeaderFieldNumber = 4;
  const ::autodrive::workflow::proto::PerFusUssHeader& uss_header(int index) const;
  ::autodrive::workflow::proto::PerFusUssHeader* mutable_uss_header(int index);
  ::autodrive::workflow::proto::PerFusUssHeader* add_uss_header();
  ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::PerFusUssHeader >*
      mutable_uss_header();
  const ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::PerFusUssHeader >&
      uss_header() const;

  // repeated .autodrive.workflow.proto.PerFusUssPs uss_ps = 5;
  int uss_ps_size() const;
  void clear_uss_ps();
  static const int kUssPsFieldNumber = 5;
  const ::autodrive::workflow::proto::PerFusUssPs& uss_ps(int index) const;
  ::autodrive::workflow::proto::PerFusUssPs* mutable_uss_ps(int index);
  ::autodrive::workflow::proto::PerFusUssPs* add_uss_ps();
  ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::PerFusUssPs >*
      mutable_uss_ps();
  const ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::PerFusUssPs >&
      uss_ps() const;

  // bytes raw_array = 10;
  void clear_raw_array();
  static const int kRawArrayFieldNumber = 10;
  const ::std::string& raw_array() const;
  void set_raw_array(const ::std::string& value);
  #if LANG_CXX11
  void set_raw_array(::std::string&& value);
  #endif
  void set_raw_array(const char* value);
  void set_raw_array(const void* value, size_t size);
  ::std::string* mutable_raw_array();
  ::std::string* release_raw_array();
  void set_allocated_raw_array(::std::string* raw_array);

  // .autodrive.workflow.proto.MsgHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::autodrive::workflow::proto::MsgHeader& header() const;
  ::autodrive::workflow::proto::MsgHeader* release_header();
  ::autodrive::workflow::proto::MsgHeader* mutable_header();
  void set_allocated_header(::autodrive::workflow::proto::MsgHeader* header);

  // .autodrive.workflow.proto.Error error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::autodrive::workflow::proto::Error& error() const;
  ::autodrive::workflow::proto::Error* release_error();
  ::autodrive::workflow::proto::Error* mutable_error();
  void set_allocated_error(::autodrive::workflow::proto::Error* error);

  // .autodrive.workflow.proto.PerFusUssPs uss_correct_ps = 6;
  bool has_uss_correct_ps() const;
  void clear_uss_correct_ps();
  static const int kUssCorrectPsFieldNumber = 6;
  const ::autodrive::workflow::proto::PerFusUssPs& uss_correct_ps() const;
  ::autodrive::workflow::proto::PerFusUssPs* release_uss_correct_ps();
  ::autodrive::workflow::proto::PerFusUssPs* mutable_uss_correct_ps();
  void set_allocated_uss_correct_ps(::autodrive::workflow::proto::PerFusUssPs* uss_correct_ps);

  // .autodrive.workflow.proto.StateMachine state_machine = 7;
  bool has_state_machine() const;
  void clear_state_machine();
  static const int kStateMachineFieldNumber = 7;
  const ::autodrive::workflow::proto::StateMachine& state_machine() const;
  ::autodrive::workflow::proto::StateMachine* release_state_machine();
  ::autodrive::workflow::proto::StateMachine* mutable_state_machine();
  void set_allocated_state_machine(::autodrive::workflow::proto::StateMachine* state_machine);

  // int64 sensor_stamp = 8;
  void clear_sensor_stamp();
  static const int kSensorStampFieldNumber = 8;
  ::google::protobuf::int64 sensor_stamp() const;
  void set_sensor_stamp(::google::protobuf::int64 value);

  // int64 sample_stamp = 9;
  void clear_sample_stamp();
  static const int kSampleStampFieldNumber = 9;
  ::google::protobuf::int64 sample_stamp() const;
  void set_sample_stamp(::google::protobuf::int64 value);

  // int32 version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:autodrive.workflow.proto.UssParkingSlotsMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::PerFusUssHeader > uss_header_;
  ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::PerFusUssPs > uss_ps_;
  ::google::protobuf::internal::ArenaStringPtr raw_array_;
  ::autodrive::workflow::proto::MsgHeader* header_;
  ::autodrive::workflow::proto::Error* error_;
  ::autodrive::workflow::proto::PerFusUssPs* uss_correct_ps_;
  ::autodrive::workflow::proto::StateMachine* state_machine_;
  ::google::protobuf::int64 sensor_stamp_;
  ::google::protobuf::int64 sample_stamp_;
  ::google::protobuf::int32 version_;
  mutable int _cached_size_;
  friend struct ::protobuf_uss_5fparking_5fslots_2eproto::TableStruct;
  friend void ::protobuf_uss_5fparking_5fslots_2eproto::InitDefaultsUssParkingSlotsMsgImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PerFusUssPs

// uint32 uss_ps_id_ui8 = 1;
inline void PerFusUssPs::clear_uss_ps_id_ui8() {
  uss_ps_id_ui8_ = 0u;
}
inline ::google::protobuf::uint32 PerFusUssPs::uss_ps_id_ui8() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssPs.uss_ps_id_ui8)
  return uss_ps_id_ui8_;
}
inline void PerFusUssPs::set_uss_ps_id_ui8(::google::protobuf::uint32 value) {
  
  uss_ps_id_ui8_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.PerFusUssPs.uss_ps_id_ui8)
}

// .autodrive.workflow.proto.UssPsStatusEn uss_ps_status_en = 2;
inline void PerFusUssPs::clear_uss_ps_status_en() {
  uss_ps_status_en_ = 0;
}
inline ::autodrive::workflow::proto::UssPsStatusEn PerFusUssPs::uss_ps_status_en() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssPs.uss_ps_status_en)
  return static_cast< ::autodrive::workflow::proto::UssPsStatusEn >(uss_ps_status_en_);
}
inline void PerFusUssPs::set_uss_ps_status_en(::autodrive::workflow::proto::UssPsStatusEn value) {
  
  uss_ps_status_en_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.PerFusUssPs.uss_ps_status_en)
}

// .autodrive.workflow.proto.UssPsTypeEn uss_ps_type_en = 3;
inline void PerFusUssPs::clear_uss_ps_type_en() {
  uss_ps_type_en_ = 0;
}
inline ::autodrive::workflow::proto::UssPsTypeEn PerFusUssPs::uss_ps_type_en() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssPs.uss_ps_type_en)
  return static_cast< ::autodrive::workflow::proto::UssPsTypeEn >(uss_ps_type_en_);
}
inline void PerFusUssPs::set_uss_ps_type_en(::autodrive::workflow::proto::UssPsTypeEn value) {
  
  uss_ps_type_en_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.PerFusUssPs.uss_ps_type_en)
}

// .autodrive.workflow.proto.UssPsOrientationEn uss_ps_orientation_en = 4;
inline void PerFusUssPs::clear_uss_ps_orientation_en() {
  uss_ps_orientation_en_ = 0;
}
inline ::autodrive::workflow::proto::UssPsOrientationEn PerFusUssPs::uss_ps_orientation_en() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssPs.uss_ps_orientation_en)
  return static_cast< ::autodrive::workflow::proto::UssPsOrientationEn >(uss_ps_orientation_en_);
}
inline void PerFusUssPs::set_uss_ps_orientation_en(::autodrive::workflow::proto::UssPsOrientationEn value) {
  
  uss_ps_orientation_en_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.PerFusUssPs.uss_ps_orientation_en)
}

// .autodrive.workflow.proto.UssPsBoundaryTypeEn uss_ps_1st_boundary_type_en = 5;
inline void PerFusUssPs::clear_uss_ps_1st_boundary_type_en() {
  uss_ps_1st_boundary_type_en_ = 0;
}
inline ::autodrive::workflow::proto::UssPsBoundaryTypeEn PerFusUssPs::uss_ps_1st_boundary_type_en() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssPs.uss_ps_1st_boundary_type_en)
  return static_cast< ::autodrive::workflow::proto::UssPsBoundaryTypeEn >(uss_ps_1st_boundary_type_en_);
}
inline void PerFusUssPs::set_uss_ps_1st_boundary_type_en(::autodrive::workflow::proto::UssPsBoundaryTypeEn value) {
  
  uss_ps_1st_boundary_type_en_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.PerFusUssPs.uss_ps_1st_boundary_type_en)
}

// .autodrive.workflow.proto.UssPsBoundaryTypeEn uss_ps_2nd_boundary_type_en = 6;
inline void PerFusUssPs::clear_uss_ps_2nd_boundary_type_en() {
  uss_ps_2nd_boundary_type_en_ = 0;
}
inline ::autodrive::workflow::proto::UssPsBoundaryTypeEn PerFusUssPs::uss_ps_2nd_boundary_type_en() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssPs.uss_ps_2nd_boundary_type_en)
  return static_cast< ::autodrive::workflow::proto::UssPsBoundaryTypeEn >(uss_ps_2nd_boundary_type_en_);
}
inline void PerFusUssPs::set_uss_ps_2nd_boundary_type_en(::autodrive::workflow::proto::UssPsBoundaryTypeEn value) {
  
  uss_ps_2nd_boundary_type_en_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.PerFusUssPs.uss_ps_2nd_boundary_type_en)
}

// .autodrive.workflow.proto.UssPsBoundaryTypeEn uss_ps_cross_boundary_type_en = 7;
inline void PerFusUssPs::clear_uss_ps_cross_boundary_type_en() {
  uss_ps_cross_boundary_type_en_ = 0;
}
inline ::autodrive::workflow::proto::UssPsBoundaryTypeEn PerFusUssPs::uss_ps_cross_boundary_type_en() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssPs.uss_ps_cross_boundary_type_en)
  return static_cast< ::autodrive::workflow::proto::UssPsBoundaryTypeEn >(uss_ps_cross_boundary_type_en_);
}
inline void PerFusUssPs::set_uss_ps_cross_boundary_type_en(::autodrive::workflow::proto::UssPsBoundaryTypeEn value) {
  
  uss_ps_cross_boundary_type_en_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.PerFusUssPs.uss_ps_cross_boundary_type_en)
}

// uint32 uss_ps_depth_ui16 = 8;
inline void PerFusUssPs::clear_uss_ps_depth_ui16() {
  uss_ps_depth_ui16_ = 0u;
}
inline ::google::protobuf::uint32 PerFusUssPs::uss_ps_depth_ui16() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssPs.uss_ps_depth_ui16)
  return uss_ps_depth_ui16_;
}
inline void PerFusUssPs::set_uss_ps_depth_ui16(::google::protobuf::uint32 value) {
  
  uss_ps_depth_ui16_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.PerFusUssPs.uss_ps_depth_ui16)
}

// uint32 uss_ps_length_ui16 = 9;
inline void PerFusUssPs::clear_uss_ps_length_ui16() {
  uss_ps_length_ui16_ = 0u;
}
inline ::google::protobuf::uint32 PerFusUssPs::uss_ps_length_ui16() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssPs.uss_ps_length_ui16)
  return uss_ps_length_ui16_;
}
inline void PerFusUssPs::set_uss_ps_length_ui16(::google::protobuf::uint32 value) {
  
  uss_ps_length_ui16_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.PerFusUssPs.uss_ps_length_ui16)
}

// int32 uss_ps_angle_i16 = 10;
inline void PerFusUssPs::clear_uss_ps_angle_i16() {
  uss_ps_angle_i16_ = 0;
}
inline ::google::protobuf::int32 PerFusUssPs::uss_ps_angle_i16() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssPs.uss_ps_angle_i16)
  return uss_ps_angle_i16_;
}
inline void PerFusUssPs::set_uss_ps_angle_i16(::google::protobuf::int32 value) {
  
  uss_ps_angle_i16_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.PerFusUssPs.uss_ps_angle_i16)
}

// .autodrive.workflow.proto.UssPoint uss_ps_1st_corner = 11;
inline bool PerFusUssPs::has_uss_ps_1st_corner() const {
  return this != internal_default_instance() && uss_ps_1st_corner_ != NULL;
}
inline const ::autodrive::workflow::proto::UssPoint& PerFusUssPs::uss_ps_1st_corner() const {
  const ::autodrive::workflow::proto::UssPoint* p = uss_ps_1st_corner_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssPs.uss_ps_1st_corner)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::UssPoint*>(
      &::autodrive::workflow::proto::_UssPoint_default_instance_);
}
inline ::autodrive::workflow::proto::UssPoint* PerFusUssPs::release_uss_ps_1st_corner() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.PerFusUssPs.uss_ps_1st_corner)
  
  ::autodrive::workflow::proto::UssPoint* temp = uss_ps_1st_corner_;
  uss_ps_1st_corner_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::UssPoint* PerFusUssPs::mutable_uss_ps_1st_corner() {
  
  if (uss_ps_1st_corner_ == NULL) {
    uss_ps_1st_corner_ = new ::autodrive::workflow::proto::UssPoint;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.PerFusUssPs.uss_ps_1st_corner)
  return uss_ps_1st_corner_;
}
inline void PerFusUssPs::set_allocated_uss_ps_1st_corner(::autodrive::workflow::proto::UssPoint* uss_ps_1st_corner) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(uss_ps_1st_corner_);
  }
  if (uss_ps_1st_corner) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uss_ps_1st_corner = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uss_ps_1st_corner, submessage_arena);
    }
    
  } else {
    
  }
  uss_ps_1st_corner_ = uss_ps_1st_corner;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.PerFusUssPs.uss_ps_1st_corner)
}

// .autodrive.workflow.proto.UssPoint uss_ps_2nd_corner = 12;
inline bool PerFusUssPs::has_uss_ps_2nd_corner() const {
  return this != internal_default_instance() && uss_ps_2nd_corner_ != NULL;
}
inline const ::autodrive::workflow::proto::UssPoint& PerFusUssPs::uss_ps_2nd_corner() const {
  const ::autodrive::workflow::proto::UssPoint* p = uss_ps_2nd_corner_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssPs.uss_ps_2nd_corner)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::UssPoint*>(
      &::autodrive::workflow::proto::_UssPoint_default_instance_);
}
inline ::autodrive::workflow::proto::UssPoint* PerFusUssPs::release_uss_ps_2nd_corner() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.PerFusUssPs.uss_ps_2nd_corner)
  
  ::autodrive::workflow::proto::UssPoint* temp = uss_ps_2nd_corner_;
  uss_ps_2nd_corner_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::UssPoint* PerFusUssPs::mutable_uss_ps_2nd_corner() {
  
  if (uss_ps_2nd_corner_ == NULL) {
    uss_ps_2nd_corner_ = new ::autodrive::workflow::proto::UssPoint;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.PerFusUssPs.uss_ps_2nd_corner)
  return uss_ps_2nd_corner_;
}
inline void PerFusUssPs::set_allocated_uss_ps_2nd_corner(::autodrive::workflow::proto::UssPoint* uss_ps_2nd_corner) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(uss_ps_2nd_corner_);
  }
  if (uss_ps_2nd_corner) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uss_ps_2nd_corner = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uss_ps_2nd_corner, submessage_arena);
    }
    
  } else {
    
  }
  uss_ps_2nd_corner_ = uss_ps_2nd_corner;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.PerFusUssPs.uss_ps_2nd_corner)
}

// .autodrive.workflow.proto.UssPoint uss_ps_3st_corner = 13;
inline bool PerFusUssPs::has_uss_ps_3st_corner() const {
  return this != internal_default_instance() && uss_ps_3st_corner_ != NULL;
}
inline const ::autodrive::workflow::proto::UssPoint& PerFusUssPs::uss_ps_3st_corner() const {
  const ::autodrive::workflow::proto::UssPoint* p = uss_ps_3st_corner_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssPs.uss_ps_3st_corner)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::UssPoint*>(
      &::autodrive::workflow::proto::_UssPoint_default_instance_);
}
inline ::autodrive::workflow::proto::UssPoint* PerFusUssPs::release_uss_ps_3st_corner() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.PerFusUssPs.uss_ps_3st_corner)
  
  ::autodrive::workflow::proto::UssPoint* temp = uss_ps_3st_corner_;
  uss_ps_3st_corner_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::UssPoint* PerFusUssPs::mutable_uss_ps_3st_corner() {
  
  if (uss_ps_3st_corner_ == NULL) {
    uss_ps_3st_corner_ = new ::autodrive::workflow::proto::UssPoint;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.PerFusUssPs.uss_ps_3st_corner)
  return uss_ps_3st_corner_;
}
inline void PerFusUssPs::set_allocated_uss_ps_3st_corner(::autodrive::workflow::proto::UssPoint* uss_ps_3st_corner) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(uss_ps_3st_corner_);
  }
  if (uss_ps_3st_corner) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uss_ps_3st_corner = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uss_ps_3st_corner, submessage_arena);
    }
    
  } else {
    
  }
  uss_ps_3st_corner_ = uss_ps_3st_corner;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.PerFusUssPs.uss_ps_3st_corner)
}

// .autodrive.workflow.proto.UssPoint uss_ps_4nd_corner = 14;
inline bool PerFusUssPs::has_uss_ps_4nd_corner() const {
  return this != internal_default_instance() && uss_ps_4nd_corner_ != NULL;
}
inline const ::autodrive::workflow::proto::UssPoint& PerFusUssPs::uss_ps_4nd_corner() const {
  const ::autodrive::workflow::proto::UssPoint* p = uss_ps_4nd_corner_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssPs.uss_ps_4nd_corner)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::UssPoint*>(
      &::autodrive::workflow::proto::_UssPoint_default_instance_);
}
inline ::autodrive::workflow::proto::UssPoint* PerFusUssPs::release_uss_ps_4nd_corner() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.PerFusUssPs.uss_ps_4nd_corner)
  
  ::autodrive::workflow::proto::UssPoint* temp = uss_ps_4nd_corner_;
  uss_ps_4nd_corner_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::UssPoint* PerFusUssPs::mutable_uss_ps_4nd_corner() {
  
  if (uss_ps_4nd_corner_ == NULL) {
    uss_ps_4nd_corner_ = new ::autodrive::workflow::proto::UssPoint;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.PerFusUssPs.uss_ps_4nd_corner)
  return uss_ps_4nd_corner_;
}
inline void PerFusUssPs::set_allocated_uss_ps_4nd_corner(::autodrive::workflow::proto::UssPoint* uss_ps_4nd_corner) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(uss_ps_4nd_corner_);
  }
  if (uss_ps_4nd_corner) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uss_ps_4nd_corner = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uss_ps_4nd_corner, submessage_arena);
    }
    
  } else {
    
  }
  uss_ps_4nd_corner_ = uss_ps_4nd_corner;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.PerFusUssPs.uss_ps_4nd_corner)
}

// .autodrive.workflow.proto.UssPoint uss_ps_1st_corner_gcs = 15;
inline bool PerFusUssPs::has_uss_ps_1st_corner_gcs() const {
  return this != internal_default_instance() && uss_ps_1st_corner_gcs_ != NULL;
}
inline const ::autodrive::workflow::proto::UssPoint& PerFusUssPs::uss_ps_1st_corner_gcs() const {
  const ::autodrive::workflow::proto::UssPoint* p = uss_ps_1st_corner_gcs_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssPs.uss_ps_1st_corner_gcs)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::UssPoint*>(
      &::autodrive::workflow::proto::_UssPoint_default_instance_);
}
inline ::autodrive::workflow::proto::UssPoint* PerFusUssPs::release_uss_ps_1st_corner_gcs() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.PerFusUssPs.uss_ps_1st_corner_gcs)
  
  ::autodrive::workflow::proto::UssPoint* temp = uss_ps_1st_corner_gcs_;
  uss_ps_1st_corner_gcs_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::UssPoint* PerFusUssPs::mutable_uss_ps_1st_corner_gcs() {
  
  if (uss_ps_1st_corner_gcs_ == NULL) {
    uss_ps_1st_corner_gcs_ = new ::autodrive::workflow::proto::UssPoint;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.PerFusUssPs.uss_ps_1st_corner_gcs)
  return uss_ps_1st_corner_gcs_;
}
inline void PerFusUssPs::set_allocated_uss_ps_1st_corner_gcs(::autodrive::workflow::proto::UssPoint* uss_ps_1st_corner_gcs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(uss_ps_1st_corner_gcs_);
  }
  if (uss_ps_1st_corner_gcs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uss_ps_1st_corner_gcs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uss_ps_1st_corner_gcs, submessage_arena);
    }
    
  } else {
    
  }
  uss_ps_1st_corner_gcs_ = uss_ps_1st_corner_gcs;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.PerFusUssPs.uss_ps_1st_corner_gcs)
}

// .autodrive.workflow.proto.UssPoint uss_ps_2nd_corner_gcs = 16;
inline bool PerFusUssPs::has_uss_ps_2nd_corner_gcs() const {
  return this != internal_default_instance() && uss_ps_2nd_corner_gcs_ != NULL;
}
inline const ::autodrive::workflow::proto::UssPoint& PerFusUssPs::uss_ps_2nd_corner_gcs() const {
  const ::autodrive::workflow::proto::UssPoint* p = uss_ps_2nd_corner_gcs_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssPs.uss_ps_2nd_corner_gcs)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::UssPoint*>(
      &::autodrive::workflow::proto::_UssPoint_default_instance_);
}
inline ::autodrive::workflow::proto::UssPoint* PerFusUssPs::release_uss_ps_2nd_corner_gcs() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.PerFusUssPs.uss_ps_2nd_corner_gcs)
  
  ::autodrive::workflow::proto::UssPoint* temp = uss_ps_2nd_corner_gcs_;
  uss_ps_2nd_corner_gcs_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::UssPoint* PerFusUssPs::mutable_uss_ps_2nd_corner_gcs() {
  
  if (uss_ps_2nd_corner_gcs_ == NULL) {
    uss_ps_2nd_corner_gcs_ = new ::autodrive::workflow::proto::UssPoint;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.PerFusUssPs.uss_ps_2nd_corner_gcs)
  return uss_ps_2nd_corner_gcs_;
}
inline void PerFusUssPs::set_allocated_uss_ps_2nd_corner_gcs(::autodrive::workflow::proto::UssPoint* uss_ps_2nd_corner_gcs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(uss_ps_2nd_corner_gcs_);
  }
  if (uss_ps_2nd_corner_gcs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uss_ps_2nd_corner_gcs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uss_ps_2nd_corner_gcs, submessage_arena);
    }
    
  } else {
    
  }
  uss_ps_2nd_corner_gcs_ = uss_ps_2nd_corner_gcs;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.PerFusUssPs.uss_ps_2nd_corner_gcs)
}

// .autodrive.workflow.proto.UssPoint uss_ps_3st_corner_gcs = 17;
inline bool PerFusUssPs::has_uss_ps_3st_corner_gcs() const {
  return this != internal_default_instance() && uss_ps_3st_corner_gcs_ != NULL;
}
inline const ::autodrive::workflow::proto::UssPoint& PerFusUssPs::uss_ps_3st_corner_gcs() const {
  const ::autodrive::workflow::proto::UssPoint* p = uss_ps_3st_corner_gcs_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssPs.uss_ps_3st_corner_gcs)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::UssPoint*>(
      &::autodrive::workflow::proto::_UssPoint_default_instance_);
}
inline ::autodrive::workflow::proto::UssPoint* PerFusUssPs::release_uss_ps_3st_corner_gcs() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.PerFusUssPs.uss_ps_3st_corner_gcs)
  
  ::autodrive::workflow::proto::UssPoint* temp = uss_ps_3st_corner_gcs_;
  uss_ps_3st_corner_gcs_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::UssPoint* PerFusUssPs::mutable_uss_ps_3st_corner_gcs() {
  
  if (uss_ps_3st_corner_gcs_ == NULL) {
    uss_ps_3st_corner_gcs_ = new ::autodrive::workflow::proto::UssPoint;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.PerFusUssPs.uss_ps_3st_corner_gcs)
  return uss_ps_3st_corner_gcs_;
}
inline void PerFusUssPs::set_allocated_uss_ps_3st_corner_gcs(::autodrive::workflow::proto::UssPoint* uss_ps_3st_corner_gcs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(uss_ps_3st_corner_gcs_);
  }
  if (uss_ps_3st_corner_gcs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uss_ps_3st_corner_gcs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uss_ps_3st_corner_gcs, submessage_arena);
    }
    
  } else {
    
  }
  uss_ps_3st_corner_gcs_ = uss_ps_3st_corner_gcs;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.PerFusUssPs.uss_ps_3st_corner_gcs)
}

// .autodrive.workflow.proto.UssPoint uss_ps_4nd_corner_gcs = 18;
inline bool PerFusUssPs::has_uss_ps_4nd_corner_gcs() const {
  return this != internal_default_instance() && uss_ps_4nd_corner_gcs_ != NULL;
}
inline const ::autodrive::workflow::proto::UssPoint& PerFusUssPs::uss_ps_4nd_corner_gcs() const {
  const ::autodrive::workflow::proto::UssPoint* p = uss_ps_4nd_corner_gcs_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssPs.uss_ps_4nd_corner_gcs)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::UssPoint*>(
      &::autodrive::workflow::proto::_UssPoint_default_instance_);
}
inline ::autodrive::workflow::proto::UssPoint* PerFusUssPs::release_uss_ps_4nd_corner_gcs() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.PerFusUssPs.uss_ps_4nd_corner_gcs)
  
  ::autodrive::workflow::proto::UssPoint* temp = uss_ps_4nd_corner_gcs_;
  uss_ps_4nd_corner_gcs_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::UssPoint* PerFusUssPs::mutable_uss_ps_4nd_corner_gcs() {
  
  if (uss_ps_4nd_corner_gcs_ == NULL) {
    uss_ps_4nd_corner_gcs_ = new ::autodrive::workflow::proto::UssPoint;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.PerFusUssPs.uss_ps_4nd_corner_gcs)
  return uss_ps_4nd_corner_gcs_;
}
inline void PerFusUssPs::set_allocated_uss_ps_4nd_corner_gcs(::autodrive::workflow::proto::UssPoint* uss_ps_4nd_corner_gcs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(uss_ps_4nd_corner_gcs_);
  }
  if (uss_ps_4nd_corner_gcs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uss_ps_4nd_corner_gcs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uss_ps_4nd_corner_gcs, submessage_arena);
    }
    
  } else {
    
  }
  uss_ps_4nd_corner_gcs_ = uss_ps_4nd_corner_gcs;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.PerFusUssPs.uss_ps_4nd_corner_gcs)
}

// .autodrive.workflow.proto.UssPoint uss_ps_boundary_1st_info = 19;
inline bool PerFusUssPs::has_uss_ps_boundary_1st_info() const {
  return this != internal_default_instance() && uss_ps_boundary_1st_info_ != NULL;
}
inline const ::autodrive::workflow::proto::UssPoint& PerFusUssPs::uss_ps_boundary_1st_info() const {
  const ::autodrive::workflow::proto::UssPoint* p = uss_ps_boundary_1st_info_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssPs.uss_ps_boundary_1st_info)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::UssPoint*>(
      &::autodrive::workflow::proto::_UssPoint_default_instance_);
}
inline ::autodrive::workflow::proto::UssPoint* PerFusUssPs::release_uss_ps_boundary_1st_info() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.PerFusUssPs.uss_ps_boundary_1st_info)
  
  ::autodrive::workflow::proto::UssPoint* temp = uss_ps_boundary_1st_info_;
  uss_ps_boundary_1st_info_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::UssPoint* PerFusUssPs::mutable_uss_ps_boundary_1st_info() {
  
  if (uss_ps_boundary_1st_info_ == NULL) {
    uss_ps_boundary_1st_info_ = new ::autodrive::workflow::proto::UssPoint;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.PerFusUssPs.uss_ps_boundary_1st_info)
  return uss_ps_boundary_1st_info_;
}
inline void PerFusUssPs::set_allocated_uss_ps_boundary_1st_info(::autodrive::workflow::proto::UssPoint* uss_ps_boundary_1st_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(uss_ps_boundary_1st_info_);
  }
  if (uss_ps_boundary_1st_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uss_ps_boundary_1st_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uss_ps_boundary_1st_info, submessage_arena);
    }
    
  } else {
    
  }
  uss_ps_boundary_1st_info_ = uss_ps_boundary_1st_info;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.PerFusUssPs.uss_ps_boundary_1st_info)
}

// .autodrive.workflow.proto.UssPoint uss_ps_boundary_2nd_info = 20;
inline bool PerFusUssPs::has_uss_ps_boundary_2nd_info() const {
  return this != internal_default_instance() && uss_ps_boundary_2nd_info_ != NULL;
}
inline const ::autodrive::workflow::proto::UssPoint& PerFusUssPs::uss_ps_boundary_2nd_info() const {
  const ::autodrive::workflow::proto::UssPoint* p = uss_ps_boundary_2nd_info_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssPs.uss_ps_boundary_2nd_info)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::UssPoint*>(
      &::autodrive::workflow::proto::_UssPoint_default_instance_);
}
inline ::autodrive::workflow::proto::UssPoint* PerFusUssPs::release_uss_ps_boundary_2nd_info() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.PerFusUssPs.uss_ps_boundary_2nd_info)
  
  ::autodrive::workflow::proto::UssPoint* temp = uss_ps_boundary_2nd_info_;
  uss_ps_boundary_2nd_info_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::UssPoint* PerFusUssPs::mutable_uss_ps_boundary_2nd_info() {
  
  if (uss_ps_boundary_2nd_info_ == NULL) {
    uss_ps_boundary_2nd_info_ = new ::autodrive::workflow::proto::UssPoint;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.PerFusUssPs.uss_ps_boundary_2nd_info)
  return uss_ps_boundary_2nd_info_;
}
inline void PerFusUssPs::set_allocated_uss_ps_boundary_2nd_info(::autodrive::workflow::proto::UssPoint* uss_ps_boundary_2nd_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(uss_ps_boundary_2nd_info_);
  }
  if (uss_ps_boundary_2nd_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uss_ps_boundary_2nd_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uss_ps_boundary_2nd_info, submessage_arena);
    }
    
  } else {
    
  }
  uss_ps_boundary_2nd_info_ = uss_ps_boundary_2nd_info;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.PerFusUssPs.uss_ps_boundary_2nd_info)
}

// int64 uss_ps_finish_timestamp = 21;
inline void PerFusUssPs::clear_uss_ps_finish_timestamp() {
  uss_ps_finish_timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PerFusUssPs::uss_ps_finish_timestamp() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.PerFusUssPs.uss_ps_finish_timestamp)
  return uss_ps_finish_timestamp_;
}
inline void PerFusUssPs::set_uss_ps_finish_timestamp(::google::protobuf::int64 value) {
  
  uss_ps_finish_timestamp_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.PerFusUssPs.uss_ps_finish_timestamp)
}

// -------------------------------------------------------------------

// UssParkingSlotsMsg

// .autodrive.workflow.proto.MsgHeader header = 1;
inline bool UssParkingSlotsMsg::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::autodrive::workflow::proto::MsgHeader& UssParkingSlotsMsg::header() const {
  const ::autodrive::workflow::proto::MsgHeader* p = header_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.UssParkingSlotsMsg.header)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::MsgHeader*>(
      &::autodrive::workflow::proto::_MsgHeader_default_instance_);
}
inline ::autodrive::workflow::proto::MsgHeader* UssParkingSlotsMsg::release_header() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.UssParkingSlotsMsg.header)
  
  ::autodrive::workflow::proto::MsgHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::MsgHeader* UssParkingSlotsMsg::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::autodrive::workflow::proto::MsgHeader;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.UssParkingSlotsMsg.header)
  return header_;
}
inline void UssParkingSlotsMsg::set_allocated_header(::autodrive::workflow::proto::MsgHeader* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.UssParkingSlotsMsg.header)
}

// .autodrive.workflow.proto.Error error = 2;
inline bool UssParkingSlotsMsg::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline const ::autodrive::workflow::proto::Error& UssParkingSlotsMsg::error() const {
  const ::autodrive::workflow::proto::Error* p = error_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.UssParkingSlotsMsg.error)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::Error*>(
      &::autodrive::workflow::proto::_Error_default_instance_);
}
inline ::autodrive::workflow::proto::Error* UssParkingSlotsMsg::release_error() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.UssParkingSlotsMsg.error)
  
  ::autodrive::workflow::proto::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::Error* UssParkingSlotsMsg::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::autodrive::workflow::proto::Error;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.UssParkingSlotsMsg.error)
  return error_;
}
inline void UssParkingSlotsMsg::set_allocated_error(::autodrive::workflow::proto::Error* error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(error_);
  }
  if (error) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    
  } else {
    
  }
  error_ = error;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.UssParkingSlotsMsg.error)
}

// int32 version = 3;
inline void UssParkingSlotsMsg::clear_version() {
  version_ = 0;
}
inline ::google::protobuf::int32 UssParkingSlotsMsg::version() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.UssParkingSlotsMsg.version)
  return version_;
}
inline void UssParkingSlotsMsg::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.UssParkingSlotsMsg.version)
}

// repeated .autodrive.workflow.proto.PerFusUssHeader uss_header = 4;
inline int UssParkingSlotsMsg::uss_header_size() const {
  return uss_header_.size();
}
inline const ::autodrive::workflow::proto::PerFusUssHeader& UssParkingSlotsMsg::uss_header(int index) const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.UssParkingSlotsMsg.uss_header)
  return uss_header_.Get(index);
}
inline ::autodrive::workflow::proto::PerFusUssHeader* UssParkingSlotsMsg::mutable_uss_header(int index) {
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.UssParkingSlotsMsg.uss_header)
  return uss_header_.Mutable(index);
}
inline ::autodrive::workflow::proto::PerFusUssHeader* UssParkingSlotsMsg::add_uss_header() {
  // @@protoc_insertion_point(field_add:autodrive.workflow.proto.UssParkingSlotsMsg.uss_header)
  return uss_header_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::PerFusUssHeader >*
UssParkingSlotsMsg::mutable_uss_header() {
  // @@protoc_insertion_point(field_mutable_list:autodrive.workflow.proto.UssParkingSlotsMsg.uss_header)
  return &uss_header_;
}
inline const ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::PerFusUssHeader >&
UssParkingSlotsMsg::uss_header() const {
  // @@protoc_insertion_point(field_list:autodrive.workflow.proto.UssParkingSlotsMsg.uss_header)
  return uss_header_;
}

// repeated .autodrive.workflow.proto.PerFusUssPs uss_ps = 5;
inline int UssParkingSlotsMsg::uss_ps_size() const {
  return uss_ps_.size();
}
inline void UssParkingSlotsMsg::clear_uss_ps() {
  uss_ps_.Clear();
}
inline const ::autodrive::workflow::proto::PerFusUssPs& UssParkingSlotsMsg::uss_ps(int index) const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.UssParkingSlotsMsg.uss_ps)
  return uss_ps_.Get(index);
}
inline ::autodrive::workflow::proto::PerFusUssPs* UssParkingSlotsMsg::mutable_uss_ps(int index) {
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.UssParkingSlotsMsg.uss_ps)
  return uss_ps_.Mutable(index);
}
inline ::autodrive::workflow::proto::PerFusUssPs* UssParkingSlotsMsg::add_uss_ps() {
  // @@protoc_insertion_point(field_add:autodrive.workflow.proto.UssParkingSlotsMsg.uss_ps)
  return uss_ps_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::PerFusUssPs >*
UssParkingSlotsMsg::mutable_uss_ps() {
  // @@protoc_insertion_point(field_mutable_list:autodrive.workflow.proto.UssParkingSlotsMsg.uss_ps)
  return &uss_ps_;
}
inline const ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::PerFusUssPs >&
UssParkingSlotsMsg::uss_ps() const {
  // @@protoc_insertion_point(field_list:autodrive.workflow.proto.UssParkingSlotsMsg.uss_ps)
  return uss_ps_;
}

// .autodrive.workflow.proto.PerFusUssPs uss_correct_ps = 6;
inline bool UssParkingSlotsMsg::has_uss_correct_ps() const {
  return this != internal_default_instance() && uss_correct_ps_ != NULL;
}
inline void UssParkingSlotsMsg::clear_uss_correct_ps() {
  if (GetArenaNoVirtual() == NULL && uss_correct_ps_ != NULL) {
    delete uss_correct_ps_;
  }
  uss_correct_ps_ = NULL;
}
inline const ::autodrive::workflow::proto::PerFusUssPs& UssParkingSlotsMsg::uss_correct_ps() const {
  const ::autodrive::workflow::proto::PerFusUssPs* p = uss_correct_ps_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.UssParkingSlotsMsg.uss_correct_ps)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::PerFusUssPs*>(
      &::autodrive::workflow::proto::_PerFusUssPs_default_instance_);
}
inline ::autodrive::workflow::proto::PerFusUssPs* UssParkingSlotsMsg::release_uss_correct_ps() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.UssParkingSlotsMsg.uss_correct_ps)
  
  ::autodrive::workflow::proto::PerFusUssPs* temp = uss_correct_ps_;
  uss_correct_ps_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::PerFusUssPs* UssParkingSlotsMsg::mutable_uss_correct_ps() {
  
  if (uss_correct_ps_ == NULL) {
    uss_correct_ps_ = new ::autodrive::workflow::proto::PerFusUssPs;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.UssParkingSlotsMsg.uss_correct_ps)
  return uss_correct_ps_;
}
inline void UssParkingSlotsMsg::set_allocated_uss_correct_ps(::autodrive::workflow::proto::PerFusUssPs* uss_correct_ps) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete uss_correct_ps_;
  }
  if (uss_correct_ps) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uss_correct_ps = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uss_correct_ps, submessage_arena);
    }
    
  } else {
    
  }
  uss_correct_ps_ = uss_correct_ps;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.UssParkingSlotsMsg.uss_correct_ps)
}

// .autodrive.workflow.proto.StateMachine state_machine = 7;
inline bool UssParkingSlotsMsg::has_state_machine() const {
  return this != internal_default_instance() && state_machine_ != NULL;
}
inline const ::autodrive::workflow::proto::StateMachine& UssParkingSlotsMsg::state_machine() const {
  const ::autodrive::workflow::proto::StateMachine* p = state_machine_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.UssParkingSlotsMsg.state_machine)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::StateMachine*>(
      &::autodrive::workflow::proto::_StateMachine_default_instance_);
}
inline ::autodrive::workflow::proto::StateMachine* UssParkingSlotsMsg::release_state_machine() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.UssParkingSlotsMsg.state_machine)
  
  ::autodrive::workflow::proto::StateMachine* temp = state_machine_;
  state_machine_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::StateMachine* UssParkingSlotsMsg::mutable_state_machine() {
  
  if (state_machine_ == NULL) {
    state_machine_ = new ::autodrive::workflow::proto::StateMachine;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.UssParkingSlotsMsg.state_machine)
  return state_machine_;
}
inline void UssParkingSlotsMsg::set_allocated_state_machine(::autodrive::workflow::proto::StateMachine* state_machine) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(state_machine_);
  }
  if (state_machine) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state_machine = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state_machine, submessage_arena);
    }
    
  } else {
    
  }
  state_machine_ = state_machine;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.UssParkingSlotsMsg.state_machine)
}

// int64 sensor_stamp = 8;
inline void UssParkingSlotsMsg::clear_sensor_stamp() {
  sensor_stamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 UssParkingSlotsMsg::sensor_stamp() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.UssParkingSlotsMsg.sensor_stamp)
  return sensor_stamp_;
}
inline void UssParkingSlotsMsg::set_sensor_stamp(::google::protobuf::int64 value) {
  
  sensor_stamp_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.UssParkingSlotsMsg.sensor_stamp)
}

// int64 sample_stamp = 9;
inline void UssParkingSlotsMsg::clear_sample_stamp() {
  sample_stamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 UssParkingSlotsMsg::sample_stamp() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.UssParkingSlotsMsg.sample_stamp)
  return sample_stamp_;
}
inline void UssParkingSlotsMsg::set_sample_stamp(::google::protobuf::int64 value) {
  
  sample_stamp_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.UssParkingSlotsMsg.sample_stamp)
}

// bytes raw_array = 10;
inline void UssParkingSlotsMsg::clear_raw_array() {
  raw_array_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UssParkingSlotsMsg::raw_array() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.UssParkingSlotsMsg.raw_array)
  return raw_array_.GetNoArena();
}
inline void UssParkingSlotsMsg::set_raw_array(const ::std::string& value) {
  
  raw_array_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.UssParkingSlotsMsg.raw_array)
}
#if LANG_CXX11
inline void UssParkingSlotsMsg::set_raw_array(::std::string&& value) {
  
  raw_array_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:autodrive.workflow.proto.UssParkingSlotsMsg.raw_array)
}
#endif
inline void UssParkingSlotsMsg::set_raw_array(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  raw_array_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:autodrive.workflow.proto.UssParkingSlotsMsg.raw_array)
}
inline void UssParkingSlotsMsg::set_raw_array(const void* value, size_t size) {
  
  raw_array_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:autodrive.workflow.proto.UssParkingSlotsMsg.raw_array)
}
inline ::std::string* UssParkingSlotsMsg::mutable_raw_array() {
  
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.UssParkingSlotsMsg.raw_array)
  return raw_array_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UssParkingSlotsMsg::release_raw_array() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.UssParkingSlotsMsg.raw_array)
  
  return raw_array_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UssParkingSlotsMsg::set_allocated_raw_array(::std::string* raw_array) {
  if (raw_array != NULL) {
    
  } else {
    
  }
  raw_array_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), raw_array);
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.UssParkingSlotsMsg.raw_array)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace workflow
}  // namespace autodrive

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::autodrive::workflow::proto::UssPsStatusEn> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::autodrive::workflow::proto::UssPsStatusEn>() {
  return ::autodrive::workflow::proto::UssPsStatusEn_descriptor();
}
template <> struct is_proto_enum< ::autodrive::workflow::proto::UssPsTypeEn> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::autodrive::workflow::proto::UssPsTypeEn>() {
  return ::autodrive::workflow::proto::UssPsTypeEn_descriptor();
}
template <> struct is_proto_enum< ::autodrive::workflow::proto::UssPsOrientationEn> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::autodrive::workflow::proto::UssPsOrientationEn>() {
  return ::autodrive::workflow::proto::UssPsOrientationEn_descriptor();
}
template <> struct is_proto_enum< ::autodrive::workflow::proto::UssPsBoundaryTypeEn> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::autodrive::workflow::proto::UssPsBoundaryTypeEn>() {
  return ::autodrive::workflow::proto::UssPsBoundaryTypeEn_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_uss_5fparking_5fslots_2eproto__INCLUDED
