// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iqa_parsing.proto

#ifndef PROTOBUF_iqa_5fparsing_2eproto__INCLUDED
#define PROTOBUF_iqa_5fparsing_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
#include "sync_cylinder_parsing.pb.h"
#include "perception_base.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_iqa_5fparsing_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsSceneParsingResultsImpl();
void InitDefaultsSceneParsingResults();
void InitDefaultsIqaParsingImpl();
void InitDefaultsIqaParsing();
void InitDefaultsIqaParsingResultsImpl();
void InitDefaultsIqaParsingResults();
void InitDefaultsIqaParsingMsgImpl();
void InitDefaultsIqaParsingMsg();
inline void InitDefaults() {
  InitDefaultsSceneParsingResults();
  InitDefaultsIqaParsing();
  InitDefaultsIqaParsingResults();
  InitDefaultsIqaParsingMsg();
}
}  // namespace protobuf_iqa_5fparsing_2eproto
namespace autodrive {
namespace workflow {
namespace proto {
class IqaParsing;
class IqaParsingDefaultTypeInternal;
extern IqaParsingDefaultTypeInternal _IqaParsing_default_instance_;
class IqaParsingMsg;
class IqaParsingMsgDefaultTypeInternal;
extern IqaParsingMsgDefaultTypeInternal _IqaParsingMsg_default_instance_;
class IqaParsingResults;
class IqaParsingResultsDefaultTypeInternal;
extern IqaParsingResultsDefaultTypeInternal _IqaParsingResults_default_instance_;
class SceneParsingResults;
class SceneParsingResultsDefaultTypeInternal;
extern SceneParsingResultsDefaultTypeInternal _SceneParsingResults_default_instance_;
}  // namespace proto
}  // namespace workflow
}  // namespace autodrive
namespace autodrive {
namespace workflow {
namespace proto {

// ===================================================================

class SceneParsingResults : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:autodrive.workflow.proto.SceneParsingResults) */ {
 public:
  SceneParsingResults();
  virtual ~SceneParsingResults();

  SceneParsingResults(const SceneParsingResults& from);

  inline SceneParsingResults& operator=(const SceneParsingResults& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneParsingResults(SceneParsingResults&& from) noexcept
    : SceneParsingResults() {
    *this = ::std::move(from);
  }

  inline SceneParsingResults& operator=(SceneParsingResults&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneParsingResults& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SceneParsingResults* internal_default_instance() {
    return reinterpret_cast<const SceneParsingResults*>(
               &_SceneParsingResults_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SceneParsingResults* other);
  friend void swap(SceneParsingResults& a, SceneParsingResults& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneParsingResults* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneParsingResults* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneParsingResults& from);
  void MergeFrom(const SceneParsingResults& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneParsingResults* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .autodrive.workflow.proto.perception_base.SceneParsing scene_parsing_result_data = 1;
  int scene_parsing_result_data_size() const;
  void clear_scene_parsing_result_data();
  static const int kSceneParsingResultDataFieldNumber = 1;
  const ::autodrive::workflow::proto::perception_base::SceneParsing& scene_parsing_result_data(int index) const;
  ::autodrive::workflow::proto::perception_base::SceneParsing* mutable_scene_parsing_result_data(int index);
  ::autodrive::workflow::proto::perception_base::SceneParsing* add_scene_parsing_result_data();
  ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::perception_base::SceneParsing >*
      mutable_scene_parsing_result_data();
  const ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::perception_base::SceneParsing >&
      scene_parsing_result_data() const;

  // @@protoc_insertion_point(class_scope:autodrive.workflow.proto.SceneParsingResults)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::perception_base::SceneParsing > scene_parsing_result_data_;
  mutable int _cached_size_;
  friend struct ::protobuf_iqa_5fparsing_2eproto::TableStruct;
  friend void ::protobuf_iqa_5fparsing_2eproto::InitDefaultsSceneParsingResultsImpl();
};
// -------------------------------------------------------------------

class IqaParsing : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:autodrive.workflow.proto.IqaParsing) */ {
 public:
  IqaParsing();
  virtual ~IqaParsing();

  IqaParsing(const IqaParsing& from);

  inline IqaParsing& operator=(const IqaParsing& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IqaParsing(IqaParsing&& from) noexcept
    : IqaParsing() {
    *this = ::std::move(from);
  }

  inline IqaParsing& operator=(IqaParsing&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IqaParsing& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IqaParsing* internal_default_instance() {
    return reinterpret_cast<const IqaParsing*>(
               &_IqaParsing_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(IqaParsing* other);
  friend void swap(IqaParsing& a, IqaParsing& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IqaParsing* New() const PROTOBUF_FINAL { return New(NULL); }

  IqaParsing* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IqaParsing& from);
  void MergeFrom(const IqaParsing& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IqaParsing* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .autodrive.workflow.proto.CylinderParsingImageData parsing_data = 2;
  bool has_parsing_data() const;
  void clear_parsing_data();
  static const int kParsingDataFieldNumber = 2;
  const ::autodrive::workflow::proto::CylinderParsingImageData& parsing_data() const;
  ::autodrive::workflow::proto::CylinderParsingImageData* release_parsing_data();
  ::autodrive::workflow::proto::CylinderParsingImageData* mutable_parsing_data();
  void set_allocated_parsing_data(::autodrive::workflow::proto::CylinderParsingImageData* parsing_data);

  // .autodrive.workflow.proto.perception_base.ImageId image_id = 1;
  void clear_image_id();
  static const int kImageIdFieldNumber = 1;
  ::autodrive::workflow::proto::perception_base::ImageId image_id() const;
  void set_image_id(::autodrive::workflow::proto::perception_base::ImageId value);

  // @@protoc_insertion_point(class_scope:autodrive.workflow.proto.IqaParsing)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::autodrive::workflow::proto::CylinderParsingImageData* parsing_data_;
  int image_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_iqa_5fparsing_2eproto::TableStruct;
  friend void ::protobuf_iqa_5fparsing_2eproto::InitDefaultsIqaParsingImpl();
};
// -------------------------------------------------------------------

class IqaParsingResults : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:autodrive.workflow.proto.IqaParsingResults) */ {
 public:
  IqaParsingResults();
  virtual ~IqaParsingResults();

  IqaParsingResults(const IqaParsingResults& from);

  inline IqaParsingResults& operator=(const IqaParsingResults& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IqaParsingResults(IqaParsingResults&& from) noexcept
    : IqaParsingResults() {
    *this = ::std::move(from);
  }

  inline IqaParsingResults& operator=(IqaParsingResults&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IqaParsingResults& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IqaParsingResults* internal_default_instance() {
    return reinterpret_cast<const IqaParsingResults*>(
               &_IqaParsingResults_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(IqaParsingResults* other);
  friend void swap(IqaParsingResults& a, IqaParsingResults& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IqaParsingResults* New() const PROTOBUF_FINAL { return New(NULL); }

  IqaParsingResults* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IqaParsingResults& from);
  void MergeFrom(const IqaParsingResults& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IqaParsingResults* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .autodrive.workflow.proto.IqaParsing iqa_parsing_result_data = 1;
  int iqa_parsing_result_data_size() const;
  void clear_iqa_parsing_result_data();
  static const int kIqaParsingResultDataFieldNumber = 1;
  const ::autodrive::workflow::proto::IqaParsing& iqa_parsing_result_data(int index) const;
  ::autodrive::workflow::proto::IqaParsing* mutable_iqa_parsing_result_data(int index);
  ::autodrive::workflow::proto::IqaParsing* add_iqa_parsing_result_data();
  ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::IqaParsing >*
      mutable_iqa_parsing_result_data();
  const ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::IqaParsing >&
      iqa_parsing_result_data() const;

  // @@protoc_insertion_point(class_scope:autodrive.workflow.proto.IqaParsingResults)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::IqaParsing > iqa_parsing_result_data_;
  mutable int _cached_size_;
  friend struct ::protobuf_iqa_5fparsing_2eproto::TableStruct;
  friend void ::protobuf_iqa_5fparsing_2eproto::InitDefaultsIqaParsingResultsImpl();
};
// -------------------------------------------------------------------

class IqaParsingMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:autodrive.workflow.proto.IqaParsingMsg) */ {
 public:
  IqaParsingMsg();
  virtual ~IqaParsingMsg();

  IqaParsingMsg(const IqaParsingMsg& from);

  inline IqaParsingMsg& operator=(const IqaParsingMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IqaParsingMsg(IqaParsingMsg&& from) noexcept
    : IqaParsingMsg() {
    *this = ::std::move(from);
  }

  inline IqaParsingMsg& operator=(IqaParsingMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IqaParsingMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IqaParsingMsg* internal_default_instance() {
    return reinterpret_cast<const IqaParsingMsg*>(
               &_IqaParsingMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(IqaParsingMsg* other);
  friend void swap(IqaParsingMsg& a, IqaParsingMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IqaParsingMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  IqaParsingMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IqaParsingMsg& from);
  void MergeFrom(const IqaParsingMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IqaParsingMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .autodrive.workflow.proto.MsgHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::autodrive::workflow::proto::MsgHeader& header() const;
  ::autodrive::workflow::proto::MsgHeader* release_header();
  ::autodrive::workflow::proto::MsgHeader* mutable_header();
  void set_allocated_header(::autodrive::workflow::proto::MsgHeader* header);

  // .autodrive.workflow.proto.Error error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::autodrive::workflow::proto::Error& error() const;
  ::autodrive::workflow::proto::Error* release_error();
  ::autodrive::workflow::proto::Error* mutable_error();
  void set_allocated_error(::autodrive::workflow::proto::Error* error);

  // .autodrive.workflow.proto.IqaParsingResults iqa_parsing_data = 3;
  bool has_iqa_parsing_data() const;
  void clear_iqa_parsing_data();
  static const int kIqaParsingDataFieldNumber = 3;
  const ::autodrive::workflow::proto::IqaParsingResults& iqa_parsing_data() const;
  ::autodrive::workflow::proto::IqaParsingResults* release_iqa_parsing_data();
  ::autodrive::workflow::proto::IqaParsingResults* mutable_iqa_parsing_data();
  void set_allocated_iqa_parsing_data(::autodrive::workflow::proto::IqaParsingResults* iqa_parsing_data);

  // .autodrive.workflow.proto.SceneParsingResults scene_parsing_data = 4;
  bool has_scene_parsing_data() const;
  void clear_scene_parsing_data();
  static const int kSceneParsingDataFieldNumber = 4;
  const ::autodrive::workflow::proto::SceneParsingResults& scene_parsing_data() const;
  ::autodrive::workflow::proto::SceneParsingResults* release_scene_parsing_data();
  ::autodrive::workflow::proto::SceneParsingResults* mutable_scene_parsing_data();
  void set_allocated_scene_parsing_data(::autodrive::workflow::proto::SceneParsingResults* scene_parsing_data);

  // @@protoc_insertion_point(class_scope:autodrive.workflow.proto.IqaParsingMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::autodrive::workflow::proto::MsgHeader* header_;
  ::autodrive::workflow::proto::Error* error_;
  ::autodrive::workflow::proto::IqaParsingResults* iqa_parsing_data_;
  ::autodrive::workflow::proto::SceneParsingResults* scene_parsing_data_;
  mutable int _cached_size_;
  friend struct ::protobuf_iqa_5fparsing_2eproto::TableStruct;
  friend void ::protobuf_iqa_5fparsing_2eproto::InitDefaultsIqaParsingMsgImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SceneParsingResults

// repeated .autodrive.workflow.proto.perception_base.SceneParsing scene_parsing_result_data = 1;
inline int SceneParsingResults::scene_parsing_result_data_size() const {
  return scene_parsing_result_data_.size();
}
inline const ::autodrive::workflow::proto::perception_base::SceneParsing& SceneParsingResults::scene_parsing_result_data(int index) const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.SceneParsingResults.scene_parsing_result_data)
  return scene_parsing_result_data_.Get(index);
}
inline ::autodrive::workflow::proto::perception_base::SceneParsing* SceneParsingResults::mutable_scene_parsing_result_data(int index) {
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.SceneParsingResults.scene_parsing_result_data)
  return scene_parsing_result_data_.Mutable(index);
}
inline ::autodrive::workflow::proto::perception_base::SceneParsing* SceneParsingResults::add_scene_parsing_result_data() {
  // @@protoc_insertion_point(field_add:autodrive.workflow.proto.SceneParsingResults.scene_parsing_result_data)
  return scene_parsing_result_data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::perception_base::SceneParsing >*
SceneParsingResults::mutable_scene_parsing_result_data() {
  // @@protoc_insertion_point(field_mutable_list:autodrive.workflow.proto.SceneParsingResults.scene_parsing_result_data)
  return &scene_parsing_result_data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::perception_base::SceneParsing >&
SceneParsingResults::scene_parsing_result_data() const {
  // @@protoc_insertion_point(field_list:autodrive.workflow.proto.SceneParsingResults.scene_parsing_result_data)
  return scene_parsing_result_data_;
}

// -------------------------------------------------------------------

// IqaParsing

// .autodrive.workflow.proto.perception_base.ImageId image_id = 1;
inline void IqaParsing::clear_image_id() {
  image_id_ = 0;
}
inline ::autodrive::workflow::proto::perception_base::ImageId IqaParsing::image_id() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.IqaParsing.image_id)
  return static_cast< ::autodrive::workflow::proto::perception_base::ImageId >(image_id_);
}
inline void IqaParsing::set_image_id(::autodrive::workflow::proto::perception_base::ImageId value) {
  
  image_id_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.IqaParsing.image_id)
}

// .autodrive.workflow.proto.CylinderParsingImageData parsing_data = 2;
inline bool IqaParsing::has_parsing_data() const {
  return this != internal_default_instance() && parsing_data_ != NULL;
}
inline const ::autodrive::workflow::proto::CylinderParsingImageData& IqaParsing::parsing_data() const {
  const ::autodrive::workflow::proto::CylinderParsingImageData* p = parsing_data_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.IqaParsing.parsing_data)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::CylinderParsingImageData*>(
      &::autodrive::workflow::proto::_CylinderParsingImageData_default_instance_);
}
inline ::autodrive::workflow::proto::CylinderParsingImageData* IqaParsing::release_parsing_data() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.IqaParsing.parsing_data)
  
  ::autodrive::workflow::proto::CylinderParsingImageData* temp = parsing_data_;
  parsing_data_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::CylinderParsingImageData* IqaParsing::mutable_parsing_data() {
  
  if (parsing_data_ == NULL) {
    parsing_data_ = new ::autodrive::workflow::proto::CylinderParsingImageData;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.IqaParsing.parsing_data)
  return parsing_data_;
}
inline void IqaParsing::set_allocated_parsing_data(::autodrive::workflow::proto::CylinderParsingImageData* parsing_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(parsing_data_);
  }
  if (parsing_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      parsing_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, parsing_data, submessage_arena);
    }
    
  } else {
    
  }
  parsing_data_ = parsing_data;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.IqaParsing.parsing_data)
}

// -------------------------------------------------------------------

// IqaParsingResults

// repeated .autodrive.workflow.proto.IqaParsing iqa_parsing_result_data = 1;
inline int IqaParsingResults::iqa_parsing_result_data_size() const {
  return iqa_parsing_result_data_.size();
}
inline void IqaParsingResults::clear_iqa_parsing_result_data() {
  iqa_parsing_result_data_.Clear();
}
inline const ::autodrive::workflow::proto::IqaParsing& IqaParsingResults::iqa_parsing_result_data(int index) const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.IqaParsingResults.iqa_parsing_result_data)
  return iqa_parsing_result_data_.Get(index);
}
inline ::autodrive::workflow::proto::IqaParsing* IqaParsingResults::mutable_iqa_parsing_result_data(int index) {
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.IqaParsingResults.iqa_parsing_result_data)
  return iqa_parsing_result_data_.Mutable(index);
}
inline ::autodrive::workflow::proto::IqaParsing* IqaParsingResults::add_iqa_parsing_result_data() {
  // @@protoc_insertion_point(field_add:autodrive.workflow.proto.IqaParsingResults.iqa_parsing_result_data)
  return iqa_parsing_result_data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::IqaParsing >*
IqaParsingResults::mutable_iqa_parsing_result_data() {
  // @@protoc_insertion_point(field_mutable_list:autodrive.workflow.proto.IqaParsingResults.iqa_parsing_result_data)
  return &iqa_parsing_result_data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::IqaParsing >&
IqaParsingResults::iqa_parsing_result_data() const {
  // @@protoc_insertion_point(field_list:autodrive.workflow.proto.IqaParsingResults.iqa_parsing_result_data)
  return iqa_parsing_result_data_;
}

// -------------------------------------------------------------------

// IqaParsingMsg

// .autodrive.workflow.proto.MsgHeader header = 1;
inline bool IqaParsingMsg::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::autodrive::workflow::proto::MsgHeader& IqaParsingMsg::header() const {
  const ::autodrive::workflow::proto::MsgHeader* p = header_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.IqaParsingMsg.header)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::MsgHeader*>(
      &::autodrive::workflow::proto::_MsgHeader_default_instance_);
}
inline ::autodrive::workflow::proto::MsgHeader* IqaParsingMsg::release_header() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.IqaParsingMsg.header)
  
  ::autodrive::workflow::proto::MsgHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::MsgHeader* IqaParsingMsg::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::autodrive::workflow::proto::MsgHeader;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.IqaParsingMsg.header)
  return header_;
}
inline void IqaParsingMsg::set_allocated_header(::autodrive::workflow::proto::MsgHeader* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.IqaParsingMsg.header)
}

// .autodrive.workflow.proto.Error error = 2;
inline bool IqaParsingMsg::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline const ::autodrive::workflow::proto::Error& IqaParsingMsg::error() const {
  const ::autodrive::workflow::proto::Error* p = error_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.IqaParsingMsg.error)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::Error*>(
      &::autodrive::workflow::proto::_Error_default_instance_);
}
inline ::autodrive::workflow::proto::Error* IqaParsingMsg::release_error() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.IqaParsingMsg.error)
  
  ::autodrive::workflow::proto::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::Error* IqaParsingMsg::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::autodrive::workflow::proto::Error;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.IqaParsingMsg.error)
  return error_;
}
inline void IqaParsingMsg::set_allocated_error(::autodrive::workflow::proto::Error* error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(error_);
  }
  if (error) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    
  } else {
    
  }
  error_ = error;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.IqaParsingMsg.error)
}

// .autodrive.workflow.proto.IqaParsingResults iqa_parsing_data = 3;
inline bool IqaParsingMsg::has_iqa_parsing_data() const {
  return this != internal_default_instance() && iqa_parsing_data_ != NULL;
}
inline void IqaParsingMsg::clear_iqa_parsing_data() {
  if (GetArenaNoVirtual() == NULL && iqa_parsing_data_ != NULL) {
    delete iqa_parsing_data_;
  }
  iqa_parsing_data_ = NULL;
}
inline const ::autodrive::workflow::proto::IqaParsingResults& IqaParsingMsg::iqa_parsing_data() const {
  const ::autodrive::workflow::proto::IqaParsingResults* p = iqa_parsing_data_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.IqaParsingMsg.iqa_parsing_data)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::IqaParsingResults*>(
      &::autodrive::workflow::proto::_IqaParsingResults_default_instance_);
}
inline ::autodrive::workflow::proto::IqaParsingResults* IqaParsingMsg::release_iqa_parsing_data() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.IqaParsingMsg.iqa_parsing_data)
  
  ::autodrive::workflow::proto::IqaParsingResults* temp = iqa_parsing_data_;
  iqa_parsing_data_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::IqaParsingResults* IqaParsingMsg::mutable_iqa_parsing_data() {
  
  if (iqa_parsing_data_ == NULL) {
    iqa_parsing_data_ = new ::autodrive::workflow::proto::IqaParsingResults;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.IqaParsingMsg.iqa_parsing_data)
  return iqa_parsing_data_;
}
inline void IqaParsingMsg::set_allocated_iqa_parsing_data(::autodrive::workflow::proto::IqaParsingResults* iqa_parsing_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete iqa_parsing_data_;
  }
  if (iqa_parsing_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      iqa_parsing_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, iqa_parsing_data, submessage_arena);
    }
    
  } else {
    
  }
  iqa_parsing_data_ = iqa_parsing_data;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.IqaParsingMsg.iqa_parsing_data)
}

// .autodrive.workflow.proto.SceneParsingResults scene_parsing_data = 4;
inline bool IqaParsingMsg::has_scene_parsing_data() const {
  return this != internal_default_instance() && scene_parsing_data_ != NULL;
}
inline void IqaParsingMsg::clear_scene_parsing_data() {
  if (GetArenaNoVirtual() == NULL && scene_parsing_data_ != NULL) {
    delete scene_parsing_data_;
  }
  scene_parsing_data_ = NULL;
}
inline const ::autodrive::workflow::proto::SceneParsingResults& IqaParsingMsg::scene_parsing_data() const {
  const ::autodrive::workflow::proto::SceneParsingResults* p = scene_parsing_data_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.IqaParsingMsg.scene_parsing_data)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::SceneParsingResults*>(
      &::autodrive::workflow::proto::_SceneParsingResults_default_instance_);
}
inline ::autodrive::workflow::proto::SceneParsingResults* IqaParsingMsg::release_scene_parsing_data() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.IqaParsingMsg.scene_parsing_data)
  
  ::autodrive::workflow::proto::SceneParsingResults* temp = scene_parsing_data_;
  scene_parsing_data_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::SceneParsingResults* IqaParsingMsg::mutable_scene_parsing_data() {
  
  if (scene_parsing_data_ == NULL) {
    scene_parsing_data_ = new ::autodrive::workflow::proto::SceneParsingResults;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.IqaParsingMsg.scene_parsing_data)
  return scene_parsing_data_;
}
inline void IqaParsingMsg::set_allocated_scene_parsing_data(::autodrive::workflow::proto::SceneParsingResults* scene_parsing_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete scene_parsing_data_;
  }
  if (scene_parsing_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scene_parsing_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scene_parsing_data, submessage_arena);
    }
    
  } else {
    
  }
  scene_parsing_data_ = scene_parsing_data;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.IqaParsingMsg.scene_parsing_data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace workflow
}  // namespace autodrive

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_iqa_5fparsing_2eproto__INCLUDED
