// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fusion_parking_slots.proto

#ifndef PROTOBUF_fusion_5fparking_5fslots_2eproto__INCLUDED
#define PROTOBUF_fusion_5fparking_5fslots_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "parking_slot.pb.h"
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_fusion_5fparking_5fslots_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsFusionParkingSlotsMsgImpl();
void InitDefaultsFusionParkingSlotsMsg();
inline void InitDefaults() {
  InitDefaultsFusionParkingSlotsMsg();
}
}  // namespace protobuf_fusion_5fparking_5fslots_2eproto
namespace autodrive {
namespace workflow {
namespace proto {
class FusionParkingSlotsMsg;
class FusionParkingSlotsMsgDefaultTypeInternal;
extern FusionParkingSlotsMsgDefaultTypeInternal _FusionParkingSlotsMsg_default_instance_;
}  // namespace proto
}  // namespace workflow
}  // namespace autodrive
namespace autodrive {
namespace workflow {
namespace proto {

// ===================================================================

class FusionParkingSlotsMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:autodrive.workflow.proto.FusionParkingSlotsMsg) */ {
 public:
  FusionParkingSlotsMsg();
  virtual ~FusionParkingSlotsMsg();

  FusionParkingSlotsMsg(const FusionParkingSlotsMsg& from);

  inline FusionParkingSlotsMsg& operator=(const FusionParkingSlotsMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FusionParkingSlotsMsg(FusionParkingSlotsMsg&& from) noexcept
    : FusionParkingSlotsMsg() {
    *this = ::std::move(from);
  }

  inline FusionParkingSlotsMsg& operator=(FusionParkingSlotsMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FusionParkingSlotsMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FusionParkingSlotsMsg* internal_default_instance() {
    return reinterpret_cast<const FusionParkingSlotsMsg*>(
               &_FusionParkingSlotsMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(FusionParkingSlotsMsg* other);
  friend void swap(FusionParkingSlotsMsg& a, FusionParkingSlotsMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FusionParkingSlotsMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  FusionParkingSlotsMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FusionParkingSlotsMsg& from);
  void MergeFrom(const FusionParkingSlotsMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FusionParkingSlotsMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .autodrive.workflow.proto.parking_slot.ParkingSlotInfo parking_slots = 3;
  int parking_slots_size() const;
  void clear_parking_slots();
  static const int kParkingSlotsFieldNumber = 3;
  const ::autodrive::workflow::proto::parking_slot::ParkingSlotInfo& parking_slots(int index) const;
  ::autodrive::workflow::proto::parking_slot::ParkingSlotInfo* mutable_parking_slots(int index);
  ::autodrive::workflow::proto::parking_slot::ParkingSlotInfo* add_parking_slots();
  ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::parking_slot::ParkingSlotInfo >*
      mutable_parking_slots();
  const ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::parking_slot::ParkingSlotInfo >&
      parking_slots() const;

  // repeated int32 certified_slots = 4;
  int certified_slots_size() const;
  void clear_certified_slots();
  static const int kCertifiedSlotsFieldNumber = 4;
  ::google::protobuf::int32 certified_slots(int index) const;
  void set_certified_slots(int index, ::google::protobuf::int32 value);
  void add_certified_slots(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      certified_slots() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_certified_slots();

  // .autodrive.workflow.proto.MsgHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::autodrive::workflow::proto::MsgHeader& header() const;
  ::autodrive::workflow::proto::MsgHeader* release_header();
  ::autodrive::workflow::proto::MsgHeader* mutable_header();
  void set_allocated_header(::autodrive::workflow::proto::MsgHeader* header);

  // .autodrive.workflow.proto.Error error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::autodrive::workflow::proto::Error& error() const;
  ::autodrive::workflow::proto::Error* release_error();
  ::autodrive::workflow::proto::Error* mutable_error();
  void set_allocated_error(::autodrive::workflow::proto::Error* error);

  // @@protoc_insertion_point(class_scope:autodrive.workflow.proto.FusionParkingSlotsMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::parking_slot::ParkingSlotInfo > parking_slots_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > certified_slots_;
  mutable int _certified_slots_cached_byte_size_;
  ::autodrive::workflow::proto::MsgHeader* header_;
  ::autodrive::workflow::proto::Error* error_;
  mutable int _cached_size_;
  friend struct ::protobuf_fusion_5fparking_5fslots_2eproto::TableStruct;
  friend void ::protobuf_fusion_5fparking_5fslots_2eproto::InitDefaultsFusionParkingSlotsMsgImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FusionParkingSlotsMsg

// .autodrive.workflow.proto.MsgHeader header = 1;
inline bool FusionParkingSlotsMsg::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::autodrive::workflow::proto::MsgHeader& FusionParkingSlotsMsg::header() const {
  const ::autodrive::workflow::proto::MsgHeader* p = header_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.FusionParkingSlotsMsg.header)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::MsgHeader*>(
      &::autodrive::workflow::proto::_MsgHeader_default_instance_);
}
inline ::autodrive::workflow::proto::MsgHeader* FusionParkingSlotsMsg::release_header() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.FusionParkingSlotsMsg.header)
  
  ::autodrive::workflow::proto::MsgHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::MsgHeader* FusionParkingSlotsMsg::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::autodrive::workflow::proto::MsgHeader;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.FusionParkingSlotsMsg.header)
  return header_;
}
inline void FusionParkingSlotsMsg::set_allocated_header(::autodrive::workflow::proto::MsgHeader* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.FusionParkingSlotsMsg.header)
}

// .autodrive.workflow.proto.Error error = 2;
inline bool FusionParkingSlotsMsg::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline const ::autodrive::workflow::proto::Error& FusionParkingSlotsMsg::error() const {
  const ::autodrive::workflow::proto::Error* p = error_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.FusionParkingSlotsMsg.error)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::Error*>(
      &::autodrive::workflow::proto::_Error_default_instance_);
}
inline ::autodrive::workflow::proto::Error* FusionParkingSlotsMsg::release_error() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.FusionParkingSlotsMsg.error)
  
  ::autodrive::workflow::proto::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::Error* FusionParkingSlotsMsg::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::autodrive::workflow::proto::Error;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.FusionParkingSlotsMsg.error)
  return error_;
}
inline void FusionParkingSlotsMsg::set_allocated_error(::autodrive::workflow::proto::Error* error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(error_);
  }
  if (error) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    
  } else {
    
  }
  error_ = error;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.FusionParkingSlotsMsg.error)
}

// repeated .autodrive.workflow.proto.parking_slot.ParkingSlotInfo parking_slots = 3;
inline int FusionParkingSlotsMsg::parking_slots_size() const {
  return parking_slots_.size();
}
inline const ::autodrive::workflow::proto::parking_slot::ParkingSlotInfo& FusionParkingSlotsMsg::parking_slots(int index) const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.FusionParkingSlotsMsg.parking_slots)
  return parking_slots_.Get(index);
}
inline ::autodrive::workflow::proto::parking_slot::ParkingSlotInfo* FusionParkingSlotsMsg::mutable_parking_slots(int index) {
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.FusionParkingSlotsMsg.parking_slots)
  return parking_slots_.Mutable(index);
}
inline ::autodrive::workflow::proto::parking_slot::ParkingSlotInfo* FusionParkingSlotsMsg::add_parking_slots() {
  // @@protoc_insertion_point(field_add:autodrive.workflow.proto.FusionParkingSlotsMsg.parking_slots)
  return parking_slots_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::parking_slot::ParkingSlotInfo >*
FusionParkingSlotsMsg::mutable_parking_slots() {
  // @@protoc_insertion_point(field_mutable_list:autodrive.workflow.proto.FusionParkingSlotsMsg.parking_slots)
  return &parking_slots_;
}
inline const ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::parking_slot::ParkingSlotInfo >&
FusionParkingSlotsMsg::parking_slots() const {
  // @@protoc_insertion_point(field_list:autodrive.workflow.proto.FusionParkingSlotsMsg.parking_slots)
  return parking_slots_;
}

// repeated int32 certified_slots = 4;
inline int FusionParkingSlotsMsg::certified_slots_size() const {
  return certified_slots_.size();
}
inline void FusionParkingSlotsMsg::clear_certified_slots() {
  certified_slots_.Clear();
}
inline ::google::protobuf::int32 FusionParkingSlotsMsg::certified_slots(int index) const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.FusionParkingSlotsMsg.certified_slots)
  return certified_slots_.Get(index);
}
inline void FusionParkingSlotsMsg::set_certified_slots(int index, ::google::protobuf::int32 value) {
  certified_slots_.Set(index, value);
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.FusionParkingSlotsMsg.certified_slots)
}
inline void FusionParkingSlotsMsg::add_certified_slots(::google::protobuf::int32 value) {
  certified_slots_.Add(value);
  // @@protoc_insertion_point(field_add:autodrive.workflow.proto.FusionParkingSlotsMsg.certified_slots)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
FusionParkingSlotsMsg::certified_slots() const {
  // @@protoc_insertion_point(field_list:autodrive.workflow.proto.FusionParkingSlotsMsg.certified_slots)
  return certified_slots_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
FusionParkingSlotsMsg::mutable_certified_slots() {
  // @@protoc_insertion_point(field_mutable_list:autodrive.workflow.proto.FusionParkingSlotsMsg.certified_slots)
  return &certified_slots_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace workflow
}  // namespace autodrive

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_fusion_5fparking_5fslots_2eproto__INCLUDED
