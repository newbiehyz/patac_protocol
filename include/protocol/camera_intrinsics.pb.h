// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: camera_intrinsics.proto

#ifndef PROTOBUF_camera_5fintrinsics_2eproto__INCLUDED
#define PROTOBUF_camera_5fintrinsics_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
#include "camera_extrinsics.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_camera_5fintrinsics_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsIntrinsicImpl();
void InitDefaultsIntrinsic();
void InitDefaultsCameraIntrinsicsMsgImpl();
void InitDefaultsCameraIntrinsicsMsg();
inline void InitDefaults() {
  InitDefaultsIntrinsic();
  InitDefaultsCameraIntrinsicsMsg();
}
}  // namespace protobuf_camera_5fintrinsics_2eproto
namespace autodrive {
namespace workflow {
namespace proto {
class CameraIntrinsicsMsg;
class CameraIntrinsicsMsgDefaultTypeInternal;
extern CameraIntrinsicsMsgDefaultTypeInternal _CameraIntrinsicsMsg_default_instance_;
class Intrinsic;
class IntrinsicDefaultTypeInternal;
extern IntrinsicDefaultTypeInternal _Intrinsic_default_instance_;
}  // namespace proto
}  // namespace workflow
}  // namespace autodrive
namespace autodrive {
namespace workflow {
namespace proto {

// ===================================================================

class Intrinsic : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:autodrive.workflow.proto.Intrinsic) */ {
 public:
  Intrinsic();
  virtual ~Intrinsic();

  Intrinsic(const Intrinsic& from);

  inline Intrinsic& operator=(const Intrinsic& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intrinsic(Intrinsic&& from) noexcept
    : Intrinsic() {
    *this = ::std::move(from);
  }

  inline Intrinsic& operator=(Intrinsic&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Intrinsic& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intrinsic* internal_default_instance() {
    return reinterpret_cast<const Intrinsic*>(
               &_Intrinsic_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Intrinsic* other);
  friend void swap(Intrinsic& a, Intrinsic& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intrinsic* New() const PROTOBUF_FINAL { return New(NULL); }

  Intrinsic* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Intrinsic& from);
  void MergeFrom(const Intrinsic& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Intrinsic* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float k = 6;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 6;
  float k(int index) const;
  void set_k(int index, float value);
  void add_k(float value);
  const ::google::protobuf::RepeatedField< float >&
      k() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_k();

  // repeated float p = 7;
  int p_size() const;
  void clear_p();
  static const int kPFieldNumber = 7;
  float p(int index) const;
  void set_p(int index, float value);
  void add_p(float value);
  const ::google::protobuf::RepeatedField< float >&
      p() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_p();

  // repeated float s = 8;
  int s_size() const;
  void clear_s();
  static const int kSFieldNumber = 8;
  float s(int index) const;
  void set_s(int index, float value);
  void add_s(float value);
  const ::google::protobuf::RepeatedField< float >&
      s() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_s();

  // float cx = 1;
  void clear_cx();
  static const int kCxFieldNumber = 1;
  float cx() const;
  void set_cx(float value);

  // float cy = 2;
  void clear_cy();
  static const int kCyFieldNumber = 2;
  float cy() const;
  void set_cy(float value);

  // float fx = 3;
  void clear_fx();
  static const int kFxFieldNumber = 3;
  float fx() const;
  void set_fx(float value);

  // float fy = 4;
  void clear_fy();
  static const int kFyFieldNumber = 4;
  float fy() const;
  void set_fy(float value);

  // .autodrive.workflow.proto.CameraID cam_id = 5;
  void clear_cam_id();
  static const int kCamIdFieldNumber = 5;
  ::autodrive::workflow::proto::CameraID cam_id() const;
  void set_cam_id(::autodrive::workflow::proto::CameraID value);

  // float cod_x = 9;
  void clear_cod_x();
  static const int kCodXFieldNumber = 9;
  float cod_x() const;
  void set_cod_x(float value);

  // float cod_y = 10;
  void clear_cod_y();
  static const int kCodYFieldNumber = 10;
  float cod_y() const;
  void set_cod_y(float value);

  // @@protoc_insertion_point(class_scope:autodrive.workflow.proto.Intrinsic)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > p_;
  mutable int _p_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > s_;
  mutable int _s_cached_byte_size_;
  float cx_;
  float cy_;
  float fx_;
  float fy_;
  int cam_id_;
  float cod_x_;
  float cod_y_;
  mutable int _cached_size_;
  friend struct ::protobuf_camera_5fintrinsics_2eproto::TableStruct;
  friend void ::protobuf_camera_5fintrinsics_2eproto::InitDefaultsIntrinsicImpl();
};
// -------------------------------------------------------------------

class CameraIntrinsicsMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:autodrive.workflow.proto.CameraIntrinsicsMsg) */ {
 public:
  CameraIntrinsicsMsg();
  virtual ~CameraIntrinsicsMsg();

  CameraIntrinsicsMsg(const CameraIntrinsicsMsg& from);

  inline CameraIntrinsicsMsg& operator=(const CameraIntrinsicsMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CameraIntrinsicsMsg(CameraIntrinsicsMsg&& from) noexcept
    : CameraIntrinsicsMsg() {
    *this = ::std::move(from);
  }

  inline CameraIntrinsicsMsg& operator=(CameraIntrinsicsMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CameraIntrinsicsMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CameraIntrinsicsMsg* internal_default_instance() {
    return reinterpret_cast<const CameraIntrinsicsMsg*>(
               &_CameraIntrinsicsMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CameraIntrinsicsMsg* other);
  friend void swap(CameraIntrinsicsMsg& a, CameraIntrinsicsMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CameraIntrinsicsMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  CameraIntrinsicsMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CameraIntrinsicsMsg& from);
  void MergeFrom(const CameraIntrinsicsMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CameraIntrinsicsMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .autodrive.workflow.proto.Intrinsic intrinsics = 3;
  int intrinsics_size() const;
  void clear_intrinsics();
  static const int kIntrinsicsFieldNumber = 3;
  const ::autodrive::workflow::proto::Intrinsic& intrinsics(int index) const;
  ::autodrive::workflow::proto::Intrinsic* mutable_intrinsics(int index);
  ::autodrive::workflow::proto::Intrinsic* add_intrinsics();
  ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::Intrinsic >*
      mutable_intrinsics();
  const ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::Intrinsic >&
      intrinsics() const;

  // .autodrive.workflow.proto.MsgHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::autodrive::workflow::proto::MsgHeader& header() const;
  ::autodrive::workflow::proto::MsgHeader* release_header();
  ::autodrive::workflow::proto::MsgHeader* mutable_header();
  void set_allocated_header(::autodrive::workflow::proto::MsgHeader* header);

  // .autodrive.workflow.proto.Error error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::autodrive::workflow::proto::Error& error() const;
  ::autodrive::workflow::proto::Error* release_error();
  ::autodrive::workflow::proto::Error* mutable_error();
  void set_allocated_error(::autodrive::workflow::proto::Error* error);

  // @@protoc_insertion_point(class_scope:autodrive.workflow.proto.CameraIntrinsicsMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::Intrinsic > intrinsics_;
  ::autodrive::workflow::proto::MsgHeader* header_;
  ::autodrive::workflow::proto::Error* error_;
  mutable int _cached_size_;
  friend struct ::protobuf_camera_5fintrinsics_2eproto::TableStruct;
  friend void ::protobuf_camera_5fintrinsics_2eproto::InitDefaultsCameraIntrinsicsMsgImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Intrinsic

// float cx = 1;
inline void Intrinsic::clear_cx() {
  cx_ = 0;
}
inline float Intrinsic::cx() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.Intrinsic.cx)
  return cx_;
}
inline void Intrinsic::set_cx(float value) {
  
  cx_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.Intrinsic.cx)
}

// float cy = 2;
inline void Intrinsic::clear_cy() {
  cy_ = 0;
}
inline float Intrinsic::cy() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.Intrinsic.cy)
  return cy_;
}
inline void Intrinsic::set_cy(float value) {
  
  cy_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.Intrinsic.cy)
}

// float fx = 3;
inline void Intrinsic::clear_fx() {
  fx_ = 0;
}
inline float Intrinsic::fx() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.Intrinsic.fx)
  return fx_;
}
inline void Intrinsic::set_fx(float value) {
  
  fx_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.Intrinsic.fx)
}

// float fy = 4;
inline void Intrinsic::clear_fy() {
  fy_ = 0;
}
inline float Intrinsic::fy() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.Intrinsic.fy)
  return fy_;
}
inline void Intrinsic::set_fy(float value) {
  
  fy_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.Intrinsic.fy)
}

// .autodrive.workflow.proto.CameraID cam_id = 5;
inline void Intrinsic::clear_cam_id() {
  cam_id_ = 0;
}
inline ::autodrive::workflow::proto::CameraID Intrinsic::cam_id() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.Intrinsic.cam_id)
  return static_cast< ::autodrive::workflow::proto::CameraID >(cam_id_);
}
inline void Intrinsic::set_cam_id(::autodrive::workflow::proto::CameraID value) {
  
  cam_id_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.Intrinsic.cam_id)
}

// repeated float k = 6;
inline int Intrinsic::k_size() const {
  return k_.size();
}
inline void Intrinsic::clear_k() {
  k_.Clear();
}
inline float Intrinsic::k(int index) const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.Intrinsic.k)
  return k_.Get(index);
}
inline void Intrinsic::set_k(int index, float value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.Intrinsic.k)
}
inline void Intrinsic::add_k(float value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:autodrive.workflow.proto.Intrinsic.k)
}
inline const ::google::protobuf::RepeatedField< float >&
Intrinsic::k() const {
  // @@protoc_insertion_point(field_list:autodrive.workflow.proto.Intrinsic.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< float >*
Intrinsic::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:autodrive.workflow.proto.Intrinsic.k)
  return &k_;
}

// repeated float p = 7;
inline int Intrinsic::p_size() const {
  return p_.size();
}
inline void Intrinsic::clear_p() {
  p_.Clear();
}
inline float Intrinsic::p(int index) const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.Intrinsic.p)
  return p_.Get(index);
}
inline void Intrinsic::set_p(int index, float value) {
  p_.Set(index, value);
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.Intrinsic.p)
}
inline void Intrinsic::add_p(float value) {
  p_.Add(value);
  // @@protoc_insertion_point(field_add:autodrive.workflow.proto.Intrinsic.p)
}
inline const ::google::protobuf::RepeatedField< float >&
Intrinsic::p() const {
  // @@protoc_insertion_point(field_list:autodrive.workflow.proto.Intrinsic.p)
  return p_;
}
inline ::google::protobuf::RepeatedField< float >*
Intrinsic::mutable_p() {
  // @@protoc_insertion_point(field_mutable_list:autodrive.workflow.proto.Intrinsic.p)
  return &p_;
}

// repeated float s = 8;
inline int Intrinsic::s_size() const {
  return s_.size();
}
inline void Intrinsic::clear_s() {
  s_.Clear();
}
inline float Intrinsic::s(int index) const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.Intrinsic.s)
  return s_.Get(index);
}
inline void Intrinsic::set_s(int index, float value) {
  s_.Set(index, value);
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.Intrinsic.s)
}
inline void Intrinsic::add_s(float value) {
  s_.Add(value);
  // @@protoc_insertion_point(field_add:autodrive.workflow.proto.Intrinsic.s)
}
inline const ::google::protobuf::RepeatedField< float >&
Intrinsic::s() const {
  // @@protoc_insertion_point(field_list:autodrive.workflow.proto.Intrinsic.s)
  return s_;
}
inline ::google::protobuf::RepeatedField< float >*
Intrinsic::mutable_s() {
  // @@protoc_insertion_point(field_mutable_list:autodrive.workflow.proto.Intrinsic.s)
  return &s_;
}

// float cod_x = 9;
inline void Intrinsic::clear_cod_x() {
  cod_x_ = 0;
}
inline float Intrinsic::cod_x() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.Intrinsic.cod_x)
  return cod_x_;
}
inline void Intrinsic::set_cod_x(float value) {
  
  cod_x_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.Intrinsic.cod_x)
}

// float cod_y = 10;
inline void Intrinsic::clear_cod_y() {
  cod_y_ = 0;
}
inline float Intrinsic::cod_y() const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.Intrinsic.cod_y)
  return cod_y_;
}
inline void Intrinsic::set_cod_y(float value) {
  
  cod_y_ = value;
  // @@protoc_insertion_point(field_set:autodrive.workflow.proto.Intrinsic.cod_y)
}

// -------------------------------------------------------------------

// CameraIntrinsicsMsg

// .autodrive.workflow.proto.MsgHeader header = 1;
inline bool CameraIntrinsicsMsg::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::autodrive::workflow::proto::MsgHeader& CameraIntrinsicsMsg::header() const {
  const ::autodrive::workflow::proto::MsgHeader* p = header_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.CameraIntrinsicsMsg.header)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::MsgHeader*>(
      &::autodrive::workflow::proto::_MsgHeader_default_instance_);
}
inline ::autodrive::workflow::proto::MsgHeader* CameraIntrinsicsMsg::release_header() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.CameraIntrinsicsMsg.header)
  
  ::autodrive::workflow::proto::MsgHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::MsgHeader* CameraIntrinsicsMsg::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::autodrive::workflow::proto::MsgHeader;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.CameraIntrinsicsMsg.header)
  return header_;
}
inline void CameraIntrinsicsMsg::set_allocated_header(::autodrive::workflow::proto::MsgHeader* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.CameraIntrinsicsMsg.header)
}

// .autodrive.workflow.proto.Error error = 2;
inline bool CameraIntrinsicsMsg::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline const ::autodrive::workflow::proto::Error& CameraIntrinsicsMsg::error() const {
  const ::autodrive::workflow::proto::Error* p = error_;
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.CameraIntrinsicsMsg.error)
  return p != NULL ? *p : *reinterpret_cast<const ::autodrive::workflow::proto::Error*>(
      &::autodrive::workflow::proto::_Error_default_instance_);
}
inline ::autodrive::workflow::proto::Error* CameraIntrinsicsMsg::release_error() {
  // @@protoc_insertion_point(field_release:autodrive.workflow.proto.CameraIntrinsicsMsg.error)
  
  ::autodrive::workflow::proto::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline ::autodrive::workflow::proto::Error* CameraIntrinsicsMsg::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::autodrive::workflow::proto::Error;
  }
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.CameraIntrinsicsMsg.error)
  return error_;
}
inline void CameraIntrinsicsMsg::set_allocated_error(::autodrive::workflow::proto::Error* error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(error_);
  }
  if (error) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    
  } else {
    
  }
  error_ = error;
  // @@protoc_insertion_point(field_set_allocated:autodrive.workflow.proto.CameraIntrinsicsMsg.error)
}

// repeated .autodrive.workflow.proto.Intrinsic intrinsics = 3;
inline int CameraIntrinsicsMsg::intrinsics_size() const {
  return intrinsics_.size();
}
inline void CameraIntrinsicsMsg::clear_intrinsics() {
  intrinsics_.Clear();
}
inline const ::autodrive::workflow::proto::Intrinsic& CameraIntrinsicsMsg::intrinsics(int index) const {
  // @@protoc_insertion_point(field_get:autodrive.workflow.proto.CameraIntrinsicsMsg.intrinsics)
  return intrinsics_.Get(index);
}
inline ::autodrive::workflow::proto::Intrinsic* CameraIntrinsicsMsg::mutable_intrinsics(int index) {
  // @@protoc_insertion_point(field_mutable:autodrive.workflow.proto.CameraIntrinsicsMsg.intrinsics)
  return intrinsics_.Mutable(index);
}
inline ::autodrive::workflow::proto::Intrinsic* CameraIntrinsicsMsg::add_intrinsics() {
  // @@protoc_insertion_point(field_add:autodrive.workflow.proto.CameraIntrinsicsMsg.intrinsics)
  return intrinsics_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::Intrinsic >*
CameraIntrinsicsMsg::mutable_intrinsics() {
  // @@protoc_insertion_point(field_mutable_list:autodrive.workflow.proto.CameraIntrinsicsMsg.intrinsics)
  return &intrinsics_;
}
inline const ::google::protobuf::RepeatedPtrField< ::autodrive::workflow::proto::Intrinsic >&
CameraIntrinsicsMsg::intrinsics() const {
  // @@protoc_insertion_point(field_list:autodrive.workflow.proto.CameraIntrinsicsMsg.intrinsics)
  return intrinsics_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace workflow
}  // namespace autodrive

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_camera_5fintrinsics_2eproto__INCLUDED
