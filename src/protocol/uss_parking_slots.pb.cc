// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: uss_parking_slots.proto

#include "uss_parking_slots.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace autodrive {
namespace workflow {
namespace proto {
class PerFusUssPsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PerFusUssPs>
      _instance;
} _PerFusUssPs_default_instance_;
class UssParkingSlotsMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UssParkingSlotsMsg>
      _instance;
} _UssParkingSlotsMsg_default_instance_;
}  // namespace proto
}  // namespace workflow
}  // namespace autodrive
namespace protobuf_uss_5fparking_5fslots_2eproto {
void InitDefaultsPerFusUssPsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_uss_5fbase_2eproto::InitDefaultsUssPoint();
  {
    void* ptr = &::autodrive::workflow::proto::_PerFusUssPs_default_instance_;
    new (ptr) ::autodrive::workflow::proto::PerFusUssPs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::autodrive::workflow::proto::PerFusUssPs::InitAsDefaultInstance();
}

void InitDefaultsPerFusUssPs() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPerFusUssPsImpl);
}

void InitDefaultsUssParkingSlotsMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2eproto::InitDefaultsMsgHeader();
  protobuf_common_2eproto::InitDefaultsError();
  protobuf_uss_5fbase_2eproto::InitDefaultsPerFusUssHeader();
  protobuf_uss_5fparking_5fslots_2eproto::InitDefaultsPerFusUssPs();
  protobuf_uss_5fbase_2eproto::InitDefaultsStateMachine();
  {
    void* ptr = &::autodrive::workflow::proto::_UssParkingSlotsMsg_default_instance_;
    new (ptr) ::autodrive::workflow::proto::UssParkingSlotsMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::autodrive::workflow::proto::UssParkingSlotsMsg::InitAsDefaultInstance();
}

void InitDefaultsUssParkingSlotsMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUssParkingSlotsMsgImpl);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssPs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssPs, uss_ps_id_ui8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssPs, uss_ps_status_en_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssPs, uss_ps_type_en_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssPs, uss_ps_orientation_en_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssPs, uss_ps_1st_boundary_type_en_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssPs, uss_ps_2nd_boundary_type_en_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssPs, uss_ps_cross_boundary_type_en_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssPs, uss_ps_depth_ui16_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssPs, uss_ps_length_ui16_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssPs, uss_ps_angle_i16_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssPs, uss_ps_1st_corner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssPs, uss_ps_2nd_corner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssPs, uss_ps_3st_corner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssPs, uss_ps_4nd_corner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssPs, uss_ps_1st_corner_gcs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssPs, uss_ps_2nd_corner_gcs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssPs, uss_ps_3st_corner_gcs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssPs, uss_ps_4nd_corner_gcs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssPs, uss_ps_boundary_1st_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssPs, uss_ps_boundary_2nd_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssPs, uss_ps_finish_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssParkingSlotsMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssParkingSlotsMsg, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssParkingSlotsMsg, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssParkingSlotsMsg, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssParkingSlotsMsg, uss_header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssParkingSlotsMsg, uss_ps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssParkingSlotsMsg, uss_correct_ps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssParkingSlotsMsg, state_machine_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssParkingSlotsMsg, sensor_stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssParkingSlotsMsg, sample_stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssParkingSlotsMsg, raw_array_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::autodrive::workflow::proto::PerFusUssPs)},
  { 26, -1, sizeof(::autodrive::workflow::proto::UssParkingSlotsMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::autodrive::workflow::proto::_PerFusUssPs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::autodrive::workflow::proto::_UssParkingSlotsMsg_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "uss_parking_slots.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027uss_parking_slots.proto\022\030autodrive.wor"
      "kflow.proto\032\014common.proto\032\016uss_base.prot"
      "o\"\367\t\n\013PerFusUssPs\022\025\n\russ_ps_id_ui8\030\001 \001(\r"
      "\022A\n\020uss_ps_status_en\030\002 \001(\0162\'.autodrive.w"
      "orkflow.proto.UssPsStatusEn\022=\n\016uss_ps_ty"
      "pe_en\030\003 \001(\0162%.autodrive.workflow.proto.U"
      "ssPsTypeEn\022K\n\025uss_ps_orientation_en\030\004 \001("
      "\0162,.autodrive.workflow.proto.UssPsOrient"
      "ationEn\022R\n\033uss_ps_1st_boundary_type_en\030\005"
      " \001(\0162-.autodrive.workflow.proto.UssPsBou"
      "ndaryTypeEn\022R\n\033uss_ps_2nd_boundary_type_"
      "en\030\006 \001(\0162-.autodrive.workflow.proto.UssP"
      "sBoundaryTypeEn\022T\n\035uss_ps_cross_boundary"
      "_type_en\030\007 \001(\0162-.autodrive.workflow.prot"
      "o.UssPsBoundaryTypeEn\022\031\n\021uss_ps_depth_ui"
      "16\030\010 \001(\r\022\032\n\022uss_ps_length_ui16\030\t \001(\r\022\030\n\020"
      "uss_ps_angle_i16\030\n \001(\005\022=\n\021uss_ps_1st_cor"
      "ner\030\013 \001(\0132\".autodrive.workflow.proto.Uss"
      "Point\022=\n\021uss_ps_2nd_corner\030\014 \001(\0132\".autod"
      "rive.workflow.proto.UssPoint\022=\n\021uss_ps_3"
      "st_corner\030\r \001(\0132\".autodrive.workflow.pro"
      "to.UssPoint\022=\n\021uss_ps_4nd_corner\030\016 \001(\0132\""
      ".autodrive.workflow.proto.UssPoint\022A\n\025us"
      "s_ps_1st_corner_gcs\030\017 \001(\0132\".autodrive.wo"
      "rkflow.proto.UssPoint\022A\n\025uss_ps_2nd_corn"
      "er_gcs\030\020 \001(\0132\".autodrive.workflow.proto."
      "UssPoint\022A\n\025uss_ps_3st_corner_gcs\030\021 \001(\0132"
      "\".autodrive.workflow.proto.UssPoint\022A\n\025u"
      "ss_ps_4nd_corner_gcs\030\022 \001(\0132\".autodrive.w"
      "orkflow.proto.UssPoint\022D\n\030uss_ps_boundar"
      "y_1st_info\030\023 \001(\0132\".autodrive.workflow.pr"
      "oto.UssPoint\022D\n\030uss_ps_boundary_2nd_info"
      "\030\024 \001(\0132\".autodrive.workflow.proto.UssPoi"
      "nt\022\037\n\027uss_ps_finish_timestamp\030\025 \001(\003\"\275\003\n\022"
      "UssParkingSlotsMsg\0223\n\006header\030\001 \001(\0132#.aut"
      "odrive.workflow.proto.MsgHeader\022.\n\005error"
      "\030\002 \001(\0132\037.autodrive.workflow.proto.Error\022"
      "\017\n\007version\030\003 \001(\005\022=\n\nuss_header\030\004 \003(\0132).a"
      "utodrive.workflow.proto.PerFusUssHeader\022"
      "5\n\006uss_ps\030\005 \003(\0132%.autodrive.workflow.pro"
      "to.PerFusUssPs\022=\n\016uss_correct_ps\030\006 \001(\0132%"
      ".autodrive.workflow.proto.PerFusUssPs\022=\n"
      "\rstate_machine\030\007 \001(\0132&.autodrive.workflo"
      "w.proto.StateMachine\022\024\n\014sensor_stamp\030\010 \001"
      "(\003\022\024\n\014sample_stamp\030\t \001(\003\022\021\n\traw_array\030\n "
      "\001(\014*r\n\rUssPsStatusEn\022\026\n\022kUssPsStatusEnNo"
      "ne\020\000\022\030\n\024kUssPsStatusEnSearch\020\001\022\030\n\024kUssPs"
      "StatusEnCorret\020\002\022\025\n\021kUssPsStatusEnMax\020\003*"
      "\203\001\n\013UssPsTypeEn\022\024\n\020kUssPsTypeEnNone\020\000\022\030\n"
      "\024kUssPsTypeEnParallel\020\001\022\025\n\021kUssPsTypeEnC"
      "ross\020\002\022\030\n\024kUssPsTypeEnDiagonal\020\003\022\023\n\017kUss"
      "PsTypeEnMax\020\004*\210\001\n\022UssPsOrientationEn\022\033\n\027"
      "kUssPsOrientationEnNone\020\000\022\033\n\027kUssPsOrien"
      "tationEnLeft\020\001\022\034\n\030kUssPsOrientationEnRig"
      "ht\020\002\022\032\n\026kUssPsOrientationEnMax\020\003*\342\001\n\023Uss"
      "PsBoundaryTypeEn\022#\n\037kPerFusUssPsBoundary"
      "TypeVirtual\020\000\022\037\n\033kPerFusUssPsBoundaryTyp"
      "eLow\020\001\022 \n\034kPerFusUssPsBoundaryTypeHigh\020\002"
      "\022 \n\034kPerFusUssPsBoundaryTypeWall\020\003\022 \n\034kP"
      "erFusUssPsBoundaryTypeCurb\020\004\022\037\n\033kPerFusU"
      "ssPsBoundaryTypeMax\020\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2429);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "uss_parking_slots.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2eproto::AddDescriptors();
  ::protobuf_uss_5fbase_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_uss_5fparking_5fslots_2eproto
namespace autodrive {
namespace workflow {
namespace proto {
const ::google::protobuf::EnumDescriptor* UssPsStatusEn_descriptor() {
  protobuf_uss_5fparking_5fslots_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_uss_5fparking_5fslots_2eproto::file_level_enum_descriptors[0];
}
bool UssPsStatusEn_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* UssPsTypeEn_descriptor() {
  protobuf_uss_5fparking_5fslots_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_uss_5fparking_5fslots_2eproto::file_level_enum_descriptors[1];
}
bool UssPsTypeEn_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* UssPsOrientationEn_descriptor() {
  protobuf_uss_5fparking_5fslots_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_uss_5fparking_5fslots_2eproto::file_level_enum_descriptors[2];
}
bool UssPsOrientationEn_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* UssPsBoundaryTypeEn_descriptor() {
  protobuf_uss_5fparking_5fslots_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_uss_5fparking_5fslots_2eproto::file_level_enum_descriptors[3];
}
bool UssPsBoundaryTypeEn_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PerFusUssPs::InitAsDefaultInstance() {
  ::autodrive::workflow::proto::_PerFusUssPs_default_instance_._instance.get_mutable()->uss_ps_1st_corner_ = const_cast< ::autodrive::workflow::proto::UssPoint*>(
      ::autodrive::workflow::proto::UssPoint::internal_default_instance());
  ::autodrive::workflow::proto::_PerFusUssPs_default_instance_._instance.get_mutable()->uss_ps_2nd_corner_ = const_cast< ::autodrive::workflow::proto::UssPoint*>(
      ::autodrive::workflow::proto::UssPoint::internal_default_instance());
  ::autodrive::workflow::proto::_PerFusUssPs_default_instance_._instance.get_mutable()->uss_ps_3st_corner_ = const_cast< ::autodrive::workflow::proto::UssPoint*>(
      ::autodrive::workflow::proto::UssPoint::internal_default_instance());
  ::autodrive::workflow::proto::_PerFusUssPs_default_instance_._instance.get_mutable()->uss_ps_4nd_corner_ = const_cast< ::autodrive::workflow::proto::UssPoint*>(
      ::autodrive::workflow::proto::UssPoint::internal_default_instance());
  ::autodrive::workflow::proto::_PerFusUssPs_default_instance_._instance.get_mutable()->uss_ps_1st_corner_gcs_ = const_cast< ::autodrive::workflow::proto::UssPoint*>(
      ::autodrive::workflow::proto::UssPoint::internal_default_instance());
  ::autodrive::workflow::proto::_PerFusUssPs_default_instance_._instance.get_mutable()->uss_ps_2nd_corner_gcs_ = const_cast< ::autodrive::workflow::proto::UssPoint*>(
      ::autodrive::workflow::proto::UssPoint::internal_default_instance());
  ::autodrive::workflow::proto::_PerFusUssPs_default_instance_._instance.get_mutable()->uss_ps_3st_corner_gcs_ = const_cast< ::autodrive::workflow::proto::UssPoint*>(
      ::autodrive::workflow::proto::UssPoint::internal_default_instance());
  ::autodrive::workflow::proto::_PerFusUssPs_default_instance_._instance.get_mutable()->uss_ps_4nd_corner_gcs_ = const_cast< ::autodrive::workflow::proto::UssPoint*>(
      ::autodrive::workflow::proto::UssPoint::internal_default_instance());
  ::autodrive::workflow::proto::_PerFusUssPs_default_instance_._instance.get_mutable()->uss_ps_boundary_1st_info_ = const_cast< ::autodrive::workflow::proto::UssPoint*>(
      ::autodrive::workflow::proto::UssPoint::internal_default_instance());
  ::autodrive::workflow::proto::_PerFusUssPs_default_instance_._instance.get_mutable()->uss_ps_boundary_2nd_info_ = const_cast< ::autodrive::workflow::proto::UssPoint*>(
      ::autodrive::workflow::proto::UssPoint::internal_default_instance());
}
void PerFusUssPs::clear_uss_ps_1st_corner() {
  if (GetArenaNoVirtual() == NULL && uss_ps_1st_corner_ != NULL) {
    delete uss_ps_1st_corner_;
  }
  uss_ps_1st_corner_ = NULL;
}
void PerFusUssPs::clear_uss_ps_2nd_corner() {
  if (GetArenaNoVirtual() == NULL && uss_ps_2nd_corner_ != NULL) {
    delete uss_ps_2nd_corner_;
  }
  uss_ps_2nd_corner_ = NULL;
}
void PerFusUssPs::clear_uss_ps_3st_corner() {
  if (GetArenaNoVirtual() == NULL && uss_ps_3st_corner_ != NULL) {
    delete uss_ps_3st_corner_;
  }
  uss_ps_3st_corner_ = NULL;
}
void PerFusUssPs::clear_uss_ps_4nd_corner() {
  if (GetArenaNoVirtual() == NULL && uss_ps_4nd_corner_ != NULL) {
    delete uss_ps_4nd_corner_;
  }
  uss_ps_4nd_corner_ = NULL;
}
void PerFusUssPs::clear_uss_ps_1st_corner_gcs() {
  if (GetArenaNoVirtual() == NULL && uss_ps_1st_corner_gcs_ != NULL) {
    delete uss_ps_1st_corner_gcs_;
  }
  uss_ps_1st_corner_gcs_ = NULL;
}
void PerFusUssPs::clear_uss_ps_2nd_corner_gcs() {
  if (GetArenaNoVirtual() == NULL && uss_ps_2nd_corner_gcs_ != NULL) {
    delete uss_ps_2nd_corner_gcs_;
  }
  uss_ps_2nd_corner_gcs_ = NULL;
}
void PerFusUssPs::clear_uss_ps_3st_corner_gcs() {
  if (GetArenaNoVirtual() == NULL && uss_ps_3st_corner_gcs_ != NULL) {
    delete uss_ps_3st_corner_gcs_;
  }
  uss_ps_3st_corner_gcs_ = NULL;
}
void PerFusUssPs::clear_uss_ps_4nd_corner_gcs() {
  if (GetArenaNoVirtual() == NULL && uss_ps_4nd_corner_gcs_ != NULL) {
    delete uss_ps_4nd_corner_gcs_;
  }
  uss_ps_4nd_corner_gcs_ = NULL;
}
void PerFusUssPs::clear_uss_ps_boundary_1st_info() {
  if (GetArenaNoVirtual() == NULL && uss_ps_boundary_1st_info_ != NULL) {
    delete uss_ps_boundary_1st_info_;
  }
  uss_ps_boundary_1st_info_ = NULL;
}
void PerFusUssPs::clear_uss_ps_boundary_2nd_info() {
  if (GetArenaNoVirtual() == NULL && uss_ps_boundary_2nd_info_ != NULL) {
    delete uss_ps_boundary_2nd_info_;
  }
  uss_ps_boundary_2nd_info_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PerFusUssPs::kUssPsIdUi8FieldNumber;
const int PerFusUssPs::kUssPsStatusEnFieldNumber;
const int PerFusUssPs::kUssPsTypeEnFieldNumber;
const int PerFusUssPs::kUssPsOrientationEnFieldNumber;
const int PerFusUssPs::kUssPs1StBoundaryTypeEnFieldNumber;
const int PerFusUssPs::kUssPs2NdBoundaryTypeEnFieldNumber;
const int PerFusUssPs::kUssPsCrossBoundaryTypeEnFieldNumber;
const int PerFusUssPs::kUssPsDepthUi16FieldNumber;
const int PerFusUssPs::kUssPsLengthUi16FieldNumber;
const int PerFusUssPs::kUssPsAngleI16FieldNumber;
const int PerFusUssPs::kUssPs1StCornerFieldNumber;
const int PerFusUssPs::kUssPs2NdCornerFieldNumber;
const int PerFusUssPs::kUssPs3StCornerFieldNumber;
const int PerFusUssPs::kUssPs4NdCornerFieldNumber;
const int PerFusUssPs::kUssPs1StCornerGcsFieldNumber;
const int PerFusUssPs::kUssPs2NdCornerGcsFieldNumber;
const int PerFusUssPs::kUssPs3StCornerGcsFieldNumber;
const int PerFusUssPs::kUssPs4NdCornerGcsFieldNumber;
const int PerFusUssPs::kUssPsBoundary1StInfoFieldNumber;
const int PerFusUssPs::kUssPsBoundary2NdInfoFieldNumber;
const int PerFusUssPs::kUssPsFinishTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PerFusUssPs::PerFusUssPs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_uss_5fparking_5fslots_2eproto::InitDefaultsPerFusUssPs();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:autodrive.workflow.proto.PerFusUssPs)
}
PerFusUssPs::PerFusUssPs(const PerFusUssPs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_uss_ps_1st_corner()) {
    uss_ps_1st_corner_ = new ::autodrive::workflow::proto::UssPoint(*from.uss_ps_1st_corner_);
  } else {
    uss_ps_1st_corner_ = NULL;
  }
  if (from.has_uss_ps_2nd_corner()) {
    uss_ps_2nd_corner_ = new ::autodrive::workflow::proto::UssPoint(*from.uss_ps_2nd_corner_);
  } else {
    uss_ps_2nd_corner_ = NULL;
  }
  if (from.has_uss_ps_3st_corner()) {
    uss_ps_3st_corner_ = new ::autodrive::workflow::proto::UssPoint(*from.uss_ps_3st_corner_);
  } else {
    uss_ps_3st_corner_ = NULL;
  }
  if (from.has_uss_ps_4nd_corner()) {
    uss_ps_4nd_corner_ = new ::autodrive::workflow::proto::UssPoint(*from.uss_ps_4nd_corner_);
  } else {
    uss_ps_4nd_corner_ = NULL;
  }
  if (from.has_uss_ps_1st_corner_gcs()) {
    uss_ps_1st_corner_gcs_ = new ::autodrive::workflow::proto::UssPoint(*from.uss_ps_1st_corner_gcs_);
  } else {
    uss_ps_1st_corner_gcs_ = NULL;
  }
  if (from.has_uss_ps_2nd_corner_gcs()) {
    uss_ps_2nd_corner_gcs_ = new ::autodrive::workflow::proto::UssPoint(*from.uss_ps_2nd_corner_gcs_);
  } else {
    uss_ps_2nd_corner_gcs_ = NULL;
  }
  if (from.has_uss_ps_3st_corner_gcs()) {
    uss_ps_3st_corner_gcs_ = new ::autodrive::workflow::proto::UssPoint(*from.uss_ps_3st_corner_gcs_);
  } else {
    uss_ps_3st_corner_gcs_ = NULL;
  }
  if (from.has_uss_ps_4nd_corner_gcs()) {
    uss_ps_4nd_corner_gcs_ = new ::autodrive::workflow::proto::UssPoint(*from.uss_ps_4nd_corner_gcs_);
  } else {
    uss_ps_4nd_corner_gcs_ = NULL;
  }
  if (from.has_uss_ps_boundary_1st_info()) {
    uss_ps_boundary_1st_info_ = new ::autodrive::workflow::proto::UssPoint(*from.uss_ps_boundary_1st_info_);
  } else {
    uss_ps_boundary_1st_info_ = NULL;
  }
  if (from.has_uss_ps_boundary_2nd_info()) {
    uss_ps_boundary_2nd_info_ = new ::autodrive::workflow::proto::UssPoint(*from.uss_ps_boundary_2nd_info_);
  } else {
    uss_ps_boundary_2nd_info_ = NULL;
  }
  ::memcpy(&uss_ps_id_ui8_, &from.uss_ps_id_ui8_,
    static_cast<size_t>(reinterpret_cast<char*>(&uss_ps_finish_timestamp_) -
    reinterpret_cast<char*>(&uss_ps_id_ui8_)) + sizeof(uss_ps_finish_timestamp_));
  // @@protoc_insertion_point(copy_constructor:autodrive.workflow.proto.PerFusUssPs)
}

void PerFusUssPs::SharedCtor() {
  ::memset(&uss_ps_1st_corner_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uss_ps_finish_timestamp_) -
      reinterpret_cast<char*>(&uss_ps_1st_corner_)) + sizeof(uss_ps_finish_timestamp_));
  _cached_size_ = 0;
}

PerFusUssPs::~PerFusUssPs() {
  // @@protoc_insertion_point(destructor:autodrive.workflow.proto.PerFusUssPs)
  SharedDtor();
}

void PerFusUssPs::SharedDtor() {
  if (this != internal_default_instance()) delete uss_ps_1st_corner_;
  if (this != internal_default_instance()) delete uss_ps_2nd_corner_;
  if (this != internal_default_instance()) delete uss_ps_3st_corner_;
  if (this != internal_default_instance()) delete uss_ps_4nd_corner_;
  if (this != internal_default_instance()) delete uss_ps_1st_corner_gcs_;
  if (this != internal_default_instance()) delete uss_ps_2nd_corner_gcs_;
  if (this != internal_default_instance()) delete uss_ps_3st_corner_gcs_;
  if (this != internal_default_instance()) delete uss_ps_4nd_corner_gcs_;
  if (this != internal_default_instance()) delete uss_ps_boundary_1st_info_;
  if (this != internal_default_instance()) delete uss_ps_boundary_2nd_info_;
}

void PerFusUssPs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PerFusUssPs::descriptor() {
  ::protobuf_uss_5fparking_5fslots_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uss_5fparking_5fslots_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PerFusUssPs& PerFusUssPs::default_instance() {
  ::protobuf_uss_5fparking_5fslots_2eproto::InitDefaultsPerFusUssPs();
  return *internal_default_instance();
}

PerFusUssPs* PerFusUssPs::New(::google::protobuf::Arena* arena) const {
  PerFusUssPs* n = new PerFusUssPs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PerFusUssPs::Clear() {
// @@protoc_insertion_point(message_clear_start:autodrive.workflow.proto.PerFusUssPs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && uss_ps_1st_corner_ != NULL) {
    delete uss_ps_1st_corner_;
  }
  uss_ps_1st_corner_ = NULL;
  if (GetArenaNoVirtual() == NULL && uss_ps_2nd_corner_ != NULL) {
    delete uss_ps_2nd_corner_;
  }
  uss_ps_2nd_corner_ = NULL;
  if (GetArenaNoVirtual() == NULL && uss_ps_3st_corner_ != NULL) {
    delete uss_ps_3st_corner_;
  }
  uss_ps_3st_corner_ = NULL;
  if (GetArenaNoVirtual() == NULL && uss_ps_4nd_corner_ != NULL) {
    delete uss_ps_4nd_corner_;
  }
  uss_ps_4nd_corner_ = NULL;
  if (GetArenaNoVirtual() == NULL && uss_ps_1st_corner_gcs_ != NULL) {
    delete uss_ps_1st_corner_gcs_;
  }
  uss_ps_1st_corner_gcs_ = NULL;
  if (GetArenaNoVirtual() == NULL && uss_ps_2nd_corner_gcs_ != NULL) {
    delete uss_ps_2nd_corner_gcs_;
  }
  uss_ps_2nd_corner_gcs_ = NULL;
  if (GetArenaNoVirtual() == NULL && uss_ps_3st_corner_gcs_ != NULL) {
    delete uss_ps_3st_corner_gcs_;
  }
  uss_ps_3st_corner_gcs_ = NULL;
  if (GetArenaNoVirtual() == NULL && uss_ps_4nd_corner_gcs_ != NULL) {
    delete uss_ps_4nd_corner_gcs_;
  }
  uss_ps_4nd_corner_gcs_ = NULL;
  if (GetArenaNoVirtual() == NULL && uss_ps_boundary_1st_info_ != NULL) {
    delete uss_ps_boundary_1st_info_;
  }
  uss_ps_boundary_1st_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && uss_ps_boundary_2nd_info_ != NULL) {
    delete uss_ps_boundary_2nd_info_;
  }
  uss_ps_boundary_2nd_info_ = NULL;
  ::memset(&uss_ps_id_ui8_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uss_ps_finish_timestamp_) -
      reinterpret_cast<char*>(&uss_ps_id_ui8_)) + sizeof(uss_ps_finish_timestamp_));
  _internal_metadata_.Clear();
}

bool PerFusUssPs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:autodrive.workflow.proto.PerFusUssPs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uss_ps_id_ui8 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uss_ps_id_ui8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssPsStatusEn uss_ps_status_en = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_uss_ps_status_en(static_cast< ::autodrive::workflow::proto::UssPsStatusEn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssPsTypeEn uss_ps_type_en = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_uss_ps_type_en(static_cast< ::autodrive::workflow::proto::UssPsTypeEn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssPsOrientationEn uss_ps_orientation_en = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_uss_ps_orientation_en(static_cast< ::autodrive::workflow::proto::UssPsOrientationEn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssPsBoundaryTypeEn uss_ps_1st_boundary_type_en = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_uss_ps_1st_boundary_type_en(static_cast< ::autodrive::workflow::proto::UssPsBoundaryTypeEn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssPsBoundaryTypeEn uss_ps_2nd_boundary_type_en = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_uss_ps_2nd_boundary_type_en(static_cast< ::autodrive::workflow::proto::UssPsBoundaryTypeEn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssPsBoundaryTypeEn uss_ps_cross_boundary_type_en = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_uss_ps_cross_boundary_type_en(static_cast< ::autodrive::workflow::proto::UssPsBoundaryTypeEn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uss_ps_depth_ui16 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uss_ps_depth_ui16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uss_ps_length_ui16 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uss_ps_length_ui16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 uss_ps_angle_i16 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uss_ps_angle_i16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssPoint uss_ps_1st_corner = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uss_ps_1st_corner()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssPoint uss_ps_2nd_corner = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uss_ps_2nd_corner()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssPoint uss_ps_3st_corner = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uss_ps_3st_corner()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssPoint uss_ps_4nd_corner = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uss_ps_4nd_corner()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssPoint uss_ps_1st_corner_gcs = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uss_ps_1st_corner_gcs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssPoint uss_ps_2nd_corner_gcs = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uss_ps_2nd_corner_gcs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssPoint uss_ps_3st_corner_gcs = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uss_ps_3st_corner_gcs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssPoint uss_ps_4nd_corner_gcs = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uss_ps_4nd_corner_gcs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssPoint uss_ps_boundary_1st_info = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uss_ps_boundary_1st_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssPoint uss_ps_boundary_2nd_info = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uss_ps_boundary_2nd_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 uss_ps_finish_timestamp = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uss_ps_finish_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:autodrive.workflow.proto.PerFusUssPs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:autodrive.workflow.proto.PerFusUssPs)
  return false;
#undef DO_
}

void PerFusUssPs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:autodrive.workflow.proto.PerFusUssPs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uss_ps_id_ui8 = 1;
  if (this->uss_ps_id_ui8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uss_ps_id_ui8(), output);
  }

  // .autodrive.workflow.proto.UssPsStatusEn uss_ps_status_en = 2;
  if (this->uss_ps_status_en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->uss_ps_status_en(), output);
  }

  // .autodrive.workflow.proto.UssPsTypeEn uss_ps_type_en = 3;
  if (this->uss_ps_type_en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->uss_ps_type_en(), output);
  }

  // .autodrive.workflow.proto.UssPsOrientationEn uss_ps_orientation_en = 4;
  if (this->uss_ps_orientation_en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->uss_ps_orientation_en(), output);
  }

  // .autodrive.workflow.proto.UssPsBoundaryTypeEn uss_ps_1st_boundary_type_en = 5;
  if (this->uss_ps_1st_boundary_type_en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->uss_ps_1st_boundary_type_en(), output);
  }

  // .autodrive.workflow.proto.UssPsBoundaryTypeEn uss_ps_2nd_boundary_type_en = 6;
  if (this->uss_ps_2nd_boundary_type_en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->uss_ps_2nd_boundary_type_en(), output);
  }

  // .autodrive.workflow.proto.UssPsBoundaryTypeEn uss_ps_cross_boundary_type_en = 7;
  if (this->uss_ps_cross_boundary_type_en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->uss_ps_cross_boundary_type_en(), output);
  }

  // uint32 uss_ps_depth_ui16 = 8;
  if (this->uss_ps_depth_ui16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->uss_ps_depth_ui16(), output);
  }

  // uint32 uss_ps_length_ui16 = 9;
  if (this->uss_ps_length_ui16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->uss_ps_length_ui16(), output);
  }

  // int32 uss_ps_angle_i16 = 10;
  if (this->uss_ps_angle_i16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->uss_ps_angle_i16(), output);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_1st_corner = 11;
  if (this->has_uss_ps_1st_corner()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->uss_ps_1st_corner_, output);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_2nd_corner = 12;
  if (this->has_uss_ps_2nd_corner()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->uss_ps_2nd_corner_, output);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_3st_corner = 13;
  if (this->has_uss_ps_3st_corner()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->uss_ps_3st_corner_, output);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_4nd_corner = 14;
  if (this->has_uss_ps_4nd_corner()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->uss_ps_4nd_corner_, output);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_1st_corner_gcs = 15;
  if (this->has_uss_ps_1st_corner_gcs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->uss_ps_1st_corner_gcs_, output);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_2nd_corner_gcs = 16;
  if (this->has_uss_ps_2nd_corner_gcs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->uss_ps_2nd_corner_gcs_, output);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_3st_corner_gcs = 17;
  if (this->has_uss_ps_3st_corner_gcs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->uss_ps_3st_corner_gcs_, output);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_4nd_corner_gcs = 18;
  if (this->has_uss_ps_4nd_corner_gcs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *this->uss_ps_4nd_corner_gcs_, output);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_boundary_1st_info = 19;
  if (this->has_uss_ps_boundary_1st_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, *this->uss_ps_boundary_1st_info_, output);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_boundary_2nd_info = 20;
  if (this->has_uss_ps_boundary_2nd_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->uss_ps_boundary_2nd_info_, output);
  }

  // int64 uss_ps_finish_timestamp = 21;
  if (this->uss_ps_finish_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(21, this->uss_ps_finish_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:autodrive.workflow.proto.PerFusUssPs)
}

::google::protobuf::uint8* PerFusUssPs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:autodrive.workflow.proto.PerFusUssPs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uss_ps_id_ui8 = 1;
  if (this->uss_ps_id_ui8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uss_ps_id_ui8(), target);
  }

  // .autodrive.workflow.proto.UssPsStatusEn uss_ps_status_en = 2;
  if (this->uss_ps_status_en() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->uss_ps_status_en(), target);
  }

  // .autodrive.workflow.proto.UssPsTypeEn uss_ps_type_en = 3;
  if (this->uss_ps_type_en() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->uss_ps_type_en(), target);
  }

  // .autodrive.workflow.proto.UssPsOrientationEn uss_ps_orientation_en = 4;
  if (this->uss_ps_orientation_en() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->uss_ps_orientation_en(), target);
  }

  // .autodrive.workflow.proto.UssPsBoundaryTypeEn uss_ps_1st_boundary_type_en = 5;
  if (this->uss_ps_1st_boundary_type_en() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->uss_ps_1st_boundary_type_en(), target);
  }

  // .autodrive.workflow.proto.UssPsBoundaryTypeEn uss_ps_2nd_boundary_type_en = 6;
  if (this->uss_ps_2nd_boundary_type_en() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->uss_ps_2nd_boundary_type_en(), target);
  }

  // .autodrive.workflow.proto.UssPsBoundaryTypeEn uss_ps_cross_boundary_type_en = 7;
  if (this->uss_ps_cross_boundary_type_en() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->uss_ps_cross_boundary_type_en(), target);
  }

  // uint32 uss_ps_depth_ui16 = 8;
  if (this->uss_ps_depth_ui16() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->uss_ps_depth_ui16(), target);
  }

  // uint32 uss_ps_length_ui16 = 9;
  if (this->uss_ps_length_ui16() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->uss_ps_length_ui16(), target);
  }

  // int32 uss_ps_angle_i16 = 10;
  if (this->uss_ps_angle_i16() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->uss_ps_angle_i16(), target);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_1st_corner = 11;
  if (this->has_uss_ps_1st_corner()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, *this->uss_ps_1st_corner_, deterministic, target);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_2nd_corner = 12;
  if (this->has_uss_ps_2nd_corner()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, *this->uss_ps_2nd_corner_, deterministic, target);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_3st_corner = 13;
  if (this->has_uss_ps_3st_corner()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, *this->uss_ps_3st_corner_, deterministic, target);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_4nd_corner = 14;
  if (this->has_uss_ps_4nd_corner()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, *this->uss_ps_4nd_corner_, deterministic, target);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_1st_corner_gcs = 15;
  if (this->has_uss_ps_1st_corner_gcs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, *this->uss_ps_1st_corner_gcs_, deterministic, target);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_2nd_corner_gcs = 16;
  if (this->has_uss_ps_2nd_corner_gcs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, *this->uss_ps_2nd_corner_gcs_, deterministic, target);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_3st_corner_gcs = 17;
  if (this->has_uss_ps_3st_corner_gcs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, *this->uss_ps_3st_corner_gcs_, deterministic, target);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_4nd_corner_gcs = 18;
  if (this->has_uss_ps_4nd_corner_gcs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, *this->uss_ps_4nd_corner_gcs_, deterministic, target);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_boundary_1st_info = 19;
  if (this->has_uss_ps_boundary_1st_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, *this->uss_ps_boundary_1st_info_, deterministic, target);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_boundary_2nd_info = 20;
  if (this->has_uss_ps_boundary_2nd_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, *this->uss_ps_boundary_2nd_info_, deterministic, target);
  }

  // int64 uss_ps_finish_timestamp = 21;
  if (this->uss_ps_finish_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(21, this->uss_ps_finish_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autodrive.workflow.proto.PerFusUssPs)
  return target;
}

size_t PerFusUssPs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autodrive.workflow.proto.PerFusUssPs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .autodrive.workflow.proto.UssPoint uss_ps_1st_corner = 11;
  if (this->has_uss_ps_1st_corner()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->uss_ps_1st_corner_);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_2nd_corner = 12;
  if (this->has_uss_ps_2nd_corner()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->uss_ps_2nd_corner_);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_3st_corner = 13;
  if (this->has_uss_ps_3st_corner()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->uss_ps_3st_corner_);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_4nd_corner = 14;
  if (this->has_uss_ps_4nd_corner()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->uss_ps_4nd_corner_);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_1st_corner_gcs = 15;
  if (this->has_uss_ps_1st_corner_gcs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->uss_ps_1st_corner_gcs_);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_2nd_corner_gcs = 16;
  if (this->has_uss_ps_2nd_corner_gcs()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->uss_ps_2nd_corner_gcs_);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_3st_corner_gcs = 17;
  if (this->has_uss_ps_3st_corner_gcs()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->uss_ps_3st_corner_gcs_);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_4nd_corner_gcs = 18;
  if (this->has_uss_ps_4nd_corner_gcs()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->uss_ps_4nd_corner_gcs_);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_boundary_1st_info = 19;
  if (this->has_uss_ps_boundary_1st_info()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->uss_ps_boundary_1st_info_);
  }

  // .autodrive.workflow.proto.UssPoint uss_ps_boundary_2nd_info = 20;
  if (this->has_uss_ps_boundary_2nd_info()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->uss_ps_boundary_2nd_info_);
  }

  // uint32 uss_ps_id_ui8 = 1;
  if (this->uss_ps_id_ui8() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uss_ps_id_ui8());
  }

  // .autodrive.workflow.proto.UssPsStatusEn uss_ps_status_en = 2;
  if (this->uss_ps_status_en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->uss_ps_status_en());
  }

  // .autodrive.workflow.proto.UssPsTypeEn uss_ps_type_en = 3;
  if (this->uss_ps_type_en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->uss_ps_type_en());
  }

  // .autodrive.workflow.proto.UssPsOrientationEn uss_ps_orientation_en = 4;
  if (this->uss_ps_orientation_en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->uss_ps_orientation_en());
  }

  // .autodrive.workflow.proto.UssPsBoundaryTypeEn uss_ps_1st_boundary_type_en = 5;
  if (this->uss_ps_1st_boundary_type_en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->uss_ps_1st_boundary_type_en());
  }

  // .autodrive.workflow.proto.UssPsBoundaryTypeEn uss_ps_2nd_boundary_type_en = 6;
  if (this->uss_ps_2nd_boundary_type_en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->uss_ps_2nd_boundary_type_en());
  }

  // .autodrive.workflow.proto.UssPsBoundaryTypeEn uss_ps_cross_boundary_type_en = 7;
  if (this->uss_ps_cross_boundary_type_en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->uss_ps_cross_boundary_type_en());
  }

  // uint32 uss_ps_depth_ui16 = 8;
  if (this->uss_ps_depth_ui16() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uss_ps_depth_ui16());
  }

  // uint32 uss_ps_length_ui16 = 9;
  if (this->uss_ps_length_ui16() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uss_ps_length_ui16());
  }

  // int32 uss_ps_angle_i16 = 10;
  if (this->uss_ps_angle_i16() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uss_ps_angle_i16());
  }

  // int64 uss_ps_finish_timestamp = 21;
  if (this->uss_ps_finish_timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uss_ps_finish_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PerFusUssPs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:autodrive.workflow.proto.PerFusUssPs)
  GOOGLE_DCHECK_NE(&from, this);
  const PerFusUssPs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PerFusUssPs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:autodrive.workflow.proto.PerFusUssPs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:autodrive.workflow.proto.PerFusUssPs)
    MergeFrom(*source);
  }
}

void PerFusUssPs::MergeFrom(const PerFusUssPs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:autodrive.workflow.proto.PerFusUssPs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_uss_ps_1st_corner()) {
    mutable_uss_ps_1st_corner()->::autodrive::workflow::proto::UssPoint::MergeFrom(from.uss_ps_1st_corner());
  }
  if (from.has_uss_ps_2nd_corner()) {
    mutable_uss_ps_2nd_corner()->::autodrive::workflow::proto::UssPoint::MergeFrom(from.uss_ps_2nd_corner());
  }
  if (from.has_uss_ps_3st_corner()) {
    mutable_uss_ps_3st_corner()->::autodrive::workflow::proto::UssPoint::MergeFrom(from.uss_ps_3st_corner());
  }
  if (from.has_uss_ps_4nd_corner()) {
    mutable_uss_ps_4nd_corner()->::autodrive::workflow::proto::UssPoint::MergeFrom(from.uss_ps_4nd_corner());
  }
  if (from.has_uss_ps_1st_corner_gcs()) {
    mutable_uss_ps_1st_corner_gcs()->::autodrive::workflow::proto::UssPoint::MergeFrom(from.uss_ps_1st_corner_gcs());
  }
  if (from.has_uss_ps_2nd_corner_gcs()) {
    mutable_uss_ps_2nd_corner_gcs()->::autodrive::workflow::proto::UssPoint::MergeFrom(from.uss_ps_2nd_corner_gcs());
  }
  if (from.has_uss_ps_3st_corner_gcs()) {
    mutable_uss_ps_3st_corner_gcs()->::autodrive::workflow::proto::UssPoint::MergeFrom(from.uss_ps_3st_corner_gcs());
  }
  if (from.has_uss_ps_4nd_corner_gcs()) {
    mutable_uss_ps_4nd_corner_gcs()->::autodrive::workflow::proto::UssPoint::MergeFrom(from.uss_ps_4nd_corner_gcs());
  }
  if (from.has_uss_ps_boundary_1st_info()) {
    mutable_uss_ps_boundary_1st_info()->::autodrive::workflow::proto::UssPoint::MergeFrom(from.uss_ps_boundary_1st_info());
  }
  if (from.has_uss_ps_boundary_2nd_info()) {
    mutable_uss_ps_boundary_2nd_info()->::autodrive::workflow::proto::UssPoint::MergeFrom(from.uss_ps_boundary_2nd_info());
  }
  if (from.uss_ps_id_ui8() != 0) {
    set_uss_ps_id_ui8(from.uss_ps_id_ui8());
  }
  if (from.uss_ps_status_en() != 0) {
    set_uss_ps_status_en(from.uss_ps_status_en());
  }
  if (from.uss_ps_type_en() != 0) {
    set_uss_ps_type_en(from.uss_ps_type_en());
  }
  if (from.uss_ps_orientation_en() != 0) {
    set_uss_ps_orientation_en(from.uss_ps_orientation_en());
  }
  if (from.uss_ps_1st_boundary_type_en() != 0) {
    set_uss_ps_1st_boundary_type_en(from.uss_ps_1st_boundary_type_en());
  }
  if (from.uss_ps_2nd_boundary_type_en() != 0) {
    set_uss_ps_2nd_boundary_type_en(from.uss_ps_2nd_boundary_type_en());
  }
  if (from.uss_ps_cross_boundary_type_en() != 0) {
    set_uss_ps_cross_boundary_type_en(from.uss_ps_cross_boundary_type_en());
  }
  if (from.uss_ps_depth_ui16() != 0) {
    set_uss_ps_depth_ui16(from.uss_ps_depth_ui16());
  }
  if (from.uss_ps_length_ui16() != 0) {
    set_uss_ps_length_ui16(from.uss_ps_length_ui16());
  }
  if (from.uss_ps_angle_i16() != 0) {
    set_uss_ps_angle_i16(from.uss_ps_angle_i16());
  }
  if (from.uss_ps_finish_timestamp() != 0) {
    set_uss_ps_finish_timestamp(from.uss_ps_finish_timestamp());
  }
}

void PerFusUssPs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:autodrive.workflow.proto.PerFusUssPs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PerFusUssPs::CopyFrom(const PerFusUssPs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autodrive.workflow.proto.PerFusUssPs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerFusUssPs::IsInitialized() const {
  return true;
}

void PerFusUssPs::Swap(PerFusUssPs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PerFusUssPs::InternalSwap(PerFusUssPs* other) {
  using std::swap;
  swap(uss_ps_1st_corner_, other->uss_ps_1st_corner_);
  swap(uss_ps_2nd_corner_, other->uss_ps_2nd_corner_);
  swap(uss_ps_3st_corner_, other->uss_ps_3st_corner_);
  swap(uss_ps_4nd_corner_, other->uss_ps_4nd_corner_);
  swap(uss_ps_1st_corner_gcs_, other->uss_ps_1st_corner_gcs_);
  swap(uss_ps_2nd_corner_gcs_, other->uss_ps_2nd_corner_gcs_);
  swap(uss_ps_3st_corner_gcs_, other->uss_ps_3st_corner_gcs_);
  swap(uss_ps_4nd_corner_gcs_, other->uss_ps_4nd_corner_gcs_);
  swap(uss_ps_boundary_1st_info_, other->uss_ps_boundary_1st_info_);
  swap(uss_ps_boundary_2nd_info_, other->uss_ps_boundary_2nd_info_);
  swap(uss_ps_id_ui8_, other->uss_ps_id_ui8_);
  swap(uss_ps_status_en_, other->uss_ps_status_en_);
  swap(uss_ps_type_en_, other->uss_ps_type_en_);
  swap(uss_ps_orientation_en_, other->uss_ps_orientation_en_);
  swap(uss_ps_1st_boundary_type_en_, other->uss_ps_1st_boundary_type_en_);
  swap(uss_ps_2nd_boundary_type_en_, other->uss_ps_2nd_boundary_type_en_);
  swap(uss_ps_cross_boundary_type_en_, other->uss_ps_cross_boundary_type_en_);
  swap(uss_ps_depth_ui16_, other->uss_ps_depth_ui16_);
  swap(uss_ps_length_ui16_, other->uss_ps_length_ui16_);
  swap(uss_ps_angle_i16_, other->uss_ps_angle_i16_);
  swap(uss_ps_finish_timestamp_, other->uss_ps_finish_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PerFusUssPs::GetMetadata() const {
  protobuf_uss_5fparking_5fslots_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uss_5fparking_5fslots_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UssParkingSlotsMsg::InitAsDefaultInstance() {
  ::autodrive::workflow::proto::_UssParkingSlotsMsg_default_instance_._instance.get_mutable()->header_ = const_cast< ::autodrive::workflow::proto::MsgHeader*>(
      ::autodrive::workflow::proto::MsgHeader::internal_default_instance());
  ::autodrive::workflow::proto::_UssParkingSlotsMsg_default_instance_._instance.get_mutable()->error_ = const_cast< ::autodrive::workflow::proto::Error*>(
      ::autodrive::workflow::proto::Error::internal_default_instance());
  ::autodrive::workflow::proto::_UssParkingSlotsMsg_default_instance_._instance.get_mutable()->uss_correct_ps_ = const_cast< ::autodrive::workflow::proto::PerFusUssPs*>(
      ::autodrive::workflow::proto::PerFusUssPs::internal_default_instance());
  ::autodrive::workflow::proto::_UssParkingSlotsMsg_default_instance_._instance.get_mutable()->state_machine_ = const_cast< ::autodrive::workflow::proto::StateMachine*>(
      ::autodrive::workflow::proto::StateMachine::internal_default_instance());
}
void UssParkingSlotsMsg::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void UssParkingSlotsMsg::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
}
void UssParkingSlotsMsg::clear_uss_header() {
  uss_header_.Clear();
}
void UssParkingSlotsMsg::clear_state_machine() {
  if (GetArenaNoVirtual() == NULL && state_machine_ != NULL) {
    delete state_machine_;
  }
  state_machine_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UssParkingSlotsMsg::kHeaderFieldNumber;
const int UssParkingSlotsMsg::kErrorFieldNumber;
const int UssParkingSlotsMsg::kVersionFieldNumber;
const int UssParkingSlotsMsg::kUssHeaderFieldNumber;
const int UssParkingSlotsMsg::kUssPsFieldNumber;
const int UssParkingSlotsMsg::kUssCorrectPsFieldNumber;
const int UssParkingSlotsMsg::kStateMachineFieldNumber;
const int UssParkingSlotsMsg::kSensorStampFieldNumber;
const int UssParkingSlotsMsg::kSampleStampFieldNumber;
const int UssParkingSlotsMsg::kRawArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UssParkingSlotsMsg::UssParkingSlotsMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_uss_5fparking_5fslots_2eproto::InitDefaultsUssParkingSlotsMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:autodrive.workflow.proto.UssParkingSlotsMsg)
}
UssParkingSlotsMsg::UssParkingSlotsMsg(const UssParkingSlotsMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      uss_header_(from.uss_header_),
      uss_ps_(from.uss_ps_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  raw_array_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.raw_array().size() > 0) {
    raw_array_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raw_array_);
  }
  if (from.has_header()) {
    header_ = new ::autodrive::workflow::proto::MsgHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_error()) {
    error_ = new ::autodrive::workflow::proto::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  if (from.has_uss_correct_ps()) {
    uss_correct_ps_ = new ::autodrive::workflow::proto::PerFusUssPs(*from.uss_correct_ps_);
  } else {
    uss_correct_ps_ = NULL;
  }
  if (from.has_state_machine()) {
    state_machine_ = new ::autodrive::workflow::proto::StateMachine(*from.state_machine_);
  } else {
    state_machine_ = NULL;
  }
  ::memcpy(&sensor_stamp_, &from.sensor_stamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&sensor_stamp_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:autodrive.workflow.proto.UssParkingSlotsMsg)
}

void UssParkingSlotsMsg::SharedCtor() {
  raw_array_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&header_)) + sizeof(version_));
  _cached_size_ = 0;
}

UssParkingSlotsMsg::~UssParkingSlotsMsg() {
  // @@protoc_insertion_point(destructor:autodrive.workflow.proto.UssParkingSlotsMsg)
  SharedDtor();
}

void UssParkingSlotsMsg::SharedDtor() {
  raw_array_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete error_;
  if (this != internal_default_instance()) delete uss_correct_ps_;
  if (this != internal_default_instance()) delete state_machine_;
}

void UssParkingSlotsMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UssParkingSlotsMsg::descriptor() {
  ::protobuf_uss_5fparking_5fslots_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uss_5fparking_5fslots_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UssParkingSlotsMsg& UssParkingSlotsMsg::default_instance() {
  ::protobuf_uss_5fparking_5fslots_2eproto::InitDefaultsUssParkingSlotsMsg();
  return *internal_default_instance();
}

UssParkingSlotsMsg* UssParkingSlotsMsg::New(::google::protobuf::Arena* arena) const {
  UssParkingSlotsMsg* n = new UssParkingSlotsMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UssParkingSlotsMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:autodrive.workflow.proto.UssParkingSlotsMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uss_header_.Clear();
  uss_ps_.Clear();
  raw_array_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  if (GetArenaNoVirtual() == NULL && uss_correct_ps_ != NULL) {
    delete uss_correct_ps_;
  }
  uss_correct_ps_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_machine_ != NULL) {
    delete state_machine_;
  }
  state_machine_ = NULL;
  ::memset(&sensor_stamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&sensor_stamp_)) + sizeof(version_));
  _internal_metadata_.Clear();
}

bool UssParkingSlotsMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:autodrive.workflow.proto.UssParkingSlotsMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .autodrive.workflow.proto.MsgHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.Error error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .autodrive.workflow.proto.PerFusUssHeader uss_header = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_uss_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .autodrive.workflow.proto.PerFusUssPs uss_ps = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_uss_ps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.PerFusUssPs uss_correct_ps = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uss_correct_ps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.StateMachine state_machine = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state_machine()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 sensor_stamp = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sensor_stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 sample_stamp = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sample_stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes raw_array = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_raw_array()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:autodrive.workflow.proto.UssParkingSlotsMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:autodrive.workflow.proto.UssParkingSlotsMsg)
  return false;
#undef DO_
}

void UssParkingSlotsMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:autodrive.workflow.proto.UssParkingSlotsMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .autodrive.workflow.proto.MsgHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // .autodrive.workflow.proto.Error error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  // int32 version = 3;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->version(), output);
  }

  // repeated .autodrive.workflow.proto.PerFusUssHeader uss_header = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uss_header_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->uss_header(static_cast<int>(i)), output);
  }

  // repeated .autodrive.workflow.proto.PerFusUssPs uss_ps = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uss_ps_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->uss_ps(static_cast<int>(i)), output);
  }

  // .autodrive.workflow.proto.PerFusUssPs uss_correct_ps = 6;
  if (this->has_uss_correct_ps()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->uss_correct_ps_, output);
  }

  // .autodrive.workflow.proto.StateMachine state_machine = 7;
  if (this->has_state_machine()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->state_machine_, output);
  }

  // int64 sensor_stamp = 8;
  if (this->sensor_stamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->sensor_stamp(), output);
  }

  // int64 sample_stamp = 9;
  if (this->sample_stamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->sample_stamp(), output);
  }

  // bytes raw_array = 10;
  if (this->raw_array().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->raw_array(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:autodrive.workflow.proto.UssParkingSlotsMsg)
}

::google::protobuf::uint8* UssParkingSlotsMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:autodrive.workflow.proto.UssParkingSlotsMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .autodrive.workflow.proto.MsgHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // .autodrive.workflow.proto.Error error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->error_, deterministic, target);
  }

  // int32 version = 3;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->version(), target);
  }

  // repeated .autodrive.workflow.proto.PerFusUssHeader uss_header = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uss_header_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->uss_header(static_cast<int>(i)), deterministic, target);
  }

  // repeated .autodrive.workflow.proto.PerFusUssPs uss_ps = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uss_ps_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->uss_ps(static_cast<int>(i)), deterministic, target);
  }

  // .autodrive.workflow.proto.PerFusUssPs uss_correct_ps = 6;
  if (this->has_uss_correct_ps()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->uss_correct_ps_, deterministic, target);
  }

  // .autodrive.workflow.proto.StateMachine state_machine = 7;
  if (this->has_state_machine()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->state_machine_, deterministic, target);
  }

  // int64 sensor_stamp = 8;
  if (this->sensor_stamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->sensor_stamp(), target);
  }

  // int64 sample_stamp = 9;
  if (this->sample_stamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->sample_stamp(), target);
  }

  // bytes raw_array = 10;
  if (this->raw_array().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->raw_array(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autodrive.workflow.proto.UssParkingSlotsMsg)
  return target;
}

size_t UssParkingSlotsMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autodrive.workflow.proto.UssParkingSlotsMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .autodrive.workflow.proto.PerFusUssHeader uss_header = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->uss_header_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->uss_header(static_cast<int>(i)));
    }
  }

  // repeated .autodrive.workflow.proto.PerFusUssPs uss_ps = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->uss_ps_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->uss_ps(static_cast<int>(i)));
    }
  }

  // bytes raw_array = 10;
  if (this->raw_array().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->raw_array());
  }

  // .autodrive.workflow.proto.MsgHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // .autodrive.workflow.proto.Error error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->error_);
  }

  // .autodrive.workflow.proto.PerFusUssPs uss_correct_ps = 6;
  if (this->has_uss_correct_ps()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->uss_correct_ps_);
  }

  // .autodrive.workflow.proto.StateMachine state_machine = 7;
  if (this->has_state_machine()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_machine_);
  }

  // int64 sensor_stamp = 8;
  if (this->sensor_stamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->sensor_stamp());
  }

  // int64 sample_stamp = 9;
  if (this->sample_stamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->sample_stamp());
  }

  // int32 version = 3;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UssParkingSlotsMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:autodrive.workflow.proto.UssParkingSlotsMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const UssParkingSlotsMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UssParkingSlotsMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:autodrive.workflow.proto.UssParkingSlotsMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:autodrive.workflow.proto.UssParkingSlotsMsg)
    MergeFrom(*source);
  }
}

void UssParkingSlotsMsg::MergeFrom(const UssParkingSlotsMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:autodrive.workflow.proto.UssParkingSlotsMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uss_header_.MergeFrom(from.uss_header_);
  uss_ps_.MergeFrom(from.uss_ps_);
  if (from.raw_array().size() > 0) {

    raw_array_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raw_array_);
  }
  if (from.has_header()) {
    mutable_header()->::autodrive::workflow::proto::MsgHeader::MergeFrom(from.header());
  }
  if (from.has_error()) {
    mutable_error()->::autodrive::workflow::proto::Error::MergeFrom(from.error());
  }
  if (from.has_uss_correct_ps()) {
    mutable_uss_correct_ps()->::autodrive::workflow::proto::PerFusUssPs::MergeFrom(from.uss_correct_ps());
  }
  if (from.has_state_machine()) {
    mutable_state_machine()->::autodrive::workflow::proto::StateMachine::MergeFrom(from.state_machine());
  }
  if (from.sensor_stamp() != 0) {
    set_sensor_stamp(from.sensor_stamp());
  }
  if (from.sample_stamp() != 0) {
    set_sample_stamp(from.sample_stamp());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void UssParkingSlotsMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:autodrive.workflow.proto.UssParkingSlotsMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UssParkingSlotsMsg::CopyFrom(const UssParkingSlotsMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autodrive.workflow.proto.UssParkingSlotsMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UssParkingSlotsMsg::IsInitialized() const {
  return true;
}

void UssParkingSlotsMsg::Swap(UssParkingSlotsMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UssParkingSlotsMsg::InternalSwap(UssParkingSlotsMsg* other) {
  using std::swap;
  uss_header_.InternalSwap(&other->uss_header_);
  uss_ps_.InternalSwap(&other->uss_ps_);
  raw_array_.Swap(&other->raw_array_);
  swap(header_, other->header_);
  swap(error_, other->error_);
  swap(uss_correct_ps_, other->uss_correct_ps_);
  swap(state_machine_, other->state_machine_);
  swap(sensor_stamp_, other->sensor_stamp_);
  swap(sample_stamp_, other->sample_stamp_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UssParkingSlotsMsg::GetMetadata() const {
  protobuf_uss_5fparking_5fslots_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uss_5fparking_5fslots_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace workflow
}  // namespace autodrive

// @@protoc_insertion_point(global_scope)
