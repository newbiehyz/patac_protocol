// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iqa_parsing.proto

#include "iqa_parsing.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace autodrive {
namespace workflow {
namespace proto {
class SceneParsingResultsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SceneParsingResults>
      _instance;
} _SceneParsingResults_default_instance_;
class IqaParsingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IqaParsing>
      _instance;
} _IqaParsing_default_instance_;
class IqaParsingResultsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IqaParsingResults>
      _instance;
} _IqaParsingResults_default_instance_;
class IqaParsingMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IqaParsingMsg>
      _instance;
} _IqaParsingMsg_default_instance_;
}  // namespace proto
}  // namespace workflow
}  // namespace autodrive
namespace protobuf_iqa_5fparsing_2eproto {
void InitDefaultsSceneParsingResultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_perception_5fbase_2eproto::InitDefaultsSceneParsing();
  {
    void* ptr = &::autodrive::workflow::proto::_SceneParsingResults_default_instance_;
    new (ptr) ::autodrive::workflow::proto::SceneParsingResults();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::autodrive::workflow::proto::SceneParsingResults::InitAsDefaultInstance();
}

void InitDefaultsSceneParsingResults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSceneParsingResultsImpl);
}

void InitDefaultsIqaParsingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sync_5fcylinder_5fparsing_2eproto::InitDefaultsCylinderParsingImageData();
  {
    void* ptr = &::autodrive::workflow::proto::_IqaParsing_default_instance_;
    new (ptr) ::autodrive::workflow::proto::IqaParsing();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::autodrive::workflow::proto::IqaParsing::InitAsDefaultInstance();
}

void InitDefaultsIqaParsing() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIqaParsingImpl);
}

void InitDefaultsIqaParsingResultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_iqa_5fparsing_2eproto::InitDefaultsIqaParsing();
  {
    void* ptr = &::autodrive::workflow::proto::_IqaParsingResults_default_instance_;
    new (ptr) ::autodrive::workflow::proto::IqaParsingResults();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::autodrive::workflow::proto::IqaParsingResults::InitAsDefaultInstance();
}

void InitDefaultsIqaParsingResults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIqaParsingResultsImpl);
}

void InitDefaultsIqaParsingMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2eproto::InitDefaultsMsgHeader();
  protobuf_common_2eproto::InitDefaultsError();
  protobuf_iqa_5fparsing_2eproto::InitDefaultsIqaParsingResults();
  protobuf_iqa_5fparsing_2eproto::InitDefaultsSceneParsingResults();
  {
    void* ptr = &::autodrive::workflow::proto::_IqaParsingMsg_default_instance_;
    new (ptr) ::autodrive::workflow::proto::IqaParsingMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::autodrive::workflow::proto::IqaParsingMsg::InitAsDefaultInstance();
}

void InitDefaultsIqaParsingMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIqaParsingMsgImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::SceneParsingResults, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::SceneParsingResults, scene_parsing_result_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::IqaParsing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::IqaParsing, image_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::IqaParsing, parsing_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::IqaParsingResults, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::IqaParsingResults, iqa_parsing_result_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::IqaParsingMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::IqaParsingMsg, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::IqaParsingMsg, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::IqaParsingMsg, iqa_parsing_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::IqaParsingMsg, scene_parsing_data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::autodrive::workflow::proto::SceneParsingResults)},
  { 6, -1, sizeof(::autodrive::workflow::proto::IqaParsing)},
  { 13, -1, sizeof(::autodrive::workflow::proto::IqaParsingResults)},
  { 19, -1, sizeof(::autodrive::workflow::proto::IqaParsingMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::autodrive::workflow::proto::_SceneParsingResults_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::autodrive::workflow::proto::_IqaParsing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::autodrive::workflow::proto::_IqaParsingResults_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::autodrive::workflow::proto::_IqaParsingMsg_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "iqa_parsing.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021iqa_parsing.proto\022\030autodrive.workflow."
      "proto\032\014common.proto\032\033sync_cylinder_parsi"
      "ng.proto\032\025perception_base.proto\"p\n\023Scene"
      "ParsingResults\022Y\n\031scene_parsing_result_d"
      "ata\030\001 \003(\01326.autodrive.workflow.proto.per"
      "ception_base.SceneParsing\"\233\001\n\nIqaParsing"
      "\022C\n\010image_id\030\001 \001(\01621.autodrive.workflow."
      "proto.perception_base.ImageId\022H\n\014parsing"
      "_data\030\002 \001(\01322.autodrive.workflow.proto.C"
      "ylinderParsingImageData\"Z\n\021IqaParsingRes"
      "ults\022E\n\027iqa_parsing_result_data\030\001 \003(\0132$."
      "autodrive.workflow.proto.IqaParsing\"\206\002\n\r"
      "IqaParsingMsg\0223\n\006header\030\001 \001(\0132#.autodriv"
      "e.workflow.proto.MsgHeader\022.\n\005error\030\002 \001("
      "\0132\037.autodrive.workflow.proto.Error\022E\n\020iq"
      "a_parsing_data\030\003 \001(\0132+.autodrive.workflo"
      "w.proto.IqaParsingResults\022I\n\022scene_parsi"
      "ng_data\030\004 \001(\0132-.autodrive.workflow.proto"
      ".SceneParsingResultsb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 748);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "iqa_parsing.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2eproto::AddDescriptors();
  ::protobuf_sync_5fcylinder_5fparsing_2eproto::AddDescriptors();
  ::protobuf_perception_5fbase_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_iqa_5fparsing_2eproto
namespace autodrive {
namespace workflow {
namespace proto {

// ===================================================================

void SceneParsingResults::InitAsDefaultInstance() {
}
void SceneParsingResults::clear_scene_parsing_result_data() {
  scene_parsing_result_data_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneParsingResults::kSceneParsingResultDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneParsingResults::SceneParsingResults()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iqa_5fparsing_2eproto::InitDefaultsSceneParsingResults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:autodrive.workflow.proto.SceneParsingResults)
}
SceneParsingResults::SceneParsingResults(const SceneParsingResults& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      scene_parsing_result_data_(from.scene_parsing_result_data_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:autodrive.workflow.proto.SceneParsingResults)
}

void SceneParsingResults::SharedCtor() {
  _cached_size_ = 0;
}

SceneParsingResults::~SceneParsingResults() {
  // @@protoc_insertion_point(destructor:autodrive.workflow.proto.SceneParsingResults)
  SharedDtor();
}

void SceneParsingResults::SharedDtor() {
}

void SceneParsingResults::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneParsingResults::descriptor() {
  ::protobuf_iqa_5fparsing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iqa_5fparsing_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneParsingResults& SceneParsingResults::default_instance() {
  ::protobuf_iqa_5fparsing_2eproto::InitDefaultsSceneParsingResults();
  return *internal_default_instance();
}

SceneParsingResults* SceneParsingResults::New(::google::protobuf::Arena* arena) const {
  SceneParsingResults* n = new SceneParsingResults;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneParsingResults::Clear() {
// @@protoc_insertion_point(message_clear_start:autodrive.workflow.proto.SceneParsingResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scene_parsing_result_data_.Clear();
  _internal_metadata_.Clear();
}

bool SceneParsingResults::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:autodrive.workflow.proto.SceneParsingResults)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .autodrive.workflow.proto.perception_base.SceneParsing scene_parsing_result_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_scene_parsing_result_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:autodrive.workflow.proto.SceneParsingResults)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:autodrive.workflow.proto.SceneParsingResults)
  return false;
#undef DO_
}

void SceneParsingResults::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:autodrive.workflow.proto.SceneParsingResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .autodrive.workflow.proto.perception_base.SceneParsing scene_parsing_result_data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->scene_parsing_result_data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->scene_parsing_result_data(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:autodrive.workflow.proto.SceneParsingResults)
}

::google::protobuf::uint8* SceneParsingResults::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:autodrive.workflow.proto.SceneParsingResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .autodrive.workflow.proto.perception_base.SceneParsing scene_parsing_result_data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->scene_parsing_result_data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->scene_parsing_result_data(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autodrive.workflow.proto.SceneParsingResults)
  return target;
}

size_t SceneParsingResults::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autodrive.workflow.proto.SceneParsingResults)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .autodrive.workflow.proto.perception_base.SceneParsing scene_parsing_result_data = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->scene_parsing_result_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->scene_parsing_result_data(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneParsingResults::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:autodrive.workflow.proto.SceneParsingResults)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneParsingResults* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneParsingResults>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:autodrive.workflow.proto.SceneParsingResults)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:autodrive.workflow.proto.SceneParsingResults)
    MergeFrom(*source);
  }
}

void SceneParsingResults::MergeFrom(const SceneParsingResults& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:autodrive.workflow.proto.SceneParsingResults)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scene_parsing_result_data_.MergeFrom(from.scene_parsing_result_data_);
}

void SceneParsingResults::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:autodrive.workflow.proto.SceneParsingResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneParsingResults::CopyFrom(const SceneParsingResults& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autodrive.workflow.proto.SceneParsingResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneParsingResults::IsInitialized() const {
  return true;
}

void SceneParsingResults::Swap(SceneParsingResults* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneParsingResults::InternalSwap(SceneParsingResults* other) {
  using std::swap;
  scene_parsing_result_data_.InternalSwap(&other->scene_parsing_result_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneParsingResults::GetMetadata() const {
  protobuf_iqa_5fparsing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iqa_5fparsing_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IqaParsing::InitAsDefaultInstance() {
  ::autodrive::workflow::proto::_IqaParsing_default_instance_._instance.get_mutable()->parsing_data_ = const_cast< ::autodrive::workflow::proto::CylinderParsingImageData*>(
      ::autodrive::workflow::proto::CylinderParsingImageData::internal_default_instance());
}
void IqaParsing::clear_parsing_data() {
  if (GetArenaNoVirtual() == NULL && parsing_data_ != NULL) {
    delete parsing_data_;
  }
  parsing_data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IqaParsing::kImageIdFieldNumber;
const int IqaParsing::kParsingDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IqaParsing::IqaParsing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iqa_5fparsing_2eproto::InitDefaultsIqaParsing();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:autodrive.workflow.proto.IqaParsing)
}
IqaParsing::IqaParsing(const IqaParsing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_parsing_data()) {
    parsing_data_ = new ::autodrive::workflow::proto::CylinderParsingImageData(*from.parsing_data_);
  } else {
    parsing_data_ = NULL;
  }
  image_id_ = from.image_id_;
  // @@protoc_insertion_point(copy_constructor:autodrive.workflow.proto.IqaParsing)
}

void IqaParsing::SharedCtor() {
  ::memset(&parsing_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&image_id_) -
      reinterpret_cast<char*>(&parsing_data_)) + sizeof(image_id_));
  _cached_size_ = 0;
}

IqaParsing::~IqaParsing() {
  // @@protoc_insertion_point(destructor:autodrive.workflow.proto.IqaParsing)
  SharedDtor();
}

void IqaParsing::SharedDtor() {
  if (this != internal_default_instance()) delete parsing_data_;
}

void IqaParsing::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IqaParsing::descriptor() {
  ::protobuf_iqa_5fparsing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iqa_5fparsing_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IqaParsing& IqaParsing::default_instance() {
  ::protobuf_iqa_5fparsing_2eproto::InitDefaultsIqaParsing();
  return *internal_default_instance();
}

IqaParsing* IqaParsing::New(::google::protobuf::Arena* arena) const {
  IqaParsing* n = new IqaParsing;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IqaParsing::Clear() {
// @@protoc_insertion_point(message_clear_start:autodrive.workflow.proto.IqaParsing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && parsing_data_ != NULL) {
    delete parsing_data_;
  }
  parsing_data_ = NULL;
  image_id_ = 0;
  _internal_metadata_.Clear();
}

bool IqaParsing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:autodrive.workflow.proto.IqaParsing)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .autodrive.workflow.proto.perception_base.ImageId image_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_image_id(static_cast< ::autodrive::workflow::proto::perception_base::ImageId >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.CylinderParsingImageData parsing_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parsing_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:autodrive.workflow.proto.IqaParsing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:autodrive.workflow.proto.IqaParsing)
  return false;
#undef DO_
}

void IqaParsing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:autodrive.workflow.proto.IqaParsing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .autodrive.workflow.proto.perception_base.ImageId image_id = 1;
  if (this->image_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->image_id(), output);
  }

  // .autodrive.workflow.proto.CylinderParsingImageData parsing_data = 2;
  if (this->has_parsing_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->parsing_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:autodrive.workflow.proto.IqaParsing)
}

::google::protobuf::uint8* IqaParsing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:autodrive.workflow.proto.IqaParsing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .autodrive.workflow.proto.perception_base.ImageId image_id = 1;
  if (this->image_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->image_id(), target);
  }

  // .autodrive.workflow.proto.CylinderParsingImageData parsing_data = 2;
  if (this->has_parsing_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->parsing_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autodrive.workflow.proto.IqaParsing)
  return target;
}

size_t IqaParsing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autodrive.workflow.proto.IqaParsing)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .autodrive.workflow.proto.CylinderParsingImageData parsing_data = 2;
  if (this->has_parsing_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->parsing_data_);
  }

  // .autodrive.workflow.proto.perception_base.ImageId image_id = 1;
  if (this->image_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->image_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IqaParsing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:autodrive.workflow.proto.IqaParsing)
  GOOGLE_DCHECK_NE(&from, this);
  const IqaParsing* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IqaParsing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:autodrive.workflow.proto.IqaParsing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:autodrive.workflow.proto.IqaParsing)
    MergeFrom(*source);
  }
}

void IqaParsing::MergeFrom(const IqaParsing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:autodrive.workflow.proto.IqaParsing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_parsing_data()) {
    mutable_parsing_data()->::autodrive::workflow::proto::CylinderParsingImageData::MergeFrom(from.parsing_data());
  }
  if (from.image_id() != 0) {
    set_image_id(from.image_id());
  }
}

void IqaParsing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:autodrive.workflow.proto.IqaParsing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IqaParsing::CopyFrom(const IqaParsing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autodrive.workflow.proto.IqaParsing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IqaParsing::IsInitialized() const {
  return true;
}

void IqaParsing::Swap(IqaParsing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IqaParsing::InternalSwap(IqaParsing* other) {
  using std::swap;
  swap(parsing_data_, other->parsing_data_);
  swap(image_id_, other->image_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IqaParsing::GetMetadata() const {
  protobuf_iqa_5fparsing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iqa_5fparsing_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IqaParsingResults::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IqaParsingResults::kIqaParsingResultDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IqaParsingResults::IqaParsingResults()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iqa_5fparsing_2eproto::InitDefaultsIqaParsingResults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:autodrive.workflow.proto.IqaParsingResults)
}
IqaParsingResults::IqaParsingResults(const IqaParsingResults& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      iqa_parsing_result_data_(from.iqa_parsing_result_data_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:autodrive.workflow.proto.IqaParsingResults)
}

void IqaParsingResults::SharedCtor() {
  _cached_size_ = 0;
}

IqaParsingResults::~IqaParsingResults() {
  // @@protoc_insertion_point(destructor:autodrive.workflow.proto.IqaParsingResults)
  SharedDtor();
}

void IqaParsingResults::SharedDtor() {
}

void IqaParsingResults::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IqaParsingResults::descriptor() {
  ::protobuf_iqa_5fparsing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iqa_5fparsing_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IqaParsingResults& IqaParsingResults::default_instance() {
  ::protobuf_iqa_5fparsing_2eproto::InitDefaultsIqaParsingResults();
  return *internal_default_instance();
}

IqaParsingResults* IqaParsingResults::New(::google::protobuf::Arena* arena) const {
  IqaParsingResults* n = new IqaParsingResults;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IqaParsingResults::Clear() {
// @@protoc_insertion_point(message_clear_start:autodrive.workflow.proto.IqaParsingResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  iqa_parsing_result_data_.Clear();
  _internal_metadata_.Clear();
}

bool IqaParsingResults::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:autodrive.workflow.proto.IqaParsingResults)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .autodrive.workflow.proto.IqaParsing iqa_parsing_result_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_iqa_parsing_result_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:autodrive.workflow.proto.IqaParsingResults)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:autodrive.workflow.proto.IqaParsingResults)
  return false;
#undef DO_
}

void IqaParsingResults::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:autodrive.workflow.proto.IqaParsingResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .autodrive.workflow.proto.IqaParsing iqa_parsing_result_data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->iqa_parsing_result_data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->iqa_parsing_result_data(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:autodrive.workflow.proto.IqaParsingResults)
}

::google::protobuf::uint8* IqaParsingResults::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:autodrive.workflow.proto.IqaParsingResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .autodrive.workflow.proto.IqaParsing iqa_parsing_result_data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->iqa_parsing_result_data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->iqa_parsing_result_data(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autodrive.workflow.proto.IqaParsingResults)
  return target;
}

size_t IqaParsingResults::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autodrive.workflow.proto.IqaParsingResults)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .autodrive.workflow.proto.IqaParsing iqa_parsing_result_data = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->iqa_parsing_result_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->iqa_parsing_result_data(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IqaParsingResults::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:autodrive.workflow.proto.IqaParsingResults)
  GOOGLE_DCHECK_NE(&from, this);
  const IqaParsingResults* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IqaParsingResults>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:autodrive.workflow.proto.IqaParsingResults)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:autodrive.workflow.proto.IqaParsingResults)
    MergeFrom(*source);
  }
}

void IqaParsingResults::MergeFrom(const IqaParsingResults& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:autodrive.workflow.proto.IqaParsingResults)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  iqa_parsing_result_data_.MergeFrom(from.iqa_parsing_result_data_);
}

void IqaParsingResults::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:autodrive.workflow.proto.IqaParsingResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IqaParsingResults::CopyFrom(const IqaParsingResults& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autodrive.workflow.proto.IqaParsingResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IqaParsingResults::IsInitialized() const {
  return true;
}

void IqaParsingResults::Swap(IqaParsingResults* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IqaParsingResults::InternalSwap(IqaParsingResults* other) {
  using std::swap;
  iqa_parsing_result_data_.InternalSwap(&other->iqa_parsing_result_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IqaParsingResults::GetMetadata() const {
  protobuf_iqa_5fparsing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iqa_5fparsing_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IqaParsingMsg::InitAsDefaultInstance() {
  ::autodrive::workflow::proto::_IqaParsingMsg_default_instance_._instance.get_mutable()->header_ = const_cast< ::autodrive::workflow::proto::MsgHeader*>(
      ::autodrive::workflow::proto::MsgHeader::internal_default_instance());
  ::autodrive::workflow::proto::_IqaParsingMsg_default_instance_._instance.get_mutable()->error_ = const_cast< ::autodrive::workflow::proto::Error*>(
      ::autodrive::workflow::proto::Error::internal_default_instance());
  ::autodrive::workflow::proto::_IqaParsingMsg_default_instance_._instance.get_mutable()->iqa_parsing_data_ = const_cast< ::autodrive::workflow::proto::IqaParsingResults*>(
      ::autodrive::workflow::proto::IqaParsingResults::internal_default_instance());
  ::autodrive::workflow::proto::_IqaParsingMsg_default_instance_._instance.get_mutable()->scene_parsing_data_ = const_cast< ::autodrive::workflow::proto::SceneParsingResults*>(
      ::autodrive::workflow::proto::SceneParsingResults::internal_default_instance());
}
void IqaParsingMsg::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void IqaParsingMsg::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IqaParsingMsg::kHeaderFieldNumber;
const int IqaParsingMsg::kErrorFieldNumber;
const int IqaParsingMsg::kIqaParsingDataFieldNumber;
const int IqaParsingMsg::kSceneParsingDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IqaParsingMsg::IqaParsingMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_iqa_5fparsing_2eproto::InitDefaultsIqaParsingMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:autodrive.workflow.proto.IqaParsingMsg)
}
IqaParsingMsg::IqaParsingMsg(const IqaParsingMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::autodrive::workflow::proto::MsgHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_error()) {
    error_ = new ::autodrive::workflow::proto::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  if (from.has_iqa_parsing_data()) {
    iqa_parsing_data_ = new ::autodrive::workflow::proto::IqaParsingResults(*from.iqa_parsing_data_);
  } else {
    iqa_parsing_data_ = NULL;
  }
  if (from.has_scene_parsing_data()) {
    scene_parsing_data_ = new ::autodrive::workflow::proto::SceneParsingResults(*from.scene_parsing_data_);
  } else {
    scene_parsing_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:autodrive.workflow.proto.IqaParsingMsg)
}

void IqaParsingMsg::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_parsing_data_) -
      reinterpret_cast<char*>(&header_)) + sizeof(scene_parsing_data_));
  _cached_size_ = 0;
}

IqaParsingMsg::~IqaParsingMsg() {
  // @@protoc_insertion_point(destructor:autodrive.workflow.proto.IqaParsingMsg)
  SharedDtor();
}

void IqaParsingMsg::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete error_;
  if (this != internal_default_instance()) delete iqa_parsing_data_;
  if (this != internal_default_instance()) delete scene_parsing_data_;
}

void IqaParsingMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IqaParsingMsg::descriptor() {
  ::protobuf_iqa_5fparsing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iqa_5fparsing_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IqaParsingMsg& IqaParsingMsg::default_instance() {
  ::protobuf_iqa_5fparsing_2eproto::InitDefaultsIqaParsingMsg();
  return *internal_default_instance();
}

IqaParsingMsg* IqaParsingMsg::New(::google::protobuf::Arena* arena) const {
  IqaParsingMsg* n = new IqaParsingMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IqaParsingMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:autodrive.workflow.proto.IqaParsingMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  if (GetArenaNoVirtual() == NULL && iqa_parsing_data_ != NULL) {
    delete iqa_parsing_data_;
  }
  iqa_parsing_data_ = NULL;
  if (GetArenaNoVirtual() == NULL && scene_parsing_data_ != NULL) {
    delete scene_parsing_data_;
  }
  scene_parsing_data_ = NULL;
  _internal_metadata_.Clear();
}

bool IqaParsingMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:autodrive.workflow.proto.IqaParsingMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .autodrive.workflow.proto.MsgHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.Error error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.IqaParsingResults iqa_parsing_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_iqa_parsing_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.SceneParsingResults scene_parsing_data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scene_parsing_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:autodrive.workflow.proto.IqaParsingMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:autodrive.workflow.proto.IqaParsingMsg)
  return false;
#undef DO_
}

void IqaParsingMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:autodrive.workflow.proto.IqaParsingMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .autodrive.workflow.proto.MsgHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // .autodrive.workflow.proto.Error error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  // .autodrive.workflow.proto.IqaParsingResults iqa_parsing_data = 3;
  if (this->has_iqa_parsing_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->iqa_parsing_data_, output);
  }

  // .autodrive.workflow.proto.SceneParsingResults scene_parsing_data = 4;
  if (this->has_scene_parsing_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->scene_parsing_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:autodrive.workflow.proto.IqaParsingMsg)
}

::google::protobuf::uint8* IqaParsingMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:autodrive.workflow.proto.IqaParsingMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .autodrive.workflow.proto.MsgHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // .autodrive.workflow.proto.Error error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->error_, deterministic, target);
  }

  // .autodrive.workflow.proto.IqaParsingResults iqa_parsing_data = 3;
  if (this->has_iqa_parsing_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->iqa_parsing_data_, deterministic, target);
  }

  // .autodrive.workflow.proto.SceneParsingResults scene_parsing_data = 4;
  if (this->has_scene_parsing_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->scene_parsing_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autodrive.workflow.proto.IqaParsingMsg)
  return target;
}

size_t IqaParsingMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autodrive.workflow.proto.IqaParsingMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .autodrive.workflow.proto.MsgHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // .autodrive.workflow.proto.Error error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->error_);
  }

  // .autodrive.workflow.proto.IqaParsingResults iqa_parsing_data = 3;
  if (this->has_iqa_parsing_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->iqa_parsing_data_);
  }

  // .autodrive.workflow.proto.SceneParsingResults scene_parsing_data = 4;
  if (this->has_scene_parsing_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->scene_parsing_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IqaParsingMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:autodrive.workflow.proto.IqaParsingMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const IqaParsingMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IqaParsingMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:autodrive.workflow.proto.IqaParsingMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:autodrive.workflow.proto.IqaParsingMsg)
    MergeFrom(*source);
  }
}

void IqaParsingMsg::MergeFrom(const IqaParsingMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:autodrive.workflow.proto.IqaParsingMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::autodrive::workflow::proto::MsgHeader::MergeFrom(from.header());
  }
  if (from.has_error()) {
    mutable_error()->::autodrive::workflow::proto::Error::MergeFrom(from.error());
  }
  if (from.has_iqa_parsing_data()) {
    mutable_iqa_parsing_data()->::autodrive::workflow::proto::IqaParsingResults::MergeFrom(from.iqa_parsing_data());
  }
  if (from.has_scene_parsing_data()) {
    mutable_scene_parsing_data()->::autodrive::workflow::proto::SceneParsingResults::MergeFrom(from.scene_parsing_data());
  }
}

void IqaParsingMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:autodrive.workflow.proto.IqaParsingMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IqaParsingMsg::CopyFrom(const IqaParsingMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autodrive.workflow.proto.IqaParsingMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IqaParsingMsg::IsInitialized() const {
  return true;
}

void IqaParsingMsg::Swap(IqaParsingMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IqaParsingMsg::InternalSwap(IqaParsingMsg* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(error_, other->error_);
  swap(iqa_parsing_data_, other->iqa_parsing_data_);
  swap(scene_parsing_data_, other->scene_parsing_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IqaParsingMsg::GetMetadata() const {
  protobuf_iqa_5fparsing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iqa_5fparsing_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace workflow
}  // namespace autodrive

// @@protoc_insertion_point(global_scope)
