// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: uss_base.proto

#include "uss_base.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace autodrive {
namespace workflow {
namespace proto {
class PerFusUssHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PerFusUssHeader>
      _instance;
} _PerFusUssHeader_default_instance_;
class UssPointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UssPoint>
      _instance;
} _UssPoint_default_instance_;
class StateMachineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StateMachine>
      _instance;
} _StateMachine_default_instance_;
}  // namespace proto
}  // namespace workflow
}  // namespace autodrive
namespace protobuf_uss_5fbase_2eproto {
void InitDefaultsPerFusUssHeaderImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::autodrive::workflow::proto::_PerFusUssHeader_default_instance_;
    new (ptr) ::autodrive::workflow::proto::PerFusUssHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::autodrive::workflow::proto::PerFusUssHeader::InitAsDefaultInstance();
}

void InitDefaultsPerFusUssHeader() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPerFusUssHeaderImpl);
}

void InitDefaultsUssPointImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::autodrive::workflow::proto::_UssPoint_default_instance_;
    new (ptr) ::autodrive::workflow::proto::UssPoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::autodrive::workflow::proto::UssPoint::InitAsDefaultInstance();
}

void InitDefaultsUssPoint() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUssPointImpl);
}

void InitDefaultsStateMachineImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::autodrive::workflow::proto::_StateMachine_default_instance_;
    new (ptr) ::autodrive::workflow::proto::StateMachine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::autodrive::workflow::proto::StateMachine::InitAsDefaultInstance();
}

void InitDefaultsStateMachine() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStateMachineImpl);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssHeader, mcu_send_stamp_si64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssHeader, mcu_send_wave_stamp_si64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssHeader, mesa_group_tx_mask_ui16_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssHeader, mesa_group_rx_mask_ui16_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssHeader, uss_header_group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssHeader, uss_header_freq_mode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssPoint, x_si32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssPoint, y_si32_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::StateMachine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::StateMachine, plv_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::StateMachine, psu_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::StateMachine, odo_state_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::autodrive::workflow::proto::PerFusUssHeader)},
  { 11, -1, sizeof(::autodrive::workflow::proto::UssPoint)},
  { 18, -1, sizeof(::autodrive::workflow::proto::StateMachine)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::autodrive::workflow::proto::_PerFusUssHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::autodrive::workflow::proto::_UssPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::autodrive::workflow::proto::_StateMachine_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "uss_base.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016uss_base.proto\022\030autodrive.workflow.pro"
      "to\"\241\002\n\017PerFusUssHeader\022\033\n\023mcu_send_stamp"
      "_si64\030\001 \001(\003\022 \n\030mcu_send_wave_stamp_si64\030"
      "\002 \001(\003\022\037\n\027mesa_group_tx_mask_ui16\030\003 \001(\r\022\037"
      "\n\027mesa_group_rx_mask_ui16\030\004 \001(\r\022I\n\023uss_h"
      "eader_group_id\030\005 \001(\0162,.autodrive.workflo"
      "w.proto.UssHeaderGroupIdEn\022B\n\024uss_header"
      "_freq_mode\030\006 \001(\0162$.autodrive.workflow.pr"
      "oto.FreqModeEn\"*\n\010UssPoint\022\016\n\006x_si32\030\001 \001"
      "(\005\022\016\n\006y_si32\030\002 \001(\005\"\263\001\n\014StateMachine\0225\n\tp"
      "lv_state\030\001 \001(\0162\".autodrive.workflow.prot"
      "o.PlvState\0225\n\tpsu_state\030\002 \001(\0162\".autodriv"
      "e.workflow.proto.PsuState\0225\n\todo_state\030\003"
      " \001(\0162\".autodrive.workflow.proto.OdoState"
      "*\266\001\n\022UssHeaderGroupIdEn\022\033\n\027kUssHeaderGro"
      "upIdEnNone\020\000\022\030\n\024kUssHeaderGroupIdEn1\020\001\022\030"
      "\n\024kUssHeaderGroupIdEn2\020\002\022\030\n\024kUssHeaderGr"
      "oupIdEn3\020\003\022\030\n\024kUssHeaderGroupIdEn4\020\004\022\033\n\026"
      "kUssHeaderGroupIdEnMax\020\377\001*b\n\nFreqModeEn\022"
      "\023\n\017kFreqModeEnNone\020\000\022\024\n\020kFreqModeEnFixed"
      "\020\001\022\024\n\020kFreqModeEnChirp\020\002\022\023\n\016kFreqModeEnM"
      "ax\020\377\001*W\n\010PlvState\022\021\n\rkPlvStateNone\020\000\022\020\n\014"
      "kPlvStateOff\020\001\022\023\n\017kPlvStateActive\020\002\022\021\n\014k"
      "PlvStateMax\020\377\001*p\n\010PsuState\022\021\n\rkPsuStateN"
      "one\020\000\022\020\n\014kPsuStateOff\020\001\022\025\n\021kPsuStatePiAc"
      "tive\020\002\022\025\n\021kPsuStatePoActive\020\003\022\021\n\014kPsuSta"
      "teMax\020\377\001*t\n\010OdoState\022\021\n\rkOdoStateNone\020\000\022"
      "\022\n\016kOdoStateReset\020\001\022\023\n\017kOdoStateActive\020\002"
      "\022\031\n\025kOdoStateResetSuccess\020\003\022\021\n\014kOdoState"
      "Max\020\377\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1174);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "uss_base.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_uss_5fbase_2eproto
namespace autodrive {
namespace workflow {
namespace proto {
const ::google::protobuf::EnumDescriptor* UssHeaderGroupIdEn_descriptor() {
  protobuf_uss_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_uss_5fbase_2eproto::file_level_enum_descriptors[0];
}
bool UssHeaderGroupIdEn_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 255:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FreqModeEn_descriptor() {
  protobuf_uss_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_uss_5fbase_2eproto::file_level_enum_descriptors[1];
}
bool FreqModeEn_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 255:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PlvState_descriptor() {
  protobuf_uss_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_uss_5fbase_2eproto::file_level_enum_descriptors[2];
}
bool PlvState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 255:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PsuState_descriptor() {
  protobuf_uss_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_uss_5fbase_2eproto::file_level_enum_descriptors[3];
}
bool PsuState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 255:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* OdoState_descriptor() {
  protobuf_uss_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_uss_5fbase_2eproto::file_level_enum_descriptors[4];
}
bool OdoState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 255:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PerFusUssHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PerFusUssHeader::kMcuSendStampSi64FieldNumber;
const int PerFusUssHeader::kMcuSendWaveStampSi64FieldNumber;
const int PerFusUssHeader::kMesaGroupTxMaskUi16FieldNumber;
const int PerFusUssHeader::kMesaGroupRxMaskUi16FieldNumber;
const int PerFusUssHeader::kUssHeaderGroupIdFieldNumber;
const int PerFusUssHeader::kUssHeaderFreqModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PerFusUssHeader::PerFusUssHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_uss_5fbase_2eproto::InitDefaultsPerFusUssHeader();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:autodrive.workflow.proto.PerFusUssHeader)
}
PerFusUssHeader::PerFusUssHeader(const PerFusUssHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mcu_send_stamp_si64_, &from.mcu_send_stamp_si64_,
    static_cast<size_t>(reinterpret_cast<char*>(&uss_header_freq_mode_) -
    reinterpret_cast<char*>(&mcu_send_stamp_si64_)) + sizeof(uss_header_freq_mode_));
  // @@protoc_insertion_point(copy_constructor:autodrive.workflow.proto.PerFusUssHeader)
}

void PerFusUssHeader::SharedCtor() {
  ::memset(&mcu_send_stamp_si64_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uss_header_freq_mode_) -
      reinterpret_cast<char*>(&mcu_send_stamp_si64_)) + sizeof(uss_header_freq_mode_));
  _cached_size_ = 0;
}

PerFusUssHeader::~PerFusUssHeader() {
  // @@protoc_insertion_point(destructor:autodrive.workflow.proto.PerFusUssHeader)
  SharedDtor();
}

void PerFusUssHeader::SharedDtor() {
}

void PerFusUssHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PerFusUssHeader::descriptor() {
  ::protobuf_uss_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uss_5fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PerFusUssHeader& PerFusUssHeader::default_instance() {
  ::protobuf_uss_5fbase_2eproto::InitDefaultsPerFusUssHeader();
  return *internal_default_instance();
}

PerFusUssHeader* PerFusUssHeader::New(::google::protobuf::Arena* arena) const {
  PerFusUssHeader* n = new PerFusUssHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PerFusUssHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:autodrive.workflow.proto.PerFusUssHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mcu_send_stamp_si64_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uss_header_freq_mode_) -
      reinterpret_cast<char*>(&mcu_send_stamp_si64_)) + sizeof(uss_header_freq_mode_));
  _internal_metadata_.Clear();
}

bool PerFusUssHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:autodrive.workflow.proto.PerFusUssHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 mcu_send_stamp_si64 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mcu_send_stamp_si64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 mcu_send_wave_stamp_si64 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mcu_send_wave_stamp_si64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mesa_group_tx_mask_ui16 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mesa_group_tx_mask_ui16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mesa_group_rx_mask_ui16 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mesa_group_rx_mask_ui16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssHeaderGroupIdEn uss_header_group_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_uss_header_group_id(static_cast< ::autodrive::workflow::proto::UssHeaderGroupIdEn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.FreqModeEn uss_header_freq_mode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_uss_header_freq_mode(static_cast< ::autodrive::workflow::proto::FreqModeEn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:autodrive.workflow.proto.PerFusUssHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:autodrive.workflow.proto.PerFusUssHeader)
  return false;
#undef DO_
}

void PerFusUssHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:autodrive.workflow.proto.PerFusUssHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 mcu_send_stamp_si64 = 1;
  if (this->mcu_send_stamp_si64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->mcu_send_stamp_si64(), output);
  }

  // int64 mcu_send_wave_stamp_si64 = 2;
  if (this->mcu_send_wave_stamp_si64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->mcu_send_wave_stamp_si64(), output);
  }

  // uint32 mesa_group_tx_mask_ui16 = 3;
  if (this->mesa_group_tx_mask_ui16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->mesa_group_tx_mask_ui16(), output);
  }

  // uint32 mesa_group_rx_mask_ui16 = 4;
  if (this->mesa_group_rx_mask_ui16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->mesa_group_rx_mask_ui16(), output);
  }

  // .autodrive.workflow.proto.UssHeaderGroupIdEn uss_header_group_id = 5;
  if (this->uss_header_group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->uss_header_group_id(), output);
  }

  // .autodrive.workflow.proto.FreqModeEn uss_header_freq_mode = 6;
  if (this->uss_header_freq_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->uss_header_freq_mode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:autodrive.workflow.proto.PerFusUssHeader)
}

::google::protobuf::uint8* PerFusUssHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:autodrive.workflow.proto.PerFusUssHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 mcu_send_stamp_si64 = 1;
  if (this->mcu_send_stamp_si64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->mcu_send_stamp_si64(), target);
  }

  // int64 mcu_send_wave_stamp_si64 = 2;
  if (this->mcu_send_wave_stamp_si64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->mcu_send_wave_stamp_si64(), target);
  }

  // uint32 mesa_group_tx_mask_ui16 = 3;
  if (this->mesa_group_tx_mask_ui16() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->mesa_group_tx_mask_ui16(), target);
  }

  // uint32 mesa_group_rx_mask_ui16 = 4;
  if (this->mesa_group_rx_mask_ui16() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->mesa_group_rx_mask_ui16(), target);
  }

  // .autodrive.workflow.proto.UssHeaderGroupIdEn uss_header_group_id = 5;
  if (this->uss_header_group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->uss_header_group_id(), target);
  }

  // .autodrive.workflow.proto.FreqModeEn uss_header_freq_mode = 6;
  if (this->uss_header_freq_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->uss_header_freq_mode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autodrive.workflow.proto.PerFusUssHeader)
  return target;
}

size_t PerFusUssHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autodrive.workflow.proto.PerFusUssHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 mcu_send_stamp_si64 = 1;
  if (this->mcu_send_stamp_si64() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->mcu_send_stamp_si64());
  }

  // int64 mcu_send_wave_stamp_si64 = 2;
  if (this->mcu_send_wave_stamp_si64() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->mcu_send_wave_stamp_si64());
  }

  // uint32 mesa_group_tx_mask_ui16 = 3;
  if (this->mesa_group_tx_mask_ui16() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mesa_group_tx_mask_ui16());
  }

  // uint32 mesa_group_rx_mask_ui16 = 4;
  if (this->mesa_group_rx_mask_ui16() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mesa_group_rx_mask_ui16());
  }

  // .autodrive.workflow.proto.UssHeaderGroupIdEn uss_header_group_id = 5;
  if (this->uss_header_group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->uss_header_group_id());
  }

  // .autodrive.workflow.proto.FreqModeEn uss_header_freq_mode = 6;
  if (this->uss_header_freq_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->uss_header_freq_mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PerFusUssHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:autodrive.workflow.proto.PerFusUssHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const PerFusUssHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PerFusUssHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:autodrive.workflow.proto.PerFusUssHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:autodrive.workflow.proto.PerFusUssHeader)
    MergeFrom(*source);
  }
}

void PerFusUssHeader::MergeFrom(const PerFusUssHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:autodrive.workflow.proto.PerFusUssHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mcu_send_stamp_si64() != 0) {
    set_mcu_send_stamp_si64(from.mcu_send_stamp_si64());
  }
  if (from.mcu_send_wave_stamp_si64() != 0) {
    set_mcu_send_wave_stamp_si64(from.mcu_send_wave_stamp_si64());
  }
  if (from.mesa_group_tx_mask_ui16() != 0) {
    set_mesa_group_tx_mask_ui16(from.mesa_group_tx_mask_ui16());
  }
  if (from.mesa_group_rx_mask_ui16() != 0) {
    set_mesa_group_rx_mask_ui16(from.mesa_group_rx_mask_ui16());
  }
  if (from.uss_header_group_id() != 0) {
    set_uss_header_group_id(from.uss_header_group_id());
  }
  if (from.uss_header_freq_mode() != 0) {
    set_uss_header_freq_mode(from.uss_header_freq_mode());
  }
}

void PerFusUssHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:autodrive.workflow.proto.PerFusUssHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PerFusUssHeader::CopyFrom(const PerFusUssHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autodrive.workflow.proto.PerFusUssHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerFusUssHeader::IsInitialized() const {
  return true;
}

void PerFusUssHeader::Swap(PerFusUssHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PerFusUssHeader::InternalSwap(PerFusUssHeader* other) {
  using std::swap;
  swap(mcu_send_stamp_si64_, other->mcu_send_stamp_si64_);
  swap(mcu_send_wave_stamp_si64_, other->mcu_send_wave_stamp_si64_);
  swap(mesa_group_tx_mask_ui16_, other->mesa_group_tx_mask_ui16_);
  swap(mesa_group_rx_mask_ui16_, other->mesa_group_rx_mask_ui16_);
  swap(uss_header_group_id_, other->uss_header_group_id_);
  swap(uss_header_freq_mode_, other->uss_header_freq_mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PerFusUssHeader::GetMetadata() const {
  protobuf_uss_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uss_5fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UssPoint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UssPoint::kXSi32FieldNumber;
const int UssPoint::kYSi32FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UssPoint::UssPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_uss_5fbase_2eproto::InitDefaultsUssPoint();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:autodrive.workflow.proto.UssPoint)
}
UssPoint::UssPoint(const UssPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_si32_, &from.x_si32_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_si32_) -
    reinterpret_cast<char*>(&x_si32_)) + sizeof(y_si32_));
  // @@protoc_insertion_point(copy_constructor:autodrive.workflow.proto.UssPoint)
}

void UssPoint::SharedCtor() {
  ::memset(&x_si32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_si32_) -
      reinterpret_cast<char*>(&x_si32_)) + sizeof(y_si32_));
  _cached_size_ = 0;
}

UssPoint::~UssPoint() {
  // @@protoc_insertion_point(destructor:autodrive.workflow.proto.UssPoint)
  SharedDtor();
}

void UssPoint::SharedDtor() {
}

void UssPoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UssPoint::descriptor() {
  ::protobuf_uss_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uss_5fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UssPoint& UssPoint::default_instance() {
  ::protobuf_uss_5fbase_2eproto::InitDefaultsUssPoint();
  return *internal_default_instance();
}

UssPoint* UssPoint::New(::google::protobuf::Arena* arena) const {
  UssPoint* n = new UssPoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UssPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:autodrive.workflow.proto.UssPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_si32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_si32_) -
      reinterpret_cast<char*>(&x_si32_)) + sizeof(y_si32_));
  _internal_metadata_.Clear();
}

bool UssPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:autodrive.workflow.proto.UssPoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 x_si32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_si32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y_si32 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_si32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:autodrive.workflow.proto.UssPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:autodrive.workflow.proto.UssPoint)
  return false;
#undef DO_
}

void UssPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:autodrive.workflow.proto.UssPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x_si32 = 1;
  if (this->x_si32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x_si32(), output);
  }

  // int32 y_si32 = 2;
  if (this->y_si32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y_si32(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:autodrive.workflow.proto.UssPoint)
}

::google::protobuf::uint8* UssPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:autodrive.workflow.proto.UssPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x_si32 = 1;
  if (this->x_si32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x_si32(), target);
  }

  // int32 y_si32 = 2;
  if (this->y_si32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y_si32(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autodrive.workflow.proto.UssPoint)
  return target;
}

size_t UssPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autodrive.workflow.proto.UssPoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 x_si32 = 1;
  if (this->x_si32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x_si32());
  }

  // int32 y_si32 = 2;
  if (this->y_si32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y_si32());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UssPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:autodrive.workflow.proto.UssPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const UssPoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UssPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:autodrive.workflow.proto.UssPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:autodrive.workflow.proto.UssPoint)
    MergeFrom(*source);
  }
}

void UssPoint::MergeFrom(const UssPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:autodrive.workflow.proto.UssPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x_si32() != 0) {
    set_x_si32(from.x_si32());
  }
  if (from.y_si32() != 0) {
    set_y_si32(from.y_si32());
  }
}

void UssPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:autodrive.workflow.proto.UssPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UssPoint::CopyFrom(const UssPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autodrive.workflow.proto.UssPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UssPoint::IsInitialized() const {
  return true;
}

void UssPoint::Swap(UssPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UssPoint::InternalSwap(UssPoint* other) {
  using std::swap;
  swap(x_si32_, other->x_si32_);
  swap(y_si32_, other->y_si32_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UssPoint::GetMetadata() const {
  protobuf_uss_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uss_5fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StateMachine::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StateMachine::kPlvStateFieldNumber;
const int StateMachine::kPsuStateFieldNumber;
const int StateMachine::kOdoStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateMachine::StateMachine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_uss_5fbase_2eproto::InitDefaultsStateMachine();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:autodrive.workflow.proto.StateMachine)
}
StateMachine::StateMachine(const StateMachine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&plv_state_, &from.plv_state_,
    static_cast<size_t>(reinterpret_cast<char*>(&odo_state_) -
    reinterpret_cast<char*>(&plv_state_)) + sizeof(odo_state_));
  // @@protoc_insertion_point(copy_constructor:autodrive.workflow.proto.StateMachine)
}

void StateMachine::SharedCtor() {
  ::memset(&plv_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&odo_state_) -
      reinterpret_cast<char*>(&plv_state_)) + sizeof(odo_state_));
  _cached_size_ = 0;
}

StateMachine::~StateMachine() {
  // @@protoc_insertion_point(destructor:autodrive.workflow.proto.StateMachine)
  SharedDtor();
}

void StateMachine::SharedDtor() {
}

void StateMachine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StateMachine::descriptor() {
  ::protobuf_uss_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uss_5fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StateMachine& StateMachine::default_instance() {
  ::protobuf_uss_5fbase_2eproto::InitDefaultsStateMachine();
  return *internal_default_instance();
}

StateMachine* StateMachine::New(::google::protobuf::Arena* arena) const {
  StateMachine* n = new StateMachine;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StateMachine::Clear() {
// @@protoc_insertion_point(message_clear_start:autodrive.workflow.proto.StateMachine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&plv_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&odo_state_) -
      reinterpret_cast<char*>(&plv_state_)) + sizeof(odo_state_));
  _internal_metadata_.Clear();
}

bool StateMachine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:autodrive.workflow.proto.StateMachine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .autodrive.workflow.proto.PlvState plv_state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_plv_state(static_cast< ::autodrive::workflow::proto::PlvState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.PsuState psu_state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_psu_state(static_cast< ::autodrive::workflow::proto::PsuState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.OdoState odo_state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_odo_state(static_cast< ::autodrive::workflow::proto::OdoState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:autodrive.workflow.proto.StateMachine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:autodrive.workflow.proto.StateMachine)
  return false;
#undef DO_
}

void StateMachine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:autodrive.workflow.proto.StateMachine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .autodrive.workflow.proto.PlvState plv_state = 1;
  if (this->plv_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->plv_state(), output);
  }

  // .autodrive.workflow.proto.PsuState psu_state = 2;
  if (this->psu_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->psu_state(), output);
  }

  // .autodrive.workflow.proto.OdoState odo_state = 3;
  if (this->odo_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->odo_state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:autodrive.workflow.proto.StateMachine)
}

::google::protobuf::uint8* StateMachine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:autodrive.workflow.proto.StateMachine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .autodrive.workflow.proto.PlvState plv_state = 1;
  if (this->plv_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->plv_state(), target);
  }

  // .autodrive.workflow.proto.PsuState psu_state = 2;
  if (this->psu_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->psu_state(), target);
  }

  // .autodrive.workflow.proto.OdoState odo_state = 3;
  if (this->odo_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->odo_state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autodrive.workflow.proto.StateMachine)
  return target;
}

size_t StateMachine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autodrive.workflow.proto.StateMachine)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .autodrive.workflow.proto.PlvState plv_state = 1;
  if (this->plv_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->plv_state());
  }

  // .autodrive.workflow.proto.PsuState psu_state = 2;
  if (this->psu_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->psu_state());
  }

  // .autodrive.workflow.proto.OdoState odo_state = 3;
  if (this->odo_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->odo_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StateMachine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:autodrive.workflow.proto.StateMachine)
  GOOGLE_DCHECK_NE(&from, this);
  const StateMachine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StateMachine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:autodrive.workflow.proto.StateMachine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:autodrive.workflow.proto.StateMachine)
    MergeFrom(*source);
  }
}

void StateMachine::MergeFrom(const StateMachine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:autodrive.workflow.proto.StateMachine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.plv_state() != 0) {
    set_plv_state(from.plv_state());
  }
  if (from.psu_state() != 0) {
    set_psu_state(from.psu_state());
  }
  if (from.odo_state() != 0) {
    set_odo_state(from.odo_state());
  }
}

void StateMachine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:autodrive.workflow.proto.StateMachine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateMachine::CopyFrom(const StateMachine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autodrive.workflow.proto.StateMachine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateMachine::IsInitialized() const {
  return true;
}

void StateMachine::Swap(StateMachine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateMachine::InternalSwap(StateMachine* other) {
  using std::swap;
  swap(plv_state_, other->plv_state_);
  swap(psu_state_, other->psu_state_);
  swap(odo_state_, other->odo_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StateMachine::GetMetadata() const {
  protobuf_uss_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uss_5fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace workflow
}  // namespace autodrive

// @@protoc_insertion_point(global_scope)
