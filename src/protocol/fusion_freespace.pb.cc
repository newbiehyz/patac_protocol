// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fusion_freespace.proto

#include "fusion_freespace.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace autodrive {
namespace workflow {
namespace proto {
class FusionFreespacePointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FusionFreespacePoint>
      _instance;
} _FusionFreespacePoint_default_instance_;
class FreespaceFusionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FreespaceFusion>
      _instance;
} _FreespaceFusion_default_instance_;
class FreespaceFusionMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FreespaceFusionMsg>
      _instance;
} _FreespaceFusionMsg_default_instance_;
}  // namespace proto
}  // namespace workflow
}  // namespace autodrive
namespace protobuf_fusion_5ffreespace_2eproto {
void InitDefaultsFusionFreespacePointImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_basic_2eproto::InitDefaultsVector2f();
  {
    void* ptr = &::autodrive::workflow::proto::_FusionFreespacePoint_default_instance_;
    new (ptr) ::autodrive::workflow::proto::FusionFreespacePoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::autodrive::workflow::proto::FusionFreespacePoint::InitAsDefaultInstance();
}

void InitDefaultsFusionFreespacePoint() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFusionFreespacePointImpl);
}

void InitDefaultsFreespaceFusionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_fusion_5ffreespace_2eproto::InitDefaultsFusionFreespacePoint();
  {
    void* ptr = &::autodrive::workflow::proto::_FreespaceFusion_default_instance_;
    new (ptr) ::autodrive::workflow::proto::FreespaceFusion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::autodrive::workflow::proto::FreespaceFusion::InitAsDefaultInstance();
}

void InitDefaultsFreespaceFusion() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFreespaceFusionImpl);
}

void InitDefaultsFreespaceFusionMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2eproto::InitDefaultsMsgHeader();
  protobuf_common_2eproto::InitDefaultsError();
  protobuf_fusion_5ffreespace_2eproto::InitDefaultsFreespaceFusion();
  {
    void* ptr = &::autodrive::workflow::proto::_FreespaceFusionMsg_default_instance_;
    new (ptr) ::autodrive::workflow::proto::FreespaceFusionMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::autodrive::workflow::proto::FreespaceFusionMsg::InitAsDefaultInstance();
}

void InitDefaultsFreespaceFusionMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFreespaceFusionMsgImpl);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::FusionFreespacePoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::FusionFreespacePoint, conf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::FusionFreespacePoint, angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::FusionFreespacePoint, ray_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::FusionFreespacePoint, origin_label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::FusionFreespacePoint, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::FusionFreespacePoint, pt_vcs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::FusionFreespacePoint, vel_vcs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::FusionFreespacePoint, pt_world_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::FusionFreespacePoint, vel_world_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::FreespaceFusion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::FreespaceFusion, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::FreespaceFusion, freespace_points_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::FreespaceFusionMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::FreespaceFusionMsg, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::FreespaceFusionMsg, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::FreespaceFusionMsg, fusion_freespace_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::autodrive::workflow::proto::FusionFreespacePoint)},
  { 14, -1, sizeof(::autodrive::workflow::proto::FreespaceFusion)},
  { 21, -1, sizeof(::autodrive::workflow::proto::FreespaceFusionMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::autodrive::workflow::proto::_FusionFreespacePoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::autodrive::workflow::proto::_FreespaceFusion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::autodrive::workflow::proto::_FreespaceFusionMsg_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "fusion_freespace.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026fusion_freespace.proto\022\030autodrive.work"
      "flow.proto\032\013basic.proto\032\014common.proto\"\361\002"
      "\n\024FusionFreespacePoint\022\014\n\004conf\030\001 \001(\002\022\r\n\005"
      "angle\030\002 \001(\002\022\022\n\nray_length\030\003 \001(\002\022\024\n\014origi"
      "n_label\030\004 \001(\r\022<\n\005label\030\005 \001(\0162-.autodrive"
      ".workflow.proto.FreespacePointLabel\0222\n\006p"
      "t_vcs\030\006 \001(\0132\".autodrive.workflow.proto.V"
      "ector2f\0223\n\007vel_vcs\030\007 \001(\0132\".autodrive.wor"
      "kflow.proto.Vector2f\0224\n\010pt_world\030\010 \001(\0132\""
      ".autodrive.workflow.proto.Vector2f\0225\n\tve"
      "l_world\030\t \001(\0132\".autodrive.workflow.proto"
      ".Vector2f\"n\n\017FreespaceFusion\022\021\n\ttimestam"
      "p\030\001 \001(\003\022H\n\020freespace_points\030\002 \003(\0132..auto"
      "drive.workflow.proto.FusionFreespacePoin"
      "t\"\276\001\n\022FreespaceFusionMsg\0223\n\006header\030\001 \001(\013"
      "2#.autodrive.workflow.proto.MsgHeader\022.\n"
      "\005error\030\002 \001(\0132\037.autodrive.workflow.proto."
      "Error\022C\n\020fusion_freespace\030\003 \001(\0132).autodr"
      "ive.workflow.proto.FreespaceFusion*\204\005\n\023F"
      "reespacePointLabel\022\034\n\030kFreespacePointLab"
      "elRoad\020\000\022\'\n#kFreespacePointLabelParkingL"
      "ockOpen\020\013\022)\n%kFreespacePointLabelParking"
      "LockClosed\020\014\022#\n\037kFreespacePointLabelTraf"
      "ficCone\020\r\022\"\n\036kFreespacePointLabelParking"
      "Rod\020\016\022\034\n\030kFreespacePointLabelCurb\020\017\022$\n k"
      "FreespacePointLabelCementColumn\020\020\022)\n%kFr"
      "eespacePointLabelImmovableObstacle\020\021\022\'\n#"
      "kFreespacePointLabelMovableObstacle\020\022\022\"\n"
      "\036kFreespacePointLabelBackground\020\023\022 \n\034kFr"
      "eespacePointLabelSidewalk\020\024\022\"\n\036kFreespac"
      "ePointLabelPedestrian\020\025\022\'\n#kFreespacePoi"
      "ntLabelDynamicObstacle\020\026\022\036\n\032kFreespacePo"
      "intLabelUssObj\020\033\022%\n!kFreespacePointLabel"
      "UssCrossPoint\020\034\022\036\n\032kFreespacePointLabelU"
      "nknwn\020d\022 \n\033kFreespacePointLabelInvalid\020\377"
      "\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1409);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "fusion_freespace.proto", &protobuf_RegisterTypes);
  ::protobuf_basic_2eproto::AddDescriptors();
  ::protobuf_common_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_fusion_5ffreespace_2eproto
namespace autodrive {
namespace workflow {
namespace proto {
const ::google::protobuf::EnumDescriptor* FreespacePointLabel_descriptor() {
  protobuf_fusion_5ffreespace_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fusion_5ffreespace_2eproto::file_level_enum_descriptors[0];
}
bool FreespacePointLabel_IsValid(int value) {
  switch (value) {
    case 0:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 27:
    case 28:
    case 100:
    case 255:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void FusionFreespacePoint::InitAsDefaultInstance() {
  ::autodrive::workflow::proto::_FusionFreespacePoint_default_instance_._instance.get_mutable()->pt_vcs_ = const_cast< ::autodrive::workflow::proto::Vector2f*>(
      ::autodrive::workflow::proto::Vector2f::internal_default_instance());
  ::autodrive::workflow::proto::_FusionFreespacePoint_default_instance_._instance.get_mutable()->vel_vcs_ = const_cast< ::autodrive::workflow::proto::Vector2f*>(
      ::autodrive::workflow::proto::Vector2f::internal_default_instance());
  ::autodrive::workflow::proto::_FusionFreespacePoint_default_instance_._instance.get_mutable()->pt_world_ = const_cast< ::autodrive::workflow::proto::Vector2f*>(
      ::autodrive::workflow::proto::Vector2f::internal_default_instance());
  ::autodrive::workflow::proto::_FusionFreespacePoint_default_instance_._instance.get_mutable()->vel_world_ = const_cast< ::autodrive::workflow::proto::Vector2f*>(
      ::autodrive::workflow::proto::Vector2f::internal_default_instance());
}
void FusionFreespacePoint::clear_pt_vcs() {
  if (GetArenaNoVirtual() == NULL && pt_vcs_ != NULL) {
    delete pt_vcs_;
  }
  pt_vcs_ = NULL;
}
void FusionFreespacePoint::clear_vel_vcs() {
  if (GetArenaNoVirtual() == NULL && vel_vcs_ != NULL) {
    delete vel_vcs_;
  }
  vel_vcs_ = NULL;
}
void FusionFreespacePoint::clear_pt_world() {
  if (GetArenaNoVirtual() == NULL && pt_world_ != NULL) {
    delete pt_world_;
  }
  pt_world_ = NULL;
}
void FusionFreespacePoint::clear_vel_world() {
  if (GetArenaNoVirtual() == NULL && vel_world_ != NULL) {
    delete vel_world_;
  }
  vel_world_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FusionFreespacePoint::kConfFieldNumber;
const int FusionFreespacePoint::kAngleFieldNumber;
const int FusionFreespacePoint::kRayLengthFieldNumber;
const int FusionFreespacePoint::kOriginLabelFieldNumber;
const int FusionFreespacePoint::kLabelFieldNumber;
const int FusionFreespacePoint::kPtVcsFieldNumber;
const int FusionFreespacePoint::kVelVcsFieldNumber;
const int FusionFreespacePoint::kPtWorldFieldNumber;
const int FusionFreespacePoint::kVelWorldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FusionFreespacePoint::FusionFreespacePoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_fusion_5ffreespace_2eproto::InitDefaultsFusionFreespacePoint();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:autodrive.workflow.proto.FusionFreespacePoint)
}
FusionFreespacePoint::FusionFreespacePoint(const FusionFreespacePoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pt_vcs()) {
    pt_vcs_ = new ::autodrive::workflow::proto::Vector2f(*from.pt_vcs_);
  } else {
    pt_vcs_ = NULL;
  }
  if (from.has_vel_vcs()) {
    vel_vcs_ = new ::autodrive::workflow::proto::Vector2f(*from.vel_vcs_);
  } else {
    vel_vcs_ = NULL;
  }
  if (from.has_pt_world()) {
    pt_world_ = new ::autodrive::workflow::proto::Vector2f(*from.pt_world_);
  } else {
    pt_world_ = NULL;
  }
  if (from.has_vel_world()) {
    vel_world_ = new ::autodrive::workflow::proto::Vector2f(*from.vel_world_);
  } else {
    vel_world_ = NULL;
  }
  ::memcpy(&conf_, &from.conf_,
    static_cast<size_t>(reinterpret_cast<char*>(&label_) -
    reinterpret_cast<char*>(&conf_)) + sizeof(label_));
  // @@protoc_insertion_point(copy_constructor:autodrive.workflow.proto.FusionFreespacePoint)
}

void FusionFreespacePoint::SharedCtor() {
  ::memset(&pt_vcs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&label_) -
      reinterpret_cast<char*>(&pt_vcs_)) + sizeof(label_));
  _cached_size_ = 0;
}

FusionFreespacePoint::~FusionFreespacePoint() {
  // @@protoc_insertion_point(destructor:autodrive.workflow.proto.FusionFreespacePoint)
  SharedDtor();
}

void FusionFreespacePoint::SharedDtor() {
  if (this != internal_default_instance()) delete pt_vcs_;
  if (this != internal_default_instance()) delete vel_vcs_;
  if (this != internal_default_instance()) delete pt_world_;
  if (this != internal_default_instance()) delete vel_world_;
}

void FusionFreespacePoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FusionFreespacePoint::descriptor() {
  ::protobuf_fusion_5ffreespace_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fusion_5ffreespace_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FusionFreespacePoint& FusionFreespacePoint::default_instance() {
  ::protobuf_fusion_5ffreespace_2eproto::InitDefaultsFusionFreespacePoint();
  return *internal_default_instance();
}

FusionFreespacePoint* FusionFreespacePoint::New(::google::protobuf::Arena* arena) const {
  FusionFreespacePoint* n = new FusionFreespacePoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FusionFreespacePoint::Clear() {
// @@protoc_insertion_point(message_clear_start:autodrive.workflow.proto.FusionFreespacePoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pt_vcs_ != NULL) {
    delete pt_vcs_;
  }
  pt_vcs_ = NULL;
  if (GetArenaNoVirtual() == NULL && vel_vcs_ != NULL) {
    delete vel_vcs_;
  }
  vel_vcs_ = NULL;
  if (GetArenaNoVirtual() == NULL && pt_world_ != NULL) {
    delete pt_world_;
  }
  pt_world_ = NULL;
  if (GetArenaNoVirtual() == NULL && vel_world_ != NULL) {
    delete vel_world_;
  }
  vel_world_ = NULL;
  ::memset(&conf_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&label_) -
      reinterpret_cast<char*>(&conf_)) + sizeof(label_));
  _internal_metadata_.Clear();
}

bool FusionFreespacePoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:autodrive.workflow.proto.FusionFreespacePoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float conf = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &conf_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float angle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ray_length = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ray_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 origin_label = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &origin_label_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.FreespacePointLabel label = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_label(static_cast< ::autodrive::workflow::proto::FreespacePointLabel >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.Vector2f pt_vcs = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pt_vcs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.Vector2f vel_vcs = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vel_vcs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.Vector2f pt_world = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pt_world()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.Vector2f vel_world = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vel_world()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:autodrive.workflow.proto.FusionFreespacePoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:autodrive.workflow.proto.FusionFreespacePoint)
  return false;
#undef DO_
}

void FusionFreespacePoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:autodrive.workflow.proto.FusionFreespacePoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float conf = 1;
  if (this->conf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->conf(), output);
  }

  // float angle = 2;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->angle(), output);
  }

  // float ray_length = 3;
  if (this->ray_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->ray_length(), output);
  }

  // uint32 origin_label = 4;
  if (this->origin_label() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->origin_label(), output);
  }

  // .autodrive.workflow.proto.FreespacePointLabel label = 5;
  if (this->label() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->label(), output);
  }

  // .autodrive.workflow.proto.Vector2f pt_vcs = 6;
  if (this->has_pt_vcs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->pt_vcs_, output);
  }

  // .autodrive.workflow.proto.Vector2f vel_vcs = 7;
  if (this->has_vel_vcs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->vel_vcs_, output);
  }

  // .autodrive.workflow.proto.Vector2f pt_world = 8;
  if (this->has_pt_world()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->pt_world_, output);
  }

  // .autodrive.workflow.proto.Vector2f vel_world = 9;
  if (this->has_vel_world()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->vel_world_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:autodrive.workflow.proto.FusionFreespacePoint)
}

::google::protobuf::uint8* FusionFreespacePoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:autodrive.workflow.proto.FusionFreespacePoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float conf = 1;
  if (this->conf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->conf(), target);
  }

  // float angle = 2;
  if (this->angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->angle(), target);
  }

  // float ray_length = 3;
  if (this->ray_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->ray_length(), target);
  }

  // uint32 origin_label = 4;
  if (this->origin_label() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->origin_label(), target);
  }

  // .autodrive.workflow.proto.FreespacePointLabel label = 5;
  if (this->label() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->label(), target);
  }

  // .autodrive.workflow.proto.Vector2f pt_vcs = 6;
  if (this->has_pt_vcs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->pt_vcs_, deterministic, target);
  }

  // .autodrive.workflow.proto.Vector2f vel_vcs = 7;
  if (this->has_vel_vcs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->vel_vcs_, deterministic, target);
  }

  // .autodrive.workflow.proto.Vector2f pt_world = 8;
  if (this->has_pt_world()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->pt_world_, deterministic, target);
  }

  // .autodrive.workflow.proto.Vector2f vel_world = 9;
  if (this->has_vel_world()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->vel_world_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autodrive.workflow.proto.FusionFreespacePoint)
  return target;
}

size_t FusionFreespacePoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autodrive.workflow.proto.FusionFreespacePoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .autodrive.workflow.proto.Vector2f pt_vcs = 6;
  if (this->has_pt_vcs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pt_vcs_);
  }

  // .autodrive.workflow.proto.Vector2f vel_vcs = 7;
  if (this->has_vel_vcs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->vel_vcs_);
  }

  // .autodrive.workflow.proto.Vector2f pt_world = 8;
  if (this->has_pt_world()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pt_world_);
  }

  // .autodrive.workflow.proto.Vector2f vel_world = 9;
  if (this->has_vel_world()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->vel_world_);
  }

  // float conf = 1;
  if (this->conf() != 0) {
    total_size += 1 + 4;
  }

  // float angle = 2;
  if (this->angle() != 0) {
    total_size += 1 + 4;
  }

  // float ray_length = 3;
  if (this->ray_length() != 0) {
    total_size += 1 + 4;
  }

  // uint32 origin_label = 4;
  if (this->origin_label() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->origin_label());
  }

  // .autodrive.workflow.proto.FreespacePointLabel label = 5;
  if (this->label() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->label());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FusionFreespacePoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:autodrive.workflow.proto.FusionFreespacePoint)
  GOOGLE_DCHECK_NE(&from, this);
  const FusionFreespacePoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FusionFreespacePoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:autodrive.workflow.proto.FusionFreespacePoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:autodrive.workflow.proto.FusionFreespacePoint)
    MergeFrom(*source);
  }
}

void FusionFreespacePoint::MergeFrom(const FusionFreespacePoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:autodrive.workflow.proto.FusionFreespacePoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pt_vcs()) {
    mutable_pt_vcs()->::autodrive::workflow::proto::Vector2f::MergeFrom(from.pt_vcs());
  }
  if (from.has_vel_vcs()) {
    mutable_vel_vcs()->::autodrive::workflow::proto::Vector2f::MergeFrom(from.vel_vcs());
  }
  if (from.has_pt_world()) {
    mutable_pt_world()->::autodrive::workflow::proto::Vector2f::MergeFrom(from.pt_world());
  }
  if (from.has_vel_world()) {
    mutable_vel_world()->::autodrive::workflow::proto::Vector2f::MergeFrom(from.vel_world());
  }
  if (from.conf() != 0) {
    set_conf(from.conf());
  }
  if (from.angle() != 0) {
    set_angle(from.angle());
  }
  if (from.ray_length() != 0) {
    set_ray_length(from.ray_length());
  }
  if (from.origin_label() != 0) {
    set_origin_label(from.origin_label());
  }
  if (from.label() != 0) {
    set_label(from.label());
  }
}

void FusionFreespacePoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:autodrive.workflow.proto.FusionFreespacePoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FusionFreespacePoint::CopyFrom(const FusionFreespacePoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autodrive.workflow.proto.FusionFreespacePoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FusionFreespacePoint::IsInitialized() const {
  return true;
}

void FusionFreespacePoint::Swap(FusionFreespacePoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FusionFreespacePoint::InternalSwap(FusionFreespacePoint* other) {
  using std::swap;
  swap(pt_vcs_, other->pt_vcs_);
  swap(vel_vcs_, other->vel_vcs_);
  swap(pt_world_, other->pt_world_);
  swap(vel_world_, other->vel_world_);
  swap(conf_, other->conf_);
  swap(angle_, other->angle_);
  swap(ray_length_, other->ray_length_);
  swap(origin_label_, other->origin_label_);
  swap(label_, other->label_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FusionFreespacePoint::GetMetadata() const {
  protobuf_fusion_5ffreespace_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fusion_5ffreespace_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FreespaceFusion::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FreespaceFusion::kTimestampFieldNumber;
const int FreespaceFusion::kFreespacePointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FreespaceFusion::FreespaceFusion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_fusion_5ffreespace_2eproto::InitDefaultsFreespaceFusion();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:autodrive.workflow.proto.FreespaceFusion)
}
FreespaceFusion::FreespaceFusion(const FreespaceFusion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      freespace_points_(from.freespace_points_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:autodrive.workflow.proto.FreespaceFusion)
}

void FreespaceFusion::SharedCtor() {
  timestamp_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

FreespaceFusion::~FreespaceFusion() {
  // @@protoc_insertion_point(destructor:autodrive.workflow.proto.FreespaceFusion)
  SharedDtor();
}

void FreespaceFusion::SharedDtor() {
}

void FreespaceFusion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FreespaceFusion::descriptor() {
  ::protobuf_fusion_5ffreespace_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fusion_5ffreespace_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FreespaceFusion& FreespaceFusion::default_instance() {
  ::protobuf_fusion_5ffreespace_2eproto::InitDefaultsFreespaceFusion();
  return *internal_default_instance();
}

FreespaceFusion* FreespaceFusion::New(::google::protobuf::Arena* arena) const {
  FreespaceFusion* n = new FreespaceFusion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FreespaceFusion::Clear() {
// @@protoc_insertion_point(message_clear_start:autodrive.workflow.proto.FreespaceFusion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  freespace_points_.Clear();
  timestamp_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool FreespaceFusion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:autodrive.workflow.proto.FreespaceFusion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .autodrive.workflow.proto.FusionFreespacePoint freespace_points = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_freespace_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:autodrive.workflow.proto.FreespaceFusion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:autodrive.workflow.proto.FreespaceFusion)
  return false;
#undef DO_
}

void FreespaceFusion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:autodrive.workflow.proto.FreespaceFusion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->timestamp(), output);
  }

  // repeated .autodrive.workflow.proto.FusionFreespacePoint freespace_points = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->freespace_points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->freespace_points(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:autodrive.workflow.proto.FreespaceFusion)
}

::google::protobuf::uint8* FreespaceFusion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:autodrive.workflow.proto.FreespaceFusion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->timestamp(), target);
  }

  // repeated .autodrive.workflow.proto.FusionFreespacePoint freespace_points = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->freespace_points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->freespace_points(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autodrive.workflow.proto.FreespaceFusion)
  return target;
}

size_t FreespaceFusion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autodrive.workflow.proto.FreespaceFusion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .autodrive.workflow.proto.FusionFreespacePoint freespace_points = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->freespace_points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->freespace_points(static_cast<int>(i)));
    }
  }

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FreespaceFusion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:autodrive.workflow.proto.FreespaceFusion)
  GOOGLE_DCHECK_NE(&from, this);
  const FreespaceFusion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FreespaceFusion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:autodrive.workflow.proto.FreespaceFusion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:autodrive.workflow.proto.FreespaceFusion)
    MergeFrom(*source);
  }
}

void FreespaceFusion::MergeFrom(const FreespaceFusion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:autodrive.workflow.proto.FreespaceFusion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  freespace_points_.MergeFrom(from.freespace_points_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void FreespaceFusion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:autodrive.workflow.proto.FreespaceFusion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FreespaceFusion::CopyFrom(const FreespaceFusion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autodrive.workflow.proto.FreespaceFusion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FreespaceFusion::IsInitialized() const {
  return true;
}

void FreespaceFusion::Swap(FreespaceFusion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FreespaceFusion::InternalSwap(FreespaceFusion* other) {
  using std::swap;
  freespace_points_.InternalSwap(&other->freespace_points_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FreespaceFusion::GetMetadata() const {
  protobuf_fusion_5ffreespace_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fusion_5ffreespace_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FreespaceFusionMsg::InitAsDefaultInstance() {
  ::autodrive::workflow::proto::_FreespaceFusionMsg_default_instance_._instance.get_mutable()->header_ = const_cast< ::autodrive::workflow::proto::MsgHeader*>(
      ::autodrive::workflow::proto::MsgHeader::internal_default_instance());
  ::autodrive::workflow::proto::_FreespaceFusionMsg_default_instance_._instance.get_mutable()->error_ = const_cast< ::autodrive::workflow::proto::Error*>(
      ::autodrive::workflow::proto::Error::internal_default_instance());
  ::autodrive::workflow::proto::_FreespaceFusionMsg_default_instance_._instance.get_mutable()->fusion_freespace_ = const_cast< ::autodrive::workflow::proto::FreespaceFusion*>(
      ::autodrive::workflow::proto::FreespaceFusion::internal_default_instance());
}
void FreespaceFusionMsg::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void FreespaceFusionMsg::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FreespaceFusionMsg::kHeaderFieldNumber;
const int FreespaceFusionMsg::kErrorFieldNumber;
const int FreespaceFusionMsg::kFusionFreespaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FreespaceFusionMsg::FreespaceFusionMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_fusion_5ffreespace_2eproto::InitDefaultsFreespaceFusionMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:autodrive.workflow.proto.FreespaceFusionMsg)
}
FreespaceFusionMsg::FreespaceFusionMsg(const FreespaceFusionMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::autodrive::workflow::proto::MsgHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_error()) {
    error_ = new ::autodrive::workflow::proto::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  if (from.has_fusion_freespace()) {
    fusion_freespace_ = new ::autodrive::workflow::proto::FreespaceFusion(*from.fusion_freespace_);
  } else {
    fusion_freespace_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:autodrive.workflow.proto.FreespaceFusionMsg)
}

void FreespaceFusionMsg::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fusion_freespace_) -
      reinterpret_cast<char*>(&header_)) + sizeof(fusion_freespace_));
  _cached_size_ = 0;
}

FreespaceFusionMsg::~FreespaceFusionMsg() {
  // @@protoc_insertion_point(destructor:autodrive.workflow.proto.FreespaceFusionMsg)
  SharedDtor();
}

void FreespaceFusionMsg::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete error_;
  if (this != internal_default_instance()) delete fusion_freespace_;
}

void FreespaceFusionMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FreespaceFusionMsg::descriptor() {
  ::protobuf_fusion_5ffreespace_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fusion_5ffreespace_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FreespaceFusionMsg& FreespaceFusionMsg::default_instance() {
  ::protobuf_fusion_5ffreespace_2eproto::InitDefaultsFreespaceFusionMsg();
  return *internal_default_instance();
}

FreespaceFusionMsg* FreespaceFusionMsg::New(::google::protobuf::Arena* arena) const {
  FreespaceFusionMsg* n = new FreespaceFusionMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FreespaceFusionMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:autodrive.workflow.proto.FreespaceFusionMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  if (GetArenaNoVirtual() == NULL && fusion_freespace_ != NULL) {
    delete fusion_freespace_;
  }
  fusion_freespace_ = NULL;
  _internal_metadata_.Clear();
}

bool FreespaceFusionMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:autodrive.workflow.proto.FreespaceFusionMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .autodrive.workflow.proto.MsgHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.Error error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.FreespaceFusion fusion_freespace = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fusion_freespace()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:autodrive.workflow.proto.FreespaceFusionMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:autodrive.workflow.proto.FreespaceFusionMsg)
  return false;
#undef DO_
}

void FreespaceFusionMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:autodrive.workflow.proto.FreespaceFusionMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .autodrive.workflow.proto.MsgHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // .autodrive.workflow.proto.Error error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  // .autodrive.workflow.proto.FreespaceFusion fusion_freespace = 3;
  if (this->has_fusion_freespace()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->fusion_freespace_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:autodrive.workflow.proto.FreespaceFusionMsg)
}

::google::protobuf::uint8* FreespaceFusionMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:autodrive.workflow.proto.FreespaceFusionMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .autodrive.workflow.proto.MsgHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // .autodrive.workflow.proto.Error error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->error_, deterministic, target);
  }

  // .autodrive.workflow.proto.FreespaceFusion fusion_freespace = 3;
  if (this->has_fusion_freespace()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->fusion_freespace_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autodrive.workflow.proto.FreespaceFusionMsg)
  return target;
}

size_t FreespaceFusionMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autodrive.workflow.proto.FreespaceFusionMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .autodrive.workflow.proto.MsgHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // .autodrive.workflow.proto.Error error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->error_);
  }

  // .autodrive.workflow.proto.FreespaceFusion fusion_freespace = 3;
  if (this->has_fusion_freespace()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->fusion_freespace_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FreespaceFusionMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:autodrive.workflow.proto.FreespaceFusionMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const FreespaceFusionMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FreespaceFusionMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:autodrive.workflow.proto.FreespaceFusionMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:autodrive.workflow.proto.FreespaceFusionMsg)
    MergeFrom(*source);
  }
}

void FreespaceFusionMsg::MergeFrom(const FreespaceFusionMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:autodrive.workflow.proto.FreespaceFusionMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::autodrive::workflow::proto::MsgHeader::MergeFrom(from.header());
  }
  if (from.has_error()) {
    mutable_error()->::autodrive::workflow::proto::Error::MergeFrom(from.error());
  }
  if (from.has_fusion_freespace()) {
    mutable_fusion_freespace()->::autodrive::workflow::proto::FreespaceFusion::MergeFrom(from.fusion_freespace());
  }
}

void FreespaceFusionMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:autodrive.workflow.proto.FreespaceFusionMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FreespaceFusionMsg::CopyFrom(const FreespaceFusionMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autodrive.workflow.proto.FreespaceFusionMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FreespaceFusionMsg::IsInitialized() const {
  return true;
}

void FreespaceFusionMsg::Swap(FreespaceFusionMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FreespaceFusionMsg::InternalSwap(FreespaceFusionMsg* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(error_, other->error_);
  swap(fusion_freespace_, other->fusion_freespace_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FreespaceFusionMsg::GetMetadata() const {
  protobuf_fusion_5ffreespace_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fusion_5ffreespace_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace workflow
}  // namespace autodrive

// @@protoc_insertion_point(global_scope)
