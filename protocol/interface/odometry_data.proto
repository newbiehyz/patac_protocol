syntax = "proto3";
import "basic.proto";
import "common.proto";
package autodrive.workflow.proto;

enum OdometryDataSource {
  kOdometrySourceUnknown = 0;  // Solve the compilation problem and make a placeholder
  kOdometrySourceTwoWheel = 1;
  kOdometrySourceFourWheel = 2;
  kOdometrySourceSpeed = 4;
  kOdometrySourceYawRate = 8;
  kOdometrySourceSteeringAngle = 16;
  kOdometrySourceWheelSpeed = 32;
  kOdometrySourceWheelPulse = 64;
  kOdometrySourceGear = 128;
}

enum OdometryDataType {
  kOdometryDataTypeCan = 0;
  kOdometryDataTypeOfflineOptimized = 1;
  kOdometryDataTypeOnlineIns = 2;
}

enum OdometryDataState {
  kOdometryDataStateNormal = 0;
  kOdometryDataStateUnnormal = 1;
  kOdometryDataStateReset = 2;
}

enum OdometryDataErrorCode {
  kOdometryDataErrorCodeNoError = 0;
  kOdometryDataErrorCodeErrorCanTimeout = 1;
  kOdometryDataErrorCodeErrorCanOdomOutrange = 2;
  kOdometryDataErrorCodeErrorCanHugeDiff = 3;
  kOdometryDataErrorCodeErrorCanAbnormalValue = 4;
  kOdometryDataErrorCodeErrorNoImu = 5;
  kOdometryDataErrorCodeErrorNoGnss = 6;
  kOdometryDataErrorCodeErrorNoCan = 7;
  kOdometryDataErrorCodeErrorNoImage = 8;
  kOdometryDataErrorCodeErrorGnssLost = 9;
  kOdometryDataErrorCodeErrorImageTimestamp = 10;
}

enum OdometryDataYawRateBiasEstimateState {
  kYawRateBiasEstimateStateNormal = 0;
  kYawRateBiasEstimateStateStaticUpdate = 1;
  kYawRateBiasEstimateStateLaneUpdate = 2;
  kYawRateBiasEstimateStateOnCurve = 3;
  kYawRateBiasEstimateStateLaneNotSatisfied = 4;
}

enum Gear {
  kGearTypeN = 0;
  KGearTypeP = 1;
  kGearTypeR = 2;
  kGearTypeD = 3;
}

message StableDataPitch {
  float pitch = 1;
  bool is_valid = 2;
  bool is_jitter = 3;
}

enum LightIntensityValidity {
  kUndefinedDataAccuracy = 0;
  kTemporaryUndefinedData = 1;
  kDataAccuracyNotWithinSpecification = 2;
  kAccurateData = 3;
}

enum TurningLightStatus {
  kOff = 0;
  kOn = 1;
  kError = 2;
  kReserved = 3;
}

enum RainFallLevel {
  kAmntSnsrAmnt = 0;
  kAmntSnsrInitValue = 14;
  kAmntSnsrError = 15;
}

message Vehicle {
  uint32 light_brightness_raw = 1;
  LightIntensityValidity lignt_validity = 2;
  TurningLightStatus left_turning_light_status = 3;
  TurningLightStatus right_turning_light_status = 4;
  RainFallLevel rain_fall_level = 5;
  Gear gear = 6;
  repeated uint32 whl_pulse = 7;
  repeated uint32 whl_pulse_valid = 8;
  repeated float whl_speed = 9;
  uint32 yaw_rate_valid =10;
  uint32 speed_valid =11;
  uint32 gear_valid =12;
  repeated uint32 wl_pluse_direction = 13;
  repeated uint32 tire_pressure_valid = 14;
  repeated float tire_pressure = 15;
  uint32 wheel_size = 16;
}

message OdometryMsg {
  // Header
  MsgHeader header = 1;
  // Error
  Error error = 2;
  Vector3f position = 3;
  Vector3f orientation = 4;
  float speed = 5;
  float speed_scale = 6;
  Vector2f acceleration = 7;
  float yaw_rate = 8;
  float yaw_rate_bias = 9;
  float wheel_angle = 10;
  float slope = 11;
  StableDataPitch stable_pitch = 12;
  float slope_confidence = 13;
  uint32 diagnostic_code = 14;
  Vector3d cov_translation = 15;
  Vector3d cov_eular_angle = 16;
  Vector3d position_hr = 17;
  uint32 source = 18;
  bool is_slope_available = 19;
  OdometryDataType type = 20;
  OdometryDataState state = 21;
  OdometryDataErrorCode error_code = 22;
  OdometryDataYawRateBiasEstimateState yaw_rate_bias_estimate_state = 23;
  Vehicle vehicle_info = 24;
}