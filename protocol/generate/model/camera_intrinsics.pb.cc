// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: camera_intrinsics.proto

#include "camera_intrinsics.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace autodrive {
namespace workflow {
namespace proto {
class IntrinsicDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intrinsic>
      _instance;
} _Intrinsic_default_instance_;
class CameraIntrinsicsMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CameraIntrinsicsMsg>
      _instance;
} _CameraIntrinsicsMsg_default_instance_;
}  // namespace proto
}  // namespace workflow
}  // namespace autodrive
namespace protobuf_camera_5fintrinsics_2eproto {
void InitDefaultsIntrinsicImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::autodrive::workflow::proto::_Intrinsic_default_instance_;
    new (ptr) ::autodrive::workflow::proto::Intrinsic();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::autodrive::workflow::proto::Intrinsic::InitAsDefaultInstance();
}

void InitDefaultsIntrinsic() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIntrinsicImpl);
}

void InitDefaultsCameraIntrinsicsMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2eproto::InitDefaultsMsgHeader();
  protobuf_common_2eproto::InitDefaultsError();
  protobuf_camera_5fintrinsics_2eproto::InitDefaultsIntrinsic();
  {
    void* ptr = &::autodrive::workflow::proto::_CameraIntrinsicsMsg_default_instance_;
    new (ptr) ::autodrive::workflow::proto::CameraIntrinsicsMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::autodrive::workflow::proto::CameraIntrinsicsMsg::InitAsDefaultInstance();
}

void InitDefaultsCameraIntrinsicsMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCameraIntrinsicsMsgImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::Intrinsic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::Intrinsic, cx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::Intrinsic, cy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::Intrinsic, fx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::Intrinsic, fy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::Intrinsic, cam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::Intrinsic, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::Intrinsic, p_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::Intrinsic, s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::Intrinsic, cod_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::Intrinsic, cod_y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::CameraIntrinsicsMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::CameraIntrinsicsMsg, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::CameraIntrinsicsMsg, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::CameraIntrinsicsMsg, intrinsics_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::autodrive::workflow::proto::Intrinsic)},
  { 15, -1, sizeof(::autodrive::workflow::proto::CameraIntrinsicsMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::autodrive::workflow::proto::_Intrinsic_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::autodrive::workflow::proto::_CameraIntrinsicsMsg_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "camera_intrinsics.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027camera_intrinsics.proto\022\030autodrive.wor"
      "kflow.proto\032\014common.proto\032\027camera_extrin"
      "sics.proto\"\256\001\n\tIntrinsic\022\n\n\002cx\030\001 \001(\002\022\n\n\002"
      "cy\030\002 \001(\002\022\n\n\002fx\030\003 \001(\002\022\n\n\002fy\030\004 \001(\002\0222\n\006cam_"
      "id\030\005 \001(\0162\".autodrive.workflow.proto.Came"
      "raID\022\t\n\001k\030\006 \003(\002\022\t\n\001p\030\007 \003(\002\022\t\n\001s\030\010 \003(\002\022\r\n"
      "\005cod_x\030\t \001(\002\022\r\n\005cod_y\030\n \001(\002\"\263\001\n\023CameraIn"
      "trinsicsMsg\0223\n\006header\030\001 \001(\0132#.autodrive."
      "workflow.proto.MsgHeader\022.\n\005error\030\002 \001(\0132"
      "\037.autodrive.workflow.proto.Error\0227\n\nintr"
      "insics\030\003 \003(\0132#.autodrive.workflow.proto."
      "Intrinsicb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 457);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "camera_intrinsics.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2eproto::AddDescriptors();
  ::protobuf_camera_5fextrinsics_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_camera_5fintrinsics_2eproto
namespace autodrive {
namespace workflow {
namespace proto {

// ===================================================================

void Intrinsic::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intrinsic::kCxFieldNumber;
const int Intrinsic::kCyFieldNumber;
const int Intrinsic::kFxFieldNumber;
const int Intrinsic::kFyFieldNumber;
const int Intrinsic::kCamIdFieldNumber;
const int Intrinsic::kKFieldNumber;
const int Intrinsic::kPFieldNumber;
const int Intrinsic::kSFieldNumber;
const int Intrinsic::kCodXFieldNumber;
const int Intrinsic::kCodYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intrinsic::Intrinsic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_camera_5fintrinsics_2eproto::InitDefaultsIntrinsic();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:autodrive.workflow.proto.Intrinsic)
}
Intrinsic::Intrinsic(const Intrinsic& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      p_(from.p_),
      s_(from.s_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cx_, &from.cx_,
    static_cast<size_t>(reinterpret_cast<char*>(&cod_y_) -
    reinterpret_cast<char*>(&cx_)) + sizeof(cod_y_));
  // @@protoc_insertion_point(copy_constructor:autodrive.workflow.proto.Intrinsic)
}

void Intrinsic::SharedCtor() {
  ::memset(&cx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cod_y_) -
      reinterpret_cast<char*>(&cx_)) + sizeof(cod_y_));
  _cached_size_ = 0;
}

Intrinsic::~Intrinsic() {
  // @@protoc_insertion_point(destructor:autodrive.workflow.proto.Intrinsic)
  SharedDtor();
}

void Intrinsic::SharedDtor() {
}

void Intrinsic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Intrinsic::descriptor() {
  ::protobuf_camera_5fintrinsics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_camera_5fintrinsics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intrinsic& Intrinsic::default_instance() {
  ::protobuf_camera_5fintrinsics_2eproto::InitDefaultsIntrinsic();
  return *internal_default_instance();
}

Intrinsic* Intrinsic::New(::google::protobuf::Arena* arena) const {
  Intrinsic* n = new Intrinsic;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Intrinsic::Clear() {
// @@protoc_insertion_point(message_clear_start:autodrive.workflow.proto.Intrinsic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  p_.Clear();
  s_.Clear();
  ::memset(&cx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cod_y_) -
      reinterpret_cast<char*>(&cx_)) + sizeof(cod_y_));
  _internal_metadata_.Clear();
}

bool Intrinsic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:autodrive.workflow.proto.Intrinsic)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float cx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float cy = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fx = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fy = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.CameraID cam_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cam_id(static_cast< ::autodrive::workflow::proto::CameraID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float k = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 50u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float p = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_p())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 58u, input, this->mutable_p())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float s = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 66u, input, this->mutable_s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float cod_x = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cod_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float cod_y = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cod_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:autodrive.workflow.proto.Intrinsic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:autodrive.workflow.proto.Intrinsic)
  return false;
#undef DO_
}

void Intrinsic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:autodrive.workflow.proto.Intrinsic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float cx = 1;
  if (this->cx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->cx(), output);
  }

  // float cy = 2;
  if (this->cy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->cy(), output);
  }

  // float fx = 3;
  if (this->fx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->fx(), output);
  }

  // float fy = 4;
  if (this->fy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->fy(), output);
  }

  // .autodrive.workflow.proto.CameraID cam_id = 5;
  if (this->cam_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->cam_id(), output);
  }

  // repeated float k = 6;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated float p = 7;
  if (this->p_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _p_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->p().data(), this->p_size(), output);
  }

  // repeated float s = 8;
  if (this->s_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _s_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->s().data(), this->s_size(), output);
  }

  // float cod_x = 9;
  if (this->cod_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->cod_x(), output);
  }

  // float cod_y = 10;
  if (this->cod_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->cod_y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:autodrive.workflow.proto.Intrinsic)
}

::google::protobuf::uint8* Intrinsic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:autodrive.workflow.proto.Intrinsic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float cx = 1;
  if (this->cx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->cx(), target);
  }

  // float cy = 2;
  if (this->cy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->cy(), target);
  }

  // float fx = 3;
  if (this->fx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->fx(), target);
  }

  // float fy = 4;
  if (this->fy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->fy(), target);
  }

  // .autodrive.workflow.proto.CameraID cam_id = 5;
  if (this->cam_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->cam_id(), target);
  }

  // repeated float k = 6;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->k_, target);
  }

  // repeated float p = 7;
  if (this->p_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _p_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->p_, target);
  }

  // repeated float s = 8;
  if (this->s_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _s_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->s_, target);
  }

  // float cod_x = 9;
  if (this->cod_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->cod_x(), target);
  }

  // float cod_y = 10;
  if (this->cod_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->cod_y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autodrive.workflow.proto.Intrinsic)
  return target;
}

size_t Intrinsic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autodrive.workflow.proto.Intrinsic)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float k = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float p = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->p_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _p_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float s = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->s_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _s_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // float cx = 1;
  if (this->cx() != 0) {
    total_size += 1 + 4;
  }

  // float cy = 2;
  if (this->cy() != 0) {
    total_size += 1 + 4;
  }

  // float fx = 3;
  if (this->fx() != 0) {
    total_size += 1 + 4;
  }

  // float fy = 4;
  if (this->fy() != 0) {
    total_size += 1 + 4;
  }

  // .autodrive.workflow.proto.CameraID cam_id = 5;
  if (this->cam_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cam_id());
  }

  // float cod_x = 9;
  if (this->cod_x() != 0) {
    total_size += 1 + 4;
  }

  // float cod_y = 10;
  if (this->cod_y() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Intrinsic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:autodrive.workflow.proto.Intrinsic)
  GOOGLE_DCHECK_NE(&from, this);
  const Intrinsic* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intrinsic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:autodrive.workflow.proto.Intrinsic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:autodrive.workflow.proto.Intrinsic)
    MergeFrom(*source);
  }
}

void Intrinsic::MergeFrom(const Intrinsic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:autodrive.workflow.proto.Intrinsic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  p_.MergeFrom(from.p_);
  s_.MergeFrom(from.s_);
  if (from.cx() != 0) {
    set_cx(from.cx());
  }
  if (from.cy() != 0) {
    set_cy(from.cy());
  }
  if (from.fx() != 0) {
    set_fx(from.fx());
  }
  if (from.fy() != 0) {
    set_fy(from.fy());
  }
  if (from.cam_id() != 0) {
    set_cam_id(from.cam_id());
  }
  if (from.cod_x() != 0) {
    set_cod_x(from.cod_x());
  }
  if (from.cod_y() != 0) {
    set_cod_y(from.cod_y());
  }
}

void Intrinsic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:autodrive.workflow.proto.Intrinsic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intrinsic::CopyFrom(const Intrinsic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autodrive.workflow.proto.Intrinsic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intrinsic::IsInitialized() const {
  return true;
}

void Intrinsic::Swap(Intrinsic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Intrinsic::InternalSwap(Intrinsic* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  p_.InternalSwap(&other->p_);
  s_.InternalSwap(&other->s_);
  swap(cx_, other->cx_);
  swap(cy_, other->cy_);
  swap(fx_, other->fx_);
  swap(fy_, other->fy_);
  swap(cam_id_, other->cam_id_);
  swap(cod_x_, other->cod_x_);
  swap(cod_y_, other->cod_y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Intrinsic::GetMetadata() const {
  protobuf_camera_5fintrinsics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_camera_5fintrinsics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CameraIntrinsicsMsg::InitAsDefaultInstance() {
  ::autodrive::workflow::proto::_CameraIntrinsicsMsg_default_instance_._instance.get_mutable()->header_ = const_cast< ::autodrive::workflow::proto::MsgHeader*>(
      ::autodrive::workflow::proto::MsgHeader::internal_default_instance());
  ::autodrive::workflow::proto::_CameraIntrinsicsMsg_default_instance_._instance.get_mutable()->error_ = const_cast< ::autodrive::workflow::proto::Error*>(
      ::autodrive::workflow::proto::Error::internal_default_instance());
}
void CameraIntrinsicsMsg::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void CameraIntrinsicsMsg::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CameraIntrinsicsMsg::kHeaderFieldNumber;
const int CameraIntrinsicsMsg::kErrorFieldNumber;
const int CameraIntrinsicsMsg::kIntrinsicsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CameraIntrinsicsMsg::CameraIntrinsicsMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_camera_5fintrinsics_2eproto::InitDefaultsCameraIntrinsicsMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:autodrive.workflow.proto.CameraIntrinsicsMsg)
}
CameraIntrinsicsMsg::CameraIntrinsicsMsg(const CameraIntrinsicsMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      intrinsics_(from.intrinsics_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::autodrive::workflow::proto::MsgHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_error()) {
    error_ = new ::autodrive::workflow::proto::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:autodrive.workflow.proto.CameraIntrinsicsMsg)
}

void CameraIntrinsicsMsg::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&header_)) + sizeof(error_));
  _cached_size_ = 0;
}

CameraIntrinsicsMsg::~CameraIntrinsicsMsg() {
  // @@protoc_insertion_point(destructor:autodrive.workflow.proto.CameraIntrinsicsMsg)
  SharedDtor();
}

void CameraIntrinsicsMsg::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete error_;
}

void CameraIntrinsicsMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CameraIntrinsicsMsg::descriptor() {
  ::protobuf_camera_5fintrinsics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_camera_5fintrinsics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CameraIntrinsicsMsg& CameraIntrinsicsMsg::default_instance() {
  ::protobuf_camera_5fintrinsics_2eproto::InitDefaultsCameraIntrinsicsMsg();
  return *internal_default_instance();
}

CameraIntrinsicsMsg* CameraIntrinsicsMsg::New(::google::protobuf::Arena* arena) const {
  CameraIntrinsicsMsg* n = new CameraIntrinsicsMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CameraIntrinsicsMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:autodrive.workflow.proto.CameraIntrinsicsMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  intrinsics_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool CameraIntrinsicsMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:autodrive.workflow.proto.CameraIntrinsicsMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .autodrive.workflow.proto.MsgHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.Error error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .autodrive.workflow.proto.Intrinsic intrinsics = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_intrinsics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:autodrive.workflow.proto.CameraIntrinsicsMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:autodrive.workflow.proto.CameraIntrinsicsMsg)
  return false;
#undef DO_
}

void CameraIntrinsicsMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:autodrive.workflow.proto.CameraIntrinsicsMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .autodrive.workflow.proto.MsgHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // .autodrive.workflow.proto.Error error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  // repeated .autodrive.workflow.proto.Intrinsic intrinsics = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->intrinsics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->intrinsics(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:autodrive.workflow.proto.CameraIntrinsicsMsg)
}

::google::protobuf::uint8* CameraIntrinsicsMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:autodrive.workflow.proto.CameraIntrinsicsMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .autodrive.workflow.proto.MsgHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // .autodrive.workflow.proto.Error error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->error_, deterministic, target);
  }

  // repeated .autodrive.workflow.proto.Intrinsic intrinsics = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->intrinsics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->intrinsics(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autodrive.workflow.proto.CameraIntrinsicsMsg)
  return target;
}

size_t CameraIntrinsicsMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autodrive.workflow.proto.CameraIntrinsicsMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .autodrive.workflow.proto.Intrinsic intrinsics = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->intrinsics_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->intrinsics(static_cast<int>(i)));
    }
  }

  // .autodrive.workflow.proto.MsgHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // .autodrive.workflow.proto.Error error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CameraIntrinsicsMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:autodrive.workflow.proto.CameraIntrinsicsMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CameraIntrinsicsMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CameraIntrinsicsMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:autodrive.workflow.proto.CameraIntrinsicsMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:autodrive.workflow.proto.CameraIntrinsicsMsg)
    MergeFrom(*source);
  }
}

void CameraIntrinsicsMsg::MergeFrom(const CameraIntrinsicsMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:autodrive.workflow.proto.CameraIntrinsicsMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  intrinsics_.MergeFrom(from.intrinsics_);
  if (from.has_header()) {
    mutable_header()->::autodrive::workflow::proto::MsgHeader::MergeFrom(from.header());
  }
  if (from.has_error()) {
    mutable_error()->::autodrive::workflow::proto::Error::MergeFrom(from.error());
  }
}

void CameraIntrinsicsMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:autodrive.workflow.proto.CameraIntrinsicsMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CameraIntrinsicsMsg::CopyFrom(const CameraIntrinsicsMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autodrive.workflow.proto.CameraIntrinsicsMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CameraIntrinsicsMsg::IsInitialized() const {
  return true;
}

void CameraIntrinsicsMsg::Swap(CameraIntrinsicsMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CameraIntrinsicsMsg::InternalSwap(CameraIntrinsicsMsg* other) {
  using std::swap;
  intrinsics_.InternalSwap(&other->intrinsics_);
  swap(header_, other->header_);
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CameraIntrinsicsMsg::GetMetadata() const {
  protobuf_camera_5fintrinsics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_camera_5fintrinsics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace workflow
}  // namespace autodrive

// @@protoc_insertion_point(global_scope)
