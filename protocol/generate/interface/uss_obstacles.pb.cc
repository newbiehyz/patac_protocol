// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: uss_obstacles.proto

#include "uss_obstacles.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace autodrive {
namespace workflow {
namespace proto {
class PerFusUssRawDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PerFusUssRawData>
      _instance;
} _PerFusUssRawData_default_instance_;
class PerFusUssLpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PerFusUssLp>
      _instance;
} _PerFusUssLp_default_instance_;
class PerFusUssHisObjFrameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PerFusUssHisObjFrame>
      _instance;
} _PerFusUssHisObjFrame_default_instance_;
class PerFusUssObjDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PerFusUssObj>
      _instance;
} _PerFusUssObj_default_instance_;
class PerFusUssAllCERawDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PerFusUssAllCERawData>
      _instance;
} _PerFusUssAllCERawData_default_instance_;
class UssObstaclesMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UssObstaclesMsg>
      _instance;
} _UssObstaclesMsg_default_instance_;
}  // namespace proto
}  // namespace workflow
}  // namespace autodrive
namespace protobuf_uss_5fobstacles_2eproto {
void InitDefaultsPerFusUssRawDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::autodrive::workflow::proto::_PerFusUssRawData_default_instance_;
    new (ptr) ::autodrive::workflow::proto::PerFusUssRawData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::autodrive::workflow::proto::PerFusUssRawData::InitAsDefaultInstance();
}

void InitDefaultsPerFusUssRawData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPerFusUssRawDataImpl);
}

void InitDefaultsPerFusUssLpImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_uss_5fbase_2eproto::InitDefaultsUssPoint();
  {
    void* ptr = &::autodrive::workflow::proto::_PerFusUssLp_default_instance_;
    new (ptr) ::autodrive::workflow::proto::PerFusUssLp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::autodrive::workflow::proto::PerFusUssLp::InitAsDefaultInstance();
}

void InitDefaultsPerFusUssLp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPerFusUssLpImpl);
}

void InitDefaultsPerFusUssHisObjFrameImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_uss_5fbase_2eproto::InitDefaultsUssPoint();
  {
    void* ptr = &::autodrive::workflow::proto::_PerFusUssHisObjFrame_default_instance_;
    new (ptr) ::autodrive::workflow::proto::PerFusUssHisObjFrame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::autodrive::workflow::proto::PerFusUssHisObjFrame::InitAsDefaultInstance();
}

void InitDefaultsPerFusUssHisObjFrame() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPerFusUssHisObjFrameImpl);
}

void InitDefaultsPerFusUssObjImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_uss_5fbase_2eproto::InitDefaultsUssPoint();
  protobuf_uss_5fobstacles_2eproto::InitDefaultsPerFusUssHisObjFrame();
  {
    void* ptr = &::autodrive::workflow::proto::_PerFusUssObj_default_instance_;
    new (ptr) ::autodrive::workflow::proto::PerFusUssObj();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::autodrive::workflow::proto::PerFusUssObj::InitAsDefaultInstance();
}

void InitDefaultsPerFusUssObj() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPerFusUssObjImpl);
}

void InitDefaultsPerFusUssAllCERawDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::autodrive::workflow::proto::_PerFusUssAllCERawData_default_instance_;
    new (ptr) ::autodrive::workflow::proto::PerFusUssAllCERawData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::autodrive::workflow::proto::PerFusUssAllCERawData::InitAsDefaultInstance();
}

void InitDefaultsPerFusUssAllCERawData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPerFusUssAllCERawDataImpl);
}

void InitDefaultsUssObstaclesMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2eproto::InitDefaultsMsgHeader();
  protobuf_common_2eproto::InitDefaultsError();
  protobuf_uss_5fbase_2eproto::InitDefaultsPerFusUssHeader();
  protobuf_uss_5fobstacles_2eproto::InitDefaultsPerFusUssRawData();
  protobuf_uss_5fobstacles_2eproto::InitDefaultsPerFusUssLp();
  protobuf_uss_5fobstacles_2eproto::InitDefaultsPerFusUssObj();
  protobuf_uss_5fbase_2eproto::InitDefaultsStateMachine();
  protobuf_uss_5fobstacles_2eproto::InitDefaultsPerFusUssAllCERawData();
  {
    void* ptr = &::autodrive::workflow::proto::_UssObstaclesMsg_default_instance_;
    new (ptr) ::autodrive::workflow::proto::UssObstaclesMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::autodrive::workflow::proto::UssObstaclesMsg::InitAsDefaultInstance();
}

void InitDefaultsUssObstaclesMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUssObstaclesMsgImpl);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssRawData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssRawData, bind_zone_flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssRawData, ring_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssRawData, bind_zone_dis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssRawData, time_diff_tx_rx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssRawData, env_noise_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssRawData, echo_dist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssRawData, echo_cfd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssRawData, echo_high_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssRawData, echo_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssRawData, echo_mt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssRawData, echo_send_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssRawData, per_fus_sns_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssRawData, per_fus_echo_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssRawData, per_fus_echo_source_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssLp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssLp, lp_id_ui8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssLp, lp_de_echo_cnt_ui8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssLp, lp_ce_echo_cnt_ui8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssLp, lp_attributes_en_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssLp, lp_dist_sens_a_ui16_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssLp, lp_dist_sens_b_ui16_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssLp, lp_corr_l1_ui16_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssLp, lp_corr_l2_ui16_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssLp, lp_dir_en_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssLp, lp_sns_group_id_en_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssLp, lp_type_en_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssLp, lp_id_finish_timestamp_si64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssLp, lp_pos_1_st_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssLp, lp_pos_2_st_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssLp, lp_pos_3_st_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssHisObjFrame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssHisObjFrame, lp_type_en_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssHisObjFrame, finish_timestamp_si64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssHisObjFrame, uss_obj_points_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssObj, uss_obj_x_id_ui8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssObj, uss_obj_x_cfd_ui8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssObj, uss_obj_x_type_en_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssObj, uss_obj_x_height_en_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssObj, uss_obj_x_on_course_en_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssObj, finish_timestamp_si64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssObj, uss_obj_x_pos_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssObj, uss_obj_x_pos_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssObj, uss_obj_x_err_pos_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssObj, uss_obj_x_err_pos_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssObj, his_obj_frame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssObj, obj_history_ui8_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce1_to_2distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce2_to_1distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce2_to_3distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce3_to_2distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce3_to_4distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce4_to_3distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce4_to_5distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce5_to_4distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce5_to_6distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce6_to_5distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce7_to_8distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce8_to_7distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce8_to_9distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce9_to_8distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce9_to_10distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce10_to_9distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce10_to_11distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce11_to_10distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce11_to_12distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce12_to_11distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce1_to_2timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce2_to_1timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce2_to_3timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce3_to_2timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce3_to_4timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce4_to_3timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce4_to_5timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce5_to_4timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce5_to_6timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce6_to_5timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce7_to_8timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce8_to_7timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce8_to_9timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce9_to_8timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce9_to_10timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce10_to_9timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce10_to_11timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce11_to_10timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce11_to_12timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::PerFusUssAllCERawData, ce12_to_11timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssObstaclesMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssObstaclesMsg, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssObstaclesMsg, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssObstaclesMsg, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssObstaclesMsg, uss_header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssObstaclesMsg, uss_raw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssObstaclesMsg, uss_lp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssObstaclesMsg, uss_obj_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssObstaclesMsg, state_machine_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssObstaclesMsg, sensor_stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssObstaclesMsg, sample_stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssObstaclesMsg, raw_array_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autodrive::workflow::proto::UssObstaclesMsg, uss_ce_raw_obj_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::autodrive::workflow::proto::PerFusUssRawData)},
  { 19, -1, sizeof(::autodrive::workflow::proto::PerFusUssLp)},
  { 39, -1, sizeof(::autodrive::workflow::proto::PerFusUssHisObjFrame)},
  { 47, -1, sizeof(::autodrive::workflow::proto::PerFusUssObj)},
  { 64, -1, sizeof(::autodrive::workflow::proto::PerFusUssAllCERawData)},
  { 109, -1, sizeof(::autodrive::workflow::proto::UssObstaclesMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::autodrive::workflow::proto::_PerFusUssRawData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::autodrive::workflow::proto::_PerFusUssLp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::autodrive::workflow::proto::_PerFusUssHisObjFrame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::autodrive::workflow::proto::_PerFusUssObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::autodrive::workflow::proto::_PerFusUssAllCERawData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::autodrive::workflow::proto::_UssObstaclesMsg_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "uss_obstacles.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023uss_obstacles.proto\022\030autodrive.workflo"
      "w.proto\032\014common.proto\032\016uss_base.proto\"\305\003"
      "\n\020PerFusUssRawData\022\026\n\016bind_zone_flag\030\001 \001"
      "(\r\022\021\n\tring_time\030\002 \001(\r\022\025\n\rbind_zone_dis\030\003"
      " \001(\r\022\027\n\017time_diff_tx_rx\030\004 \001(\r\022\021\n\tenv_noi"
      "se\030\005 \001(\r\022\021\n\techo_dist\030\006 \003(\r\022\020\n\010echo_cfd\030"
      "\007 \003(\r\022\021\n\techo_high\030\010 \003(\r\022\022\n\necho_width\030\t"
      " \003(\r\022\017\n\007echo_mt\030\n \003(\r\022\033\n\023echo_send_times"
      "tamp\030\013 \001(\004\022=\n\016per_fus_sns_id\030\014 \001(\0162%.aut"
      "odrive.workflow.proto.PerFusSnsID\022C\n\021per"
      "_fus_echo_mode\030\r \001(\0162(.autodrive.workflo"
      "w.proto.PerFusEchoMode\022E\n\026per_fus_echo_s"
      "ource_id\030\016 \001(\0162%.autodrive.workflow.prot"
      "o.PerFusSnsID\"\214\005\n\013PerFusUssLp\022\021\n\tlp_id_u"
      "i8\030\001 \001(\r\022\032\n\022lp_de_echo_cnt_ui8\030\002 \001(\r\022\032\n\022"
      "lp_ce_echo_cnt_ui8\030\003 \001(\r\022B\n\020lp_attribute"
      "s_en\030\004 \001(\0162(.autodrive.workflow.proto.Lp"
      "AttributesEn\022\033\n\023lp_dist_sens_a_ui16\030\005 \001("
      "\r\022\033\n\023lp_dist_sens_b_ui16\030\006 \001(\r\022\027\n\017lp_cor"
      "r_l1_ui16\030\007 \001(\r\022\027\n\017lp_corr_l2_ui16\030\010 \001(\r"
      "\0224\n\tlp_dir_en\030\t \001(\0162!.autodrive.workflow"
      ".proto.LpDirEn\022D\n\022lp_sns_group_id_en\030\n \001"
      "(\0162(.autodrive.workflow.proto.LpSnsGroup"
      "IdEn\0226\n\nlp_type_en\030\013 \001(\0162\".autodrive.wor"
      "kflow.proto.LpTypeEn\022#\n\033lp_id_finish_tim"
      "estamp_si64\030\014 \001(\003\0227\n\013lp_pos_1_st\030\r \001(\0132\""
      ".autodrive.workflow.proto.UssPoint\0227\n\013lp"
      "_pos_2_st\030\016 \001(\0132\".autodrive.workflow.pro"
      "to.UssPoint\0227\n\013lp_pos_3_st\030\017 \001(\0132\".autod"
      "rive.workflow.proto.UssPoint\"\251\001\n\024PerFusU"
      "ssHisObjFrame\0226\n\nlp_type_en\030\001 \003(\0162\".auto"
      "drive.workflow.proto.LpTypeEn\022\035\n\025finish_"
      "timestamp_si64\030\002 \003(\003\022:\n\016uss_obj_points\030\003"
      " \003(\0132\".autodrive.workflow.proto.UssPoint"
      "\"\227\005\n\014PerFusUssObj\022\030\n\020uss_obj_x_id_ui8\030\001 "
      "\001(\r\022\031\n\021uss_obj_x_cfd_ui8\030\002 \001(\r\022B\n\021uss_ob"
      "j_x_type_en\030\003 \001(\0162\'.autodrive.workflow.p"
      "roto.UssObjXTypeEn\022F\n\023uss_obj_x_height_e"
      "n\030\004 \001(\0162).autodrive.workflow.proto.UssOb"
      "jXHeightEn\022K\n\026uss_obj_x_on_course_en\030\005 \001"
      "(\0162+.autodrive.workflow.proto.UssObjXOnC"
      "ourseEn\022\035\n\025finish_timestamp_si64\030\006 \001(\003\022;"
      "\n\017uss_obj_x_pos_1\030\007 \001(\0132\".autodrive.work"
      "flow.proto.UssPoint\022;\n\017uss_obj_x_pos_2\030\010"
      " \001(\0132\".autodrive.workflow.proto.UssPoint"
      "\022\?\n\023uss_obj_x_err_pos_1\030\t \001(\0132\".autodriv"
      "e.workflow.proto.UssPoint\022\?\n\023uss_obj_x_e"
      "rr_pos_2\030\n \001(\0132\".autodrive.workflow.prot"
      "o.UssPoint\022E\n\rhis_obj_frame\030\013 \001(\0132..auto"
      "drive.workflow.proto.PerFusUssHisObjFram"
      "e\022\027\n\017obj_history_ui8\030\014 \001(\r\"\317\010\n\025PerFusUss"
      "AllCERawData\022\030\n\020ce1_to_2distance\030\001 \001(\r\022\030"
      "\n\020ce2_to_1distance\030\002 \001(\r\022\030\n\020ce2_to_3dist"
      "ance\030\003 \001(\r\022\030\n\020ce3_to_2distance\030\004 \001(\r\022\030\n\020"
      "ce3_to_4distance\030\005 \001(\r\022\030\n\020ce4_to_3distan"
      "ce\030\006 \001(\r\022\030\n\020ce4_to_5distance\030\007 \001(\r\022\030\n\020ce"
      "5_to_4distance\030\010 \001(\r\022\030\n\020ce5_to_6distance"
      "\030\t \001(\r\022\030\n\020ce6_to_5distance\030\n \001(\r\022\030\n\020ce7_"
      "to_8distance\030\013 \001(\r\022\030\n\020ce8_to_7distance\030\014"
      " \001(\r\022\030\n\020ce8_to_9distance\030\r \001(\r\022\030\n\020ce9_to"
      "_8distance\030\016 \001(\r\022\031\n\021ce9_to_10distance\030\017 "
      "\001(\r\022\031\n\021ce10_to_9distance\030\020 \001(\r\022\032\n\022ce10_t"
      "o_11distance\030\021 \001(\r\022\032\n\022ce11_to_10distance"
      "\030\022 \001(\r\022\032\n\022ce11_to_12distance\030\023 \001(\r\022\032\n\022ce"
      "12_to_11distance\030\024 \001(\r\022\031\n\021ce1_to_2timest"
      "amp\030\025 \001(\003\022\031\n\021ce2_to_1timestamp\030\026 \001(\003\022\031\n\021"
      "ce2_to_3timestamp\030\027 \001(\003\022\031\n\021ce3_to_2times"
      "tamp\030\030 \001(\003\022\031\n\021ce3_to_4timestamp\030\031 \001(\003\022\031\n"
      "\021ce4_to_3timestamp\030\032 \001(\003\022\031\n\021ce4_to_5time"
      "stamp\030\033 \001(\003\022\031\n\021ce5_to_4timestamp\030\034 \001(\003\022\031"
      "\n\021ce5_to_6timestamp\030\035 \001(\003\022\031\n\021ce6_to_5tim"
      "estamp\030\036 \001(\003\022\031\n\021ce7_to_8timestamp\030\037 \001(\003\022"
      "\031\n\021ce8_to_7timestamp\030  \001(\003\022\031\n\021ce8_to_9ti"
      "mestamp\030! \001(\003\022\031\n\021ce9_to_8timestamp\030\" \001(\003"
      "\022\032\n\022ce9_to_10timestamp\030# \001(\003\022\032\n\022ce10_to_"
      "9timestamp\030$ \001(\003\022\033\n\023ce10_to_11timestamp\030"
      "% \001(\003\022\033\n\023ce11_to_10timestamp\030& \001(\003\022\033\n\023ce"
      "11_to_12timestamp\030\' \001(\003\022\033\n\023ce12_to_11tim"
      "estamp\030( \001(\003\"\272\004\n\017UssObstaclesMsg\0223\n\006head"
      "er\030\001 \001(\0132#.autodrive.workflow.proto.MsgH"
      "eader\022.\n\005error\030\002 \001(\0132\037.autodrive.workflo"
      "w.proto.Error\022\017\n\007version\030\003 \001(\005\022=\n\nuss_he"
      "ader\030\004 \003(\0132).autodrive.workflow.proto.Pe"
      "rFusUssHeader\022;\n\007uss_raw\030\005 \003(\0132*.autodri"
      "ve.workflow.proto.PerFusUssRawData\0225\n\006us"
      "s_lp\030\006 \003(\0132%.autodrive.workflow.proto.Pe"
      "rFusUssLp\0227\n\007uss_obj\030\007 \003(\0132&.autodrive.w"
      "orkflow.proto.PerFusUssObj\022=\n\rstate_mach"
      "ine\030\010 \001(\0132&.autodrive.workflow.proto.Sta"
      "teMachine\022\024\n\014sensor_stamp\030\t \001(\003\022\024\n\014sampl"
      "e_stamp\030\n \001(\003\022\021\n\traw_array\030\013 \003(\r\022G\n\016uss_"
      "ce_raw_obj\030\014 \001(\0132/.autodrive.workflow.pr"
      "oto.PerFusUssAllCERawData*\237\002\n\013PerFusSnsI"
      "D\022\024\n\020kPerFusSnsIDNone\020\000\022\021\n\rkPerFusSnsID1"
      "\020\001\022\021\n\rkPerFusSnsID2\020\002\022\021\n\rkPerFusSnsID3\020\003"
      "\022\021\n\rkPerFusSnsID4\020\004\022\021\n\rkPerFusSnsID5\020\005\022\021"
      "\n\rkPerFusSnsID6\020\006\022\021\n\rkPerFusSnsID7\020\007\022\021\n\r"
      "kPerFusSnsID8\020\010\022\021\n\rkPerFusSnsID9\020\t\022\022\n\016kP"
      "erFusSnsID10\020\n\022\022\n\016kPerFusSnsID11\020\013\022\022\n\016kP"
      "erFusSnsID12\020\014\022\023\n\017kPerFusSnsIDMax\020\r*o\n\016P"
      "erFusEchoMode\022\027\n\023kPerFusEchoModeNone\020\000\022\025"
      "\n\021kPerFusEchoModeDE\020\001\022\025\n\021kPerFusEchoMode"
      "CE\020\002\022\026\n\022kPerFusEchoModeMax\020\003*\221\001\n\016LpAttri"
      "butesEn\022\027\n\023kLpAttributesEnNone\020\000\022\027\n\023kLpA"
      "ttributesEnSure\020\001\022\031\n\025kLpAttributesEnUnsu"
      "re\020\002\022\032\n\026kLpAttributesEnUnknown\020\003\022\026\n\022kLpA"
      "ttributesEnMax\020\004*\212\001\n\007LpDirEn\022\020\n\014kLpDirEn"
      "None\020\000\022\021\n\rkLpDirEnFront\020\001\022\020\n\014kLpDirEnRea"
      "r\020\002\022\020\n\014kLpDirEnLeft\020\003\022\021\n\rkLpDirEnRight\020\004"
      "\022\022\n\016kLpDirEnInside\020\005\022\017\n\013kLpDirEnMax\020\006*\266\002"
      "\n\016LpSnsGroupIdEn\022\027\n\023kLpSnsGroupIdEnNone\020"
      "\000\022\026\n\022kLpSnsGroupIdEn1_2\020\001\022\026\n\022kLpSnsGroup"
      "IdEn2_3\020\002\022\026\n\022kLpSnsGroupIdEn3_4\020\003\022\026\n\022kLp"
      "SnsGroupIdEn4_5\020\004\022\026\n\022kLpSnsGroupIdEn5_6\020"
      "\005\022\030\n\024kLpSnsGroupIdEn11_12\020\006\022\030\n\024kLpSnsGro"
      "upIdEn10_11\020\007\022\027\n\023kLpSnsGroupIdEn9_10\020\010\022\026"
      "\n\022kLpSnsGroupIdEn8_9\020\t\022\026\n\022kLpSnsGroupIdE"
      "n7_8\020\n\022\026\n\022kLpSnsGroupIdEnMax\020\013*\237\001\n\010LpTyp"
      "eEn\022\021\n\rkLpTypeEnNone\020\000\022\017\n\013kLpTypeEnDe\020\001\022"
      "\021\n\rkLpTypeEnDeDe\020\002\022\017\n\013kLpTypeEnCe\020\003\022\021\n\rk"
      "LpTypeEnDeCe\020\004\022\022\n\016kLpTypeEnRound\020\005\022\022\n\016kL"
      "pTypeEnOther\020\006\022\020\n\014kLpTypeEnMax\020\007*\261\001\n\rUss"
      "ObjXTypeEn\022\026\n\022kUssObjXTypeEnNone\020\000\022\027\n\023kU"
      "ssObjXTypeEnPoint\020\001\022\034\n\030kUssObjXTypeEnStr"
      "aight0C\020\002\022\034\n\030kUssObjXTypeEnStraight1C\020\003\022"
      "\034\n\030kUssObjXTypeEnStraight2C\020\004\022\025\n\021kUssObj"
      "XTypeEnMax\020\005*\223\001\n\017UssObjXHeightEn\022\030\n\024kUss"
      "ObjXHeightEnNone\020\000\022\027\n\023kUssObjXHeightEnLo"
      "w\020\001\022\030\n\024kUssObjXHeightEnHigh\020\002\022\032\n\026kUssObj"
      "XHeightEnUnknow\020\003\022\027\n\023kUssObjXHeightEnMax"
      "\020\004*\215\001\n\021UssObjXOnCourseEn\022\032\n\026kUssObjXOnCo"
      "urseEnNone\020\000\022\036\n\032kUssObjXOnCourseEnOnCour"
      "se\020\001\022!\n\035kUssObjXOnCourseEnNotOnCourse\020\002\022"
      "\031\n\025kUssObjXOnCourseEnMax\020\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5354);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "uss_obstacles.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2eproto::AddDescriptors();
  ::protobuf_uss_5fbase_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_uss_5fobstacles_2eproto
namespace autodrive {
namespace workflow {
namespace proto {
const ::google::protobuf::EnumDescriptor* PerFusSnsID_descriptor() {
  protobuf_uss_5fobstacles_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_uss_5fobstacles_2eproto::file_level_enum_descriptors[0];
}
bool PerFusSnsID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PerFusEchoMode_descriptor() {
  protobuf_uss_5fobstacles_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_uss_5fobstacles_2eproto::file_level_enum_descriptors[1];
}
bool PerFusEchoMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LpAttributesEn_descriptor() {
  protobuf_uss_5fobstacles_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_uss_5fobstacles_2eproto::file_level_enum_descriptors[2];
}
bool LpAttributesEn_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LpDirEn_descriptor() {
  protobuf_uss_5fobstacles_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_uss_5fobstacles_2eproto::file_level_enum_descriptors[3];
}
bool LpDirEn_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LpSnsGroupIdEn_descriptor() {
  protobuf_uss_5fobstacles_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_uss_5fobstacles_2eproto::file_level_enum_descriptors[4];
}
bool LpSnsGroupIdEn_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LpTypeEn_descriptor() {
  protobuf_uss_5fobstacles_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_uss_5fobstacles_2eproto::file_level_enum_descriptors[5];
}
bool LpTypeEn_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* UssObjXTypeEn_descriptor() {
  protobuf_uss_5fobstacles_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_uss_5fobstacles_2eproto::file_level_enum_descriptors[6];
}
bool UssObjXTypeEn_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* UssObjXHeightEn_descriptor() {
  protobuf_uss_5fobstacles_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_uss_5fobstacles_2eproto::file_level_enum_descriptors[7];
}
bool UssObjXHeightEn_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* UssObjXOnCourseEn_descriptor() {
  protobuf_uss_5fobstacles_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_uss_5fobstacles_2eproto::file_level_enum_descriptors[8];
}
bool UssObjXOnCourseEn_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PerFusUssRawData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PerFusUssRawData::kBindZoneFlagFieldNumber;
const int PerFusUssRawData::kRingTimeFieldNumber;
const int PerFusUssRawData::kBindZoneDisFieldNumber;
const int PerFusUssRawData::kTimeDiffTxRxFieldNumber;
const int PerFusUssRawData::kEnvNoiseFieldNumber;
const int PerFusUssRawData::kEchoDistFieldNumber;
const int PerFusUssRawData::kEchoCfdFieldNumber;
const int PerFusUssRawData::kEchoHighFieldNumber;
const int PerFusUssRawData::kEchoWidthFieldNumber;
const int PerFusUssRawData::kEchoMtFieldNumber;
const int PerFusUssRawData::kEchoSendTimestampFieldNumber;
const int PerFusUssRawData::kPerFusSnsIdFieldNumber;
const int PerFusUssRawData::kPerFusEchoModeFieldNumber;
const int PerFusUssRawData::kPerFusEchoSourceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PerFusUssRawData::PerFusUssRawData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_uss_5fobstacles_2eproto::InitDefaultsPerFusUssRawData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:autodrive.workflow.proto.PerFusUssRawData)
}
PerFusUssRawData::PerFusUssRawData(const PerFusUssRawData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      echo_dist_(from.echo_dist_),
      echo_cfd_(from.echo_cfd_),
      echo_high_(from.echo_high_),
      echo_width_(from.echo_width_),
      echo_mt_(from.echo_mt_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bind_zone_flag_, &from.bind_zone_flag_,
    static_cast<size_t>(reinterpret_cast<char*>(&per_fus_echo_source_id_) -
    reinterpret_cast<char*>(&bind_zone_flag_)) + sizeof(per_fus_echo_source_id_));
  // @@protoc_insertion_point(copy_constructor:autodrive.workflow.proto.PerFusUssRawData)
}

void PerFusUssRawData::SharedCtor() {
  ::memset(&bind_zone_flag_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&per_fus_echo_source_id_) -
      reinterpret_cast<char*>(&bind_zone_flag_)) + sizeof(per_fus_echo_source_id_));
  _cached_size_ = 0;
}

PerFusUssRawData::~PerFusUssRawData() {
  // @@protoc_insertion_point(destructor:autodrive.workflow.proto.PerFusUssRawData)
  SharedDtor();
}

void PerFusUssRawData::SharedDtor() {
}

void PerFusUssRawData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PerFusUssRawData::descriptor() {
  ::protobuf_uss_5fobstacles_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uss_5fobstacles_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PerFusUssRawData& PerFusUssRawData::default_instance() {
  ::protobuf_uss_5fobstacles_2eproto::InitDefaultsPerFusUssRawData();
  return *internal_default_instance();
}

PerFusUssRawData* PerFusUssRawData::New(::google::protobuf::Arena* arena) const {
  PerFusUssRawData* n = new PerFusUssRawData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PerFusUssRawData::Clear() {
// @@protoc_insertion_point(message_clear_start:autodrive.workflow.proto.PerFusUssRawData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  echo_dist_.Clear();
  echo_cfd_.Clear();
  echo_high_.Clear();
  echo_width_.Clear();
  echo_mt_.Clear();
  ::memset(&bind_zone_flag_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&per_fus_echo_source_id_) -
      reinterpret_cast<char*>(&bind_zone_flag_)) + sizeof(per_fus_echo_source_id_));
  _internal_metadata_.Clear();
}

bool PerFusUssRawData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:autodrive.workflow.proto.PerFusUssRawData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 bind_zone_flag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bind_zone_flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ring_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ring_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bind_zone_dis = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bind_zone_dis_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 time_diff_tx_rx = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_diff_tx_rx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 env_noise = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &env_noise_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 echo_dist = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_echo_dist())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 50u, input, this->mutable_echo_dist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 echo_cfd = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_echo_cfd())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 58u, input, this->mutable_echo_cfd())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 echo_high = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_echo_high())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 66u, input, this->mutable_echo_high())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 echo_width = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_echo_width())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 74u, input, this->mutable_echo_width())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 echo_mt = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_echo_mt())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 82u, input, this->mutable_echo_mt())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 echo_send_timestamp = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &echo_send_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.PerFusSnsID per_fus_sns_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_per_fus_sns_id(static_cast< ::autodrive::workflow::proto::PerFusSnsID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.PerFusEchoMode per_fus_echo_mode = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_per_fus_echo_mode(static_cast< ::autodrive::workflow::proto::PerFusEchoMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.PerFusSnsID per_fus_echo_source_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_per_fus_echo_source_id(static_cast< ::autodrive::workflow::proto::PerFusSnsID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:autodrive.workflow.proto.PerFusUssRawData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:autodrive.workflow.proto.PerFusUssRawData)
  return false;
#undef DO_
}

void PerFusUssRawData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:autodrive.workflow.proto.PerFusUssRawData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bind_zone_flag = 1;
  if (this->bind_zone_flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bind_zone_flag(), output);
  }

  // uint32 ring_time = 2;
  if (this->ring_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ring_time(), output);
  }

  // uint32 bind_zone_dis = 3;
  if (this->bind_zone_dis() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->bind_zone_dis(), output);
  }

  // uint32 time_diff_tx_rx = 4;
  if (this->time_diff_tx_rx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->time_diff_tx_rx(), output);
  }

  // uint32 env_noise = 5;
  if (this->env_noise() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->env_noise(), output);
  }

  // repeated uint32 echo_dist = 6;
  if (this->echo_dist_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _echo_dist_cached_byte_size_));
  }
  for (int i = 0, n = this->echo_dist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->echo_dist(i), output);
  }

  // repeated uint32 echo_cfd = 7;
  if (this->echo_cfd_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _echo_cfd_cached_byte_size_));
  }
  for (int i = 0, n = this->echo_cfd_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->echo_cfd(i), output);
  }

  // repeated uint32 echo_high = 8;
  if (this->echo_high_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _echo_high_cached_byte_size_));
  }
  for (int i = 0, n = this->echo_high_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->echo_high(i), output);
  }

  // repeated uint32 echo_width = 9;
  if (this->echo_width_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _echo_width_cached_byte_size_));
  }
  for (int i = 0, n = this->echo_width_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->echo_width(i), output);
  }

  // repeated uint32 echo_mt = 10;
  if (this->echo_mt_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _echo_mt_cached_byte_size_));
  }
  for (int i = 0, n = this->echo_mt_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->echo_mt(i), output);
  }

  // uint64 echo_send_timestamp = 11;
  if (this->echo_send_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->echo_send_timestamp(), output);
  }

  // .autodrive.workflow.proto.PerFusSnsID per_fus_sns_id = 12;
  if (this->per_fus_sns_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->per_fus_sns_id(), output);
  }

  // .autodrive.workflow.proto.PerFusEchoMode per_fus_echo_mode = 13;
  if (this->per_fus_echo_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->per_fus_echo_mode(), output);
  }

  // .autodrive.workflow.proto.PerFusSnsID per_fus_echo_source_id = 14;
  if (this->per_fus_echo_source_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->per_fus_echo_source_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:autodrive.workflow.proto.PerFusUssRawData)
}

::google::protobuf::uint8* PerFusUssRawData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:autodrive.workflow.proto.PerFusUssRawData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bind_zone_flag = 1;
  if (this->bind_zone_flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bind_zone_flag(), target);
  }

  // uint32 ring_time = 2;
  if (this->ring_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ring_time(), target);
  }

  // uint32 bind_zone_dis = 3;
  if (this->bind_zone_dis() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->bind_zone_dis(), target);
  }

  // uint32 time_diff_tx_rx = 4;
  if (this->time_diff_tx_rx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->time_diff_tx_rx(), target);
  }

  // uint32 env_noise = 5;
  if (this->env_noise() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->env_noise(), target);
  }

  // repeated uint32 echo_dist = 6;
  if (this->echo_dist_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _echo_dist_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->echo_dist_, target);
  }

  // repeated uint32 echo_cfd = 7;
  if (this->echo_cfd_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _echo_cfd_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->echo_cfd_, target);
  }

  // repeated uint32 echo_high = 8;
  if (this->echo_high_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _echo_high_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->echo_high_, target);
  }

  // repeated uint32 echo_width = 9;
  if (this->echo_width_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _echo_width_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->echo_width_, target);
  }

  // repeated uint32 echo_mt = 10;
  if (this->echo_mt_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _echo_mt_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->echo_mt_, target);
  }

  // uint64 echo_send_timestamp = 11;
  if (this->echo_send_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->echo_send_timestamp(), target);
  }

  // .autodrive.workflow.proto.PerFusSnsID per_fus_sns_id = 12;
  if (this->per_fus_sns_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->per_fus_sns_id(), target);
  }

  // .autodrive.workflow.proto.PerFusEchoMode per_fus_echo_mode = 13;
  if (this->per_fus_echo_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->per_fus_echo_mode(), target);
  }

  // .autodrive.workflow.proto.PerFusSnsID per_fus_echo_source_id = 14;
  if (this->per_fus_echo_source_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->per_fus_echo_source_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autodrive.workflow.proto.PerFusUssRawData)
  return target;
}

size_t PerFusUssRawData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autodrive.workflow.proto.PerFusUssRawData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 echo_dist = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->echo_dist_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _echo_dist_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 echo_cfd = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->echo_cfd_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _echo_cfd_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 echo_high = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->echo_high_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _echo_high_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 echo_width = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->echo_width_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _echo_width_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 echo_mt = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->echo_mt_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _echo_mt_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 bind_zone_flag = 1;
  if (this->bind_zone_flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bind_zone_flag());
  }

  // uint32 ring_time = 2;
  if (this->ring_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ring_time());
  }

  // uint32 bind_zone_dis = 3;
  if (this->bind_zone_dis() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bind_zone_dis());
  }

  // uint32 time_diff_tx_rx = 4;
  if (this->time_diff_tx_rx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->time_diff_tx_rx());
  }

  // uint32 env_noise = 5;
  if (this->env_noise() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->env_noise());
  }

  // .autodrive.workflow.proto.PerFusSnsID per_fus_sns_id = 12;
  if (this->per_fus_sns_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->per_fus_sns_id());
  }

  // uint64 echo_send_timestamp = 11;
  if (this->echo_send_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->echo_send_timestamp());
  }

  // .autodrive.workflow.proto.PerFusEchoMode per_fus_echo_mode = 13;
  if (this->per_fus_echo_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->per_fus_echo_mode());
  }

  // .autodrive.workflow.proto.PerFusSnsID per_fus_echo_source_id = 14;
  if (this->per_fus_echo_source_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->per_fus_echo_source_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PerFusUssRawData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:autodrive.workflow.proto.PerFusUssRawData)
  GOOGLE_DCHECK_NE(&from, this);
  const PerFusUssRawData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PerFusUssRawData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:autodrive.workflow.proto.PerFusUssRawData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:autodrive.workflow.proto.PerFusUssRawData)
    MergeFrom(*source);
  }
}

void PerFusUssRawData::MergeFrom(const PerFusUssRawData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:autodrive.workflow.proto.PerFusUssRawData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  echo_dist_.MergeFrom(from.echo_dist_);
  echo_cfd_.MergeFrom(from.echo_cfd_);
  echo_high_.MergeFrom(from.echo_high_);
  echo_width_.MergeFrom(from.echo_width_);
  echo_mt_.MergeFrom(from.echo_mt_);
  if (from.bind_zone_flag() != 0) {
    set_bind_zone_flag(from.bind_zone_flag());
  }
  if (from.ring_time() != 0) {
    set_ring_time(from.ring_time());
  }
  if (from.bind_zone_dis() != 0) {
    set_bind_zone_dis(from.bind_zone_dis());
  }
  if (from.time_diff_tx_rx() != 0) {
    set_time_diff_tx_rx(from.time_diff_tx_rx());
  }
  if (from.env_noise() != 0) {
    set_env_noise(from.env_noise());
  }
  if (from.per_fus_sns_id() != 0) {
    set_per_fus_sns_id(from.per_fus_sns_id());
  }
  if (from.echo_send_timestamp() != 0) {
    set_echo_send_timestamp(from.echo_send_timestamp());
  }
  if (from.per_fus_echo_mode() != 0) {
    set_per_fus_echo_mode(from.per_fus_echo_mode());
  }
  if (from.per_fus_echo_source_id() != 0) {
    set_per_fus_echo_source_id(from.per_fus_echo_source_id());
  }
}

void PerFusUssRawData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:autodrive.workflow.proto.PerFusUssRawData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PerFusUssRawData::CopyFrom(const PerFusUssRawData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autodrive.workflow.proto.PerFusUssRawData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerFusUssRawData::IsInitialized() const {
  return true;
}

void PerFusUssRawData::Swap(PerFusUssRawData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PerFusUssRawData::InternalSwap(PerFusUssRawData* other) {
  using std::swap;
  echo_dist_.InternalSwap(&other->echo_dist_);
  echo_cfd_.InternalSwap(&other->echo_cfd_);
  echo_high_.InternalSwap(&other->echo_high_);
  echo_width_.InternalSwap(&other->echo_width_);
  echo_mt_.InternalSwap(&other->echo_mt_);
  swap(bind_zone_flag_, other->bind_zone_flag_);
  swap(ring_time_, other->ring_time_);
  swap(bind_zone_dis_, other->bind_zone_dis_);
  swap(time_diff_tx_rx_, other->time_diff_tx_rx_);
  swap(env_noise_, other->env_noise_);
  swap(per_fus_sns_id_, other->per_fus_sns_id_);
  swap(echo_send_timestamp_, other->echo_send_timestamp_);
  swap(per_fus_echo_mode_, other->per_fus_echo_mode_);
  swap(per_fus_echo_source_id_, other->per_fus_echo_source_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PerFusUssRawData::GetMetadata() const {
  protobuf_uss_5fobstacles_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uss_5fobstacles_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PerFusUssLp::InitAsDefaultInstance() {
  ::autodrive::workflow::proto::_PerFusUssLp_default_instance_._instance.get_mutable()->lp_pos_1_st_ = const_cast< ::autodrive::workflow::proto::UssPoint*>(
      ::autodrive::workflow::proto::UssPoint::internal_default_instance());
  ::autodrive::workflow::proto::_PerFusUssLp_default_instance_._instance.get_mutable()->lp_pos_2_st_ = const_cast< ::autodrive::workflow::proto::UssPoint*>(
      ::autodrive::workflow::proto::UssPoint::internal_default_instance());
  ::autodrive::workflow::proto::_PerFusUssLp_default_instance_._instance.get_mutable()->lp_pos_3_st_ = const_cast< ::autodrive::workflow::proto::UssPoint*>(
      ::autodrive::workflow::proto::UssPoint::internal_default_instance());
}
void PerFusUssLp::clear_lp_pos_1_st() {
  if (GetArenaNoVirtual() == NULL && lp_pos_1_st_ != NULL) {
    delete lp_pos_1_st_;
  }
  lp_pos_1_st_ = NULL;
}
void PerFusUssLp::clear_lp_pos_2_st() {
  if (GetArenaNoVirtual() == NULL && lp_pos_2_st_ != NULL) {
    delete lp_pos_2_st_;
  }
  lp_pos_2_st_ = NULL;
}
void PerFusUssLp::clear_lp_pos_3_st() {
  if (GetArenaNoVirtual() == NULL && lp_pos_3_st_ != NULL) {
    delete lp_pos_3_st_;
  }
  lp_pos_3_st_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PerFusUssLp::kLpIdUi8FieldNumber;
const int PerFusUssLp::kLpDeEchoCntUi8FieldNumber;
const int PerFusUssLp::kLpCeEchoCntUi8FieldNumber;
const int PerFusUssLp::kLpAttributesEnFieldNumber;
const int PerFusUssLp::kLpDistSensAUi16FieldNumber;
const int PerFusUssLp::kLpDistSensBUi16FieldNumber;
const int PerFusUssLp::kLpCorrL1Ui16FieldNumber;
const int PerFusUssLp::kLpCorrL2Ui16FieldNumber;
const int PerFusUssLp::kLpDirEnFieldNumber;
const int PerFusUssLp::kLpSnsGroupIdEnFieldNumber;
const int PerFusUssLp::kLpTypeEnFieldNumber;
const int PerFusUssLp::kLpIdFinishTimestampSi64FieldNumber;
const int PerFusUssLp::kLpPos1StFieldNumber;
const int PerFusUssLp::kLpPos2StFieldNumber;
const int PerFusUssLp::kLpPos3StFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PerFusUssLp::PerFusUssLp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_uss_5fobstacles_2eproto::InitDefaultsPerFusUssLp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:autodrive.workflow.proto.PerFusUssLp)
}
PerFusUssLp::PerFusUssLp(const PerFusUssLp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lp_pos_1_st()) {
    lp_pos_1_st_ = new ::autodrive::workflow::proto::UssPoint(*from.lp_pos_1_st_);
  } else {
    lp_pos_1_st_ = NULL;
  }
  if (from.has_lp_pos_2_st()) {
    lp_pos_2_st_ = new ::autodrive::workflow::proto::UssPoint(*from.lp_pos_2_st_);
  } else {
    lp_pos_2_st_ = NULL;
  }
  if (from.has_lp_pos_3_st()) {
    lp_pos_3_st_ = new ::autodrive::workflow::proto::UssPoint(*from.lp_pos_3_st_);
  } else {
    lp_pos_3_st_ = NULL;
  }
  ::memcpy(&lp_id_ui8_, &from.lp_id_ui8_,
    static_cast<size_t>(reinterpret_cast<char*>(&lp_type_en_) -
    reinterpret_cast<char*>(&lp_id_ui8_)) + sizeof(lp_type_en_));
  // @@protoc_insertion_point(copy_constructor:autodrive.workflow.proto.PerFusUssLp)
}

void PerFusUssLp::SharedCtor() {
  ::memset(&lp_pos_1_st_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lp_type_en_) -
      reinterpret_cast<char*>(&lp_pos_1_st_)) + sizeof(lp_type_en_));
  _cached_size_ = 0;
}

PerFusUssLp::~PerFusUssLp() {
  // @@protoc_insertion_point(destructor:autodrive.workflow.proto.PerFusUssLp)
  SharedDtor();
}

void PerFusUssLp::SharedDtor() {
  if (this != internal_default_instance()) delete lp_pos_1_st_;
  if (this != internal_default_instance()) delete lp_pos_2_st_;
  if (this != internal_default_instance()) delete lp_pos_3_st_;
}

void PerFusUssLp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PerFusUssLp::descriptor() {
  ::protobuf_uss_5fobstacles_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uss_5fobstacles_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PerFusUssLp& PerFusUssLp::default_instance() {
  ::protobuf_uss_5fobstacles_2eproto::InitDefaultsPerFusUssLp();
  return *internal_default_instance();
}

PerFusUssLp* PerFusUssLp::New(::google::protobuf::Arena* arena) const {
  PerFusUssLp* n = new PerFusUssLp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PerFusUssLp::Clear() {
// @@protoc_insertion_point(message_clear_start:autodrive.workflow.proto.PerFusUssLp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && lp_pos_1_st_ != NULL) {
    delete lp_pos_1_st_;
  }
  lp_pos_1_st_ = NULL;
  if (GetArenaNoVirtual() == NULL && lp_pos_2_st_ != NULL) {
    delete lp_pos_2_st_;
  }
  lp_pos_2_st_ = NULL;
  if (GetArenaNoVirtual() == NULL && lp_pos_3_st_ != NULL) {
    delete lp_pos_3_st_;
  }
  lp_pos_3_st_ = NULL;
  ::memset(&lp_id_ui8_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lp_type_en_) -
      reinterpret_cast<char*>(&lp_id_ui8_)) + sizeof(lp_type_en_));
  _internal_metadata_.Clear();
}

bool PerFusUssLp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:autodrive.workflow.proto.PerFusUssLp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 lp_id_ui8 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lp_id_ui8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 lp_de_echo_cnt_ui8 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lp_de_echo_cnt_ui8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 lp_ce_echo_cnt_ui8 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lp_ce_echo_cnt_ui8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.LpAttributesEn lp_attributes_en = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_lp_attributes_en(static_cast< ::autodrive::workflow::proto::LpAttributesEn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 lp_dist_sens_a_ui16 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lp_dist_sens_a_ui16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 lp_dist_sens_b_ui16 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lp_dist_sens_b_ui16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 lp_corr_l1_ui16 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lp_corr_l1_ui16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 lp_corr_l2_ui16 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lp_corr_l2_ui16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.LpDirEn lp_dir_en = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_lp_dir_en(static_cast< ::autodrive::workflow::proto::LpDirEn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.LpSnsGroupIdEn lp_sns_group_id_en = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_lp_sns_group_id_en(static_cast< ::autodrive::workflow::proto::LpSnsGroupIdEn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.LpTypeEn lp_type_en = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_lp_type_en(static_cast< ::autodrive::workflow::proto::LpTypeEn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 lp_id_finish_timestamp_si64 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lp_id_finish_timestamp_si64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssPoint lp_pos_1_st = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lp_pos_1_st()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssPoint lp_pos_2_st = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lp_pos_2_st()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssPoint lp_pos_3_st = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lp_pos_3_st()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:autodrive.workflow.proto.PerFusUssLp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:autodrive.workflow.proto.PerFusUssLp)
  return false;
#undef DO_
}

void PerFusUssLp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:autodrive.workflow.proto.PerFusUssLp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 lp_id_ui8 = 1;
  if (this->lp_id_ui8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->lp_id_ui8(), output);
  }

  // uint32 lp_de_echo_cnt_ui8 = 2;
  if (this->lp_de_echo_cnt_ui8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->lp_de_echo_cnt_ui8(), output);
  }

  // uint32 lp_ce_echo_cnt_ui8 = 3;
  if (this->lp_ce_echo_cnt_ui8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->lp_ce_echo_cnt_ui8(), output);
  }

  // .autodrive.workflow.proto.LpAttributesEn lp_attributes_en = 4;
  if (this->lp_attributes_en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->lp_attributes_en(), output);
  }

  // uint32 lp_dist_sens_a_ui16 = 5;
  if (this->lp_dist_sens_a_ui16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->lp_dist_sens_a_ui16(), output);
  }

  // uint32 lp_dist_sens_b_ui16 = 6;
  if (this->lp_dist_sens_b_ui16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->lp_dist_sens_b_ui16(), output);
  }

  // uint32 lp_corr_l1_ui16 = 7;
  if (this->lp_corr_l1_ui16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->lp_corr_l1_ui16(), output);
  }

  // uint32 lp_corr_l2_ui16 = 8;
  if (this->lp_corr_l2_ui16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->lp_corr_l2_ui16(), output);
  }

  // .autodrive.workflow.proto.LpDirEn lp_dir_en = 9;
  if (this->lp_dir_en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->lp_dir_en(), output);
  }

  // .autodrive.workflow.proto.LpSnsGroupIdEn lp_sns_group_id_en = 10;
  if (this->lp_sns_group_id_en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->lp_sns_group_id_en(), output);
  }

  // .autodrive.workflow.proto.LpTypeEn lp_type_en = 11;
  if (this->lp_type_en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->lp_type_en(), output);
  }

  // int64 lp_id_finish_timestamp_si64 = 12;
  if (this->lp_id_finish_timestamp_si64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->lp_id_finish_timestamp_si64(), output);
  }

  // .autodrive.workflow.proto.UssPoint lp_pos_1_st = 13;
  if (this->has_lp_pos_1_st()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->lp_pos_1_st_, output);
  }

  // .autodrive.workflow.proto.UssPoint lp_pos_2_st = 14;
  if (this->has_lp_pos_2_st()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->lp_pos_2_st_, output);
  }

  // .autodrive.workflow.proto.UssPoint lp_pos_3_st = 15;
  if (this->has_lp_pos_3_st()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->lp_pos_3_st_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:autodrive.workflow.proto.PerFusUssLp)
}

::google::protobuf::uint8* PerFusUssLp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:autodrive.workflow.proto.PerFusUssLp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 lp_id_ui8 = 1;
  if (this->lp_id_ui8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->lp_id_ui8(), target);
  }

  // uint32 lp_de_echo_cnt_ui8 = 2;
  if (this->lp_de_echo_cnt_ui8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->lp_de_echo_cnt_ui8(), target);
  }

  // uint32 lp_ce_echo_cnt_ui8 = 3;
  if (this->lp_ce_echo_cnt_ui8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->lp_ce_echo_cnt_ui8(), target);
  }

  // .autodrive.workflow.proto.LpAttributesEn lp_attributes_en = 4;
  if (this->lp_attributes_en() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->lp_attributes_en(), target);
  }

  // uint32 lp_dist_sens_a_ui16 = 5;
  if (this->lp_dist_sens_a_ui16() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->lp_dist_sens_a_ui16(), target);
  }

  // uint32 lp_dist_sens_b_ui16 = 6;
  if (this->lp_dist_sens_b_ui16() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->lp_dist_sens_b_ui16(), target);
  }

  // uint32 lp_corr_l1_ui16 = 7;
  if (this->lp_corr_l1_ui16() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->lp_corr_l1_ui16(), target);
  }

  // uint32 lp_corr_l2_ui16 = 8;
  if (this->lp_corr_l2_ui16() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->lp_corr_l2_ui16(), target);
  }

  // .autodrive.workflow.proto.LpDirEn lp_dir_en = 9;
  if (this->lp_dir_en() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->lp_dir_en(), target);
  }

  // .autodrive.workflow.proto.LpSnsGroupIdEn lp_sns_group_id_en = 10;
  if (this->lp_sns_group_id_en() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->lp_sns_group_id_en(), target);
  }

  // .autodrive.workflow.proto.LpTypeEn lp_type_en = 11;
  if (this->lp_type_en() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->lp_type_en(), target);
  }

  // int64 lp_id_finish_timestamp_si64 = 12;
  if (this->lp_id_finish_timestamp_si64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->lp_id_finish_timestamp_si64(), target);
  }

  // .autodrive.workflow.proto.UssPoint lp_pos_1_st = 13;
  if (this->has_lp_pos_1_st()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, *this->lp_pos_1_st_, deterministic, target);
  }

  // .autodrive.workflow.proto.UssPoint lp_pos_2_st = 14;
  if (this->has_lp_pos_2_st()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, *this->lp_pos_2_st_, deterministic, target);
  }

  // .autodrive.workflow.proto.UssPoint lp_pos_3_st = 15;
  if (this->has_lp_pos_3_st()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, *this->lp_pos_3_st_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autodrive.workflow.proto.PerFusUssLp)
  return target;
}

size_t PerFusUssLp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autodrive.workflow.proto.PerFusUssLp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .autodrive.workflow.proto.UssPoint lp_pos_1_st = 13;
  if (this->has_lp_pos_1_st()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->lp_pos_1_st_);
  }

  // .autodrive.workflow.proto.UssPoint lp_pos_2_st = 14;
  if (this->has_lp_pos_2_st()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->lp_pos_2_st_);
  }

  // .autodrive.workflow.proto.UssPoint lp_pos_3_st = 15;
  if (this->has_lp_pos_3_st()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->lp_pos_3_st_);
  }

  // uint32 lp_id_ui8 = 1;
  if (this->lp_id_ui8() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lp_id_ui8());
  }

  // uint32 lp_de_echo_cnt_ui8 = 2;
  if (this->lp_de_echo_cnt_ui8() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lp_de_echo_cnt_ui8());
  }

  // uint32 lp_ce_echo_cnt_ui8 = 3;
  if (this->lp_ce_echo_cnt_ui8() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lp_ce_echo_cnt_ui8());
  }

  // .autodrive.workflow.proto.LpAttributesEn lp_attributes_en = 4;
  if (this->lp_attributes_en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->lp_attributes_en());
  }

  // uint32 lp_dist_sens_a_ui16 = 5;
  if (this->lp_dist_sens_a_ui16() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lp_dist_sens_a_ui16());
  }

  // uint32 lp_dist_sens_b_ui16 = 6;
  if (this->lp_dist_sens_b_ui16() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lp_dist_sens_b_ui16());
  }

  // uint32 lp_corr_l1_ui16 = 7;
  if (this->lp_corr_l1_ui16() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lp_corr_l1_ui16());
  }

  // uint32 lp_corr_l2_ui16 = 8;
  if (this->lp_corr_l2_ui16() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lp_corr_l2_ui16());
  }

  // .autodrive.workflow.proto.LpDirEn lp_dir_en = 9;
  if (this->lp_dir_en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->lp_dir_en());
  }

  // .autodrive.workflow.proto.LpSnsGroupIdEn lp_sns_group_id_en = 10;
  if (this->lp_sns_group_id_en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->lp_sns_group_id_en());
  }

  // int64 lp_id_finish_timestamp_si64 = 12;
  if (this->lp_id_finish_timestamp_si64() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->lp_id_finish_timestamp_si64());
  }

  // .autodrive.workflow.proto.LpTypeEn lp_type_en = 11;
  if (this->lp_type_en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->lp_type_en());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PerFusUssLp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:autodrive.workflow.proto.PerFusUssLp)
  GOOGLE_DCHECK_NE(&from, this);
  const PerFusUssLp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PerFusUssLp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:autodrive.workflow.proto.PerFusUssLp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:autodrive.workflow.proto.PerFusUssLp)
    MergeFrom(*source);
  }
}

void PerFusUssLp::MergeFrom(const PerFusUssLp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:autodrive.workflow.proto.PerFusUssLp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_lp_pos_1_st()) {
    mutable_lp_pos_1_st()->::autodrive::workflow::proto::UssPoint::MergeFrom(from.lp_pos_1_st());
  }
  if (from.has_lp_pos_2_st()) {
    mutable_lp_pos_2_st()->::autodrive::workflow::proto::UssPoint::MergeFrom(from.lp_pos_2_st());
  }
  if (from.has_lp_pos_3_st()) {
    mutable_lp_pos_3_st()->::autodrive::workflow::proto::UssPoint::MergeFrom(from.lp_pos_3_st());
  }
  if (from.lp_id_ui8() != 0) {
    set_lp_id_ui8(from.lp_id_ui8());
  }
  if (from.lp_de_echo_cnt_ui8() != 0) {
    set_lp_de_echo_cnt_ui8(from.lp_de_echo_cnt_ui8());
  }
  if (from.lp_ce_echo_cnt_ui8() != 0) {
    set_lp_ce_echo_cnt_ui8(from.lp_ce_echo_cnt_ui8());
  }
  if (from.lp_attributes_en() != 0) {
    set_lp_attributes_en(from.lp_attributes_en());
  }
  if (from.lp_dist_sens_a_ui16() != 0) {
    set_lp_dist_sens_a_ui16(from.lp_dist_sens_a_ui16());
  }
  if (from.lp_dist_sens_b_ui16() != 0) {
    set_lp_dist_sens_b_ui16(from.lp_dist_sens_b_ui16());
  }
  if (from.lp_corr_l1_ui16() != 0) {
    set_lp_corr_l1_ui16(from.lp_corr_l1_ui16());
  }
  if (from.lp_corr_l2_ui16() != 0) {
    set_lp_corr_l2_ui16(from.lp_corr_l2_ui16());
  }
  if (from.lp_dir_en() != 0) {
    set_lp_dir_en(from.lp_dir_en());
  }
  if (from.lp_sns_group_id_en() != 0) {
    set_lp_sns_group_id_en(from.lp_sns_group_id_en());
  }
  if (from.lp_id_finish_timestamp_si64() != 0) {
    set_lp_id_finish_timestamp_si64(from.lp_id_finish_timestamp_si64());
  }
  if (from.lp_type_en() != 0) {
    set_lp_type_en(from.lp_type_en());
  }
}

void PerFusUssLp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:autodrive.workflow.proto.PerFusUssLp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PerFusUssLp::CopyFrom(const PerFusUssLp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autodrive.workflow.proto.PerFusUssLp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerFusUssLp::IsInitialized() const {
  return true;
}

void PerFusUssLp::Swap(PerFusUssLp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PerFusUssLp::InternalSwap(PerFusUssLp* other) {
  using std::swap;
  swap(lp_pos_1_st_, other->lp_pos_1_st_);
  swap(lp_pos_2_st_, other->lp_pos_2_st_);
  swap(lp_pos_3_st_, other->lp_pos_3_st_);
  swap(lp_id_ui8_, other->lp_id_ui8_);
  swap(lp_de_echo_cnt_ui8_, other->lp_de_echo_cnt_ui8_);
  swap(lp_ce_echo_cnt_ui8_, other->lp_ce_echo_cnt_ui8_);
  swap(lp_attributes_en_, other->lp_attributes_en_);
  swap(lp_dist_sens_a_ui16_, other->lp_dist_sens_a_ui16_);
  swap(lp_dist_sens_b_ui16_, other->lp_dist_sens_b_ui16_);
  swap(lp_corr_l1_ui16_, other->lp_corr_l1_ui16_);
  swap(lp_corr_l2_ui16_, other->lp_corr_l2_ui16_);
  swap(lp_dir_en_, other->lp_dir_en_);
  swap(lp_sns_group_id_en_, other->lp_sns_group_id_en_);
  swap(lp_id_finish_timestamp_si64_, other->lp_id_finish_timestamp_si64_);
  swap(lp_type_en_, other->lp_type_en_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PerFusUssLp::GetMetadata() const {
  protobuf_uss_5fobstacles_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uss_5fobstacles_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PerFusUssHisObjFrame::InitAsDefaultInstance() {
}
void PerFusUssHisObjFrame::clear_uss_obj_points() {
  uss_obj_points_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PerFusUssHisObjFrame::kLpTypeEnFieldNumber;
const int PerFusUssHisObjFrame::kFinishTimestampSi64FieldNumber;
const int PerFusUssHisObjFrame::kUssObjPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PerFusUssHisObjFrame::PerFusUssHisObjFrame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_uss_5fobstacles_2eproto::InitDefaultsPerFusUssHisObjFrame();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:autodrive.workflow.proto.PerFusUssHisObjFrame)
}
PerFusUssHisObjFrame::PerFusUssHisObjFrame(const PerFusUssHisObjFrame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      lp_type_en_(from.lp_type_en_),
      finish_timestamp_si64_(from.finish_timestamp_si64_),
      uss_obj_points_(from.uss_obj_points_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:autodrive.workflow.proto.PerFusUssHisObjFrame)
}

void PerFusUssHisObjFrame::SharedCtor() {
  _cached_size_ = 0;
}

PerFusUssHisObjFrame::~PerFusUssHisObjFrame() {
  // @@protoc_insertion_point(destructor:autodrive.workflow.proto.PerFusUssHisObjFrame)
  SharedDtor();
}

void PerFusUssHisObjFrame::SharedDtor() {
}

void PerFusUssHisObjFrame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PerFusUssHisObjFrame::descriptor() {
  ::protobuf_uss_5fobstacles_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uss_5fobstacles_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PerFusUssHisObjFrame& PerFusUssHisObjFrame::default_instance() {
  ::protobuf_uss_5fobstacles_2eproto::InitDefaultsPerFusUssHisObjFrame();
  return *internal_default_instance();
}

PerFusUssHisObjFrame* PerFusUssHisObjFrame::New(::google::protobuf::Arena* arena) const {
  PerFusUssHisObjFrame* n = new PerFusUssHisObjFrame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PerFusUssHisObjFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:autodrive.workflow.proto.PerFusUssHisObjFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lp_type_en_.Clear();
  finish_timestamp_si64_.Clear();
  uss_obj_points_.Clear();
  _internal_metadata_.Clear();
}

bool PerFusUssHisObjFrame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:autodrive.workflow.proto.PerFusUssHisObjFrame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .autodrive.workflow.proto.LpTypeEn lp_type_en = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_lp_type_en(static_cast< ::autodrive::workflow::proto::LpTypeEn >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_lp_type_en(static_cast< ::autodrive::workflow::proto::LpTypeEn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 finish_timestamp_si64 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_finish_timestamp_si64())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_finish_timestamp_si64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .autodrive.workflow.proto.UssPoint uss_obj_points = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_uss_obj_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:autodrive.workflow.proto.PerFusUssHisObjFrame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:autodrive.workflow.proto.PerFusUssHisObjFrame)
  return false;
#undef DO_
}

void PerFusUssHisObjFrame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:autodrive.workflow.proto.PerFusUssHisObjFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .autodrive.workflow.proto.LpTypeEn lp_type_en = 1;
  if (this->lp_type_en_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_lp_type_en_cached_byte_size_));
  }
  for (int i = 0, n = this->lp_type_en_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->lp_type_en(i), output);
  }

  // repeated int64 finish_timestamp_si64 = 2;
  if (this->finish_timestamp_si64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _finish_timestamp_si64_cached_byte_size_));
  }
  for (int i = 0, n = this->finish_timestamp_si64_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->finish_timestamp_si64(i), output);
  }

  // repeated .autodrive.workflow.proto.UssPoint uss_obj_points = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uss_obj_points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->uss_obj_points(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:autodrive.workflow.proto.PerFusUssHisObjFrame)
}

::google::protobuf::uint8* PerFusUssHisObjFrame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:autodrive.workflow.proto.PerFusUssHisObjFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .autodrive.workflow.proto.LpTypeEn lp_type_en = 1;
  if (this->lp_type_en_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _lp_type_en_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->lp_type_en_, target);
  }

  // repeated int64 finish_timestamp_si64 = 2;
  if (this->finish_timestamp_si64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _finish_timestamp_si64_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->finish_timestamp_si64_, target);
  }

  // repeated .autodrive.workflow.proto.UssPoint uss_obj_points = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uss_obj_points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->uss_obj_points(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autodrive.workflow.proto.PerFusUssHisObjFrame)
  return target;
}

size_t PerFusUssHisObjFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autodrive.workflow.proto.PerFusUssHisObjFrame)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .autodrive.workflow.proto.LpTypeEn lp_type_en = 1;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->lp_type_en_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->lp_type_en(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _lp_type_en_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 finish_timestamp_si64 = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->finish_timestamp_si64_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _finish_timestamp_si64_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .autodrive.workflow.proto.UssPoint uss_obj_points = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->uss_obj_points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->uss_obj_points(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PerFusUssHisObjFrame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:autodrive.workflow.proto.PerFusUssHisObjFrame)
  GOOGLE_DCHECK_NE(&from, this);
  const PerFusUssHisObjFrame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PerFusUssHisObjFrame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:autodrive.workflow.proto.PerFusUssHisObjFrame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:autodrive.workflow.proto.PerFusUssHisObjFrame)
    MergeFrom(*source);
  }
}

void PerFusUssHisObjFrame::MergeFrom(const PerFusUssHisObjFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:autodrive.workflow.proto.PerFusUssHisObjFrame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lp_type_en_.MergeFrom(from.lp_type_en_);
  finish_timestamp_si64_.MergeFrom(from.finish_timestamp_si64_);
  uss_obj_points_.MergeFrom(from.uss_obj_points_);
}

void PerFusUssHisObjFrame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:autodrive.workflow.proto.PerFusUssHisObjFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PerFusUssHisObjFrame::CopyFrom(const PerFusUssHisObjFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autodrive.workflow.proto.PerFusUssHisObjFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerFusUssHisObjFrame::IsInitialized() const {
  return true;
}

void PerFusUssHisObjFrame::Swap(PerFusUssHisObjFrame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PerFusUssHisObjFrame::InternalSwap(PerFusUssHisObjFrame* other) {
  using std::swap;
  lp_type_en_.InternalSwap(&other->lp_type_en_);
  finish_timestamp_si64_.InternalSwap(&other->finish_timestamp_si64_);
  uss_obj_points_.InternalSwap(&other->uss_obj_points_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PerFusUssHisObjFrame::GetMetadata() const {
  protobuf_uss_5fobstacles_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uss_5fobstacles_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PerFusUssObj::InitAsDefaultInstance() {
  ::autodrive::workflow::proto::_PerFusUssObj_default_instance_._instance.get_mutable()->uss_obj_x_pos_1_ = const_cast< ::autodrive::workflow::proto::UssPoint*>(
      ::autodrive::workflow::proto::UssPoint::internal_default_instance());
  ::autodrive::workflow::proto::_PerFusUssObj_default_instance_._instance.get_mutable()->uss_obj_x_pos_2_ = const_cast< ::autodrive::workflow::proto::UssPoint*>(
      ::autodrive::workflow::proto::UssPoint::internal_default_instance());
  ::autodrive::workflow::proto::_PerFusUssObj_default_instance_._instance.get_mutable()->uss_obj_x_err_pos_1_ = const_cast< ::autodrive::workflow::proto::UssPoint*>(
      ::autodrive::workflow::proto::UssPoint::internal_default_instance());
  ::autodrive::workflow::proto::_PerFusUssObj_default_instance_._instance.get_mutable()->uss_obj_x_err_pos_2_ = const_cast< ::autodrive::workflow::proto::UssPoint*>(
      ::autodrive::workflow::proto::UssPoint::internal_default_instance());
  ::autodrive::workflow::proto::_PerFusUssObj_default_instance_._instance.get_mutable()->his_obj_frame_ = const_cast< ::autodrive::workflow::proto::PerFusUssHisObjFrame*>(
      ::autodrive::workflow::proto::PerFusUssHisObjFrame::internal_default_instance());
}
void PerFusUssObj::clear_uss_obj_x_pos_1() {
  if (GetArenaNoVirtual() == NULL && uss_obj_x_pos_1_ != NULL) {
    delete uss_obj_x_pos_1_;
  }
  uss_obj_x_pos_1_ = NULL;
}
void PerFusUssObj::clear_uss_obj_x_pos_2() {
  if (GetArenaNoVirtual() == NULL && uss_obj_x_pos_2_ != NULL) {
    delete uss_obj_x_pos_2_;
  }
  uss_obj_x_pos_2_ = NULL;
}
void PerFusUssObj::clear_uss_obj_x_err_pos_1() {
  if (GetArenaNoVirtual() == NULL && uss_obj_x_err_pos_1_ != NULL) {
    delete uss_obj_x_err_pos_1_;
  }
  uss_obj_x_err_pos_1_ = NULL;
}
void PerFusUssObj::clear_uss_obj_x_err_pos_2() {
  if (GetArenaNoVirtual() == NULL && uss_obj_x_err_pos_2_ != NULL) {
    delete uss_obj_x_err_pos_2_;
  }
  uss_obj_x_err_pos_2_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PerFusUssObj::kUssObjXIdUi8FieldNumber;
const int PerFusUssObj::kUssObjXCfdUi8FieldNumber;
const int PerFusUssObj::kUssObjXTypeEnFieldNumber;
const int PerFusUssObj::kUssObjXHeightEnFieldNumber;
const int PerFusUssObj::kUssObjXOnCourseEnFieldNumber;
const int PerFusUssObj::kFinishTimestampSi64FieldNumber;
const int PerFusUssObj::kUssObjXPos1FieldNumber;
const int PerFusUssObj::kUssObjXPos2FieldNumber;
const int PerFusUssObj::kUssObjXErrPos1FieldNumber;
const int PerFusUssObj::kUssObjXErrPos2FieldNumber;
const int PerFusUssObj::kHisObjFrameFieldNumber;
const int PerFusUssObj::kObjHistoryUi8FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PerFusUssObj::PerFusUssObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_uss_5fobstacles_2eproto::InitDefaultsPerFusUssObj();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:autodrive.workflow.proto.PerFusUssObj)
}
PerFusUssObj::PerFusUssObj(const PerFusUssObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_uss_obj_x_pos_1()) {
    uss_obj_x_pos_1_ = new ::autodrive::workflow::proto::UssPoint(*from.uss_obj_x_pos_1_);
  } else {
    uss_obj_x_pos_1_ = NULL;
  }
  if (from.has_uss_obj_x_pos_2()) {
    uss_obj_x_pos_2_ = new ::autodrive::workflow::proto::UssPoint(*from.uss_obj_x_pos_2_);
  } else {
    uss_obj_x_pos_2_ = NULL;
  }
  if (from.has_uss_obj_x_err_pos_1()) {
    uss_obj_x_err_pos_1_ = new ::autodrive::workflow::proto::UssPoint(*from.uss_obj_x_err_pos_1_);
  } else {
    uss_obj_x_err_pos_1_ = NULL;
  }
  if (from.has_uss_obj_x_err_pos_2()) {
    uss_obj_x_err_pos_2_ = new ::autodrive::workflow::proto::UssPoint(*from.uss_obj_x_err_pos_2_);
  } else {
    uss_obj_x_err_pos_2_ = NULL;
  }
  if (from.has_his_obj_frame()) {
    his_obj_frame_ = new ::autodrive::workflow::proto::PerFusUssHisObjFrame(*from.his_obj_frame_);
  } else {
    his_obj_frame_ = NULL;
  }
  ::memcpy(&uss_obj_x_id_ui8_, &from.uss_obj_x_id_ui8_,
    static_cast<size_t>(reinterpret_cast<char*>(&obj_history_ui8_) -
    reinterpret_cast<char*>(&uss_obj_x_id_ui8_)) + sizeof(obj_history_ui8_));
  // @@protoc_insertion_point(copy_constructor:autodrive.workflow.proto.PerFusUssObj)
}

void PerFusUssObj::SharedCtor() {
  ::memset(&uss_obj_x_pos_1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&obj_history_ui8_) -
      reinterpret_cast<char*>(&uss_obj_x_pos_1_)) + sizeof(obj_history_ui8_));
  _cached_size_ = 0;
}

PerFusUssObj::~PerFusUssObj() {
  // @@protoc_insertion_point(destructor:autodrive.workflow.proto.PerFusUssObj)
  SharedDtor();
}

void PerFusUssObj::SharedDtor() {
  if (this != internal_default_instance()) delete uss_obj_x_pos_1_;
  if (this != internal_default_instance()) delete uss_obj_x_pos_2_;
  if (this != internal_default_instance()) delete uss_obj_x_err_pos_1_;
  if (this != internal_default_instance()) delete uss_obj_x_err_pos_2_;
  if (this != internal_default_instance()) delete his_obj_frame_;
}

void PerFusUssObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PerFusUssObj::descriptor() {
  ::protobuf_uss_5fobstacles_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uss_5fobstacles_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PerFusUssObj& PerFusUssObj::default_instance() {
  ::protobuf_uss_5fobstacles_2eproto::InitDefaultsPerFusUssObj();
  return *internal_default_instance();
}

PerFusUssObj* PerFusUssObj::New(::google::protobuf::Arena* arena) const {
  PerFusUssObj* n = new PerFusUssObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PerFusUssObj::Clear() {
// @@protoc_insertion_point(message_clear_start:autodrive.workflow.proto.PerFusUssObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && uss_obj_x_pos_1_ != NULL) {
    delete uss_obj_x_pos_1_;
  }
  uss_obj_x_pos_1_ = NULL;
  if (GetArenaNoVirtual() == NULL && uss_obj_x_pos_2_ != NULL) {
    delete uss_obj_x_pos_2_;
  }
  uss_obj_x_pos_2_ = NULL;
  if (GetArenaNoVirtual() == NULL && uss_obj_x_err_pos_1_ != NULL) {
    delete uss_obj_x_err_pos_1_;
  }
  uss_obj_x_err_pos_1_ = NULL;
  if (GetArenaNoVirtual() == NULL && uss_obj_x_err_pos_2_ != NULL) {
    delete uss_obj_x_err_pos_2_;
  }
  uss_obj_x_err_pos_2_ = NULL;
  if (GetArenaNoVirtual() == NULL && his_obj_frame_ != NULL) {
    delete his_obj_frame_;
  }
  his_obj_frame_ = NULL;
  ::memset(&uss_obj_x_id_ui8_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&obj_history_ui8_) -
      reinterpret_cast<char*>(&uss_obj_x_id_ui8_)) + sizeof(obj_history_ui8_));
  _internal_metadata_.Clear();
}

bool PerFusUssObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:autodrive.workflow.proto.PerFusUssObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uss_obj_x_id_ui8 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uss_obj_x_id_ui8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uss_obj_x_cfd_ui8 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uss_obj_x_cfd_ui8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssObjXTypeEn uss_obj_x_type_en = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_uss_obj_x_type_en(static_cast< ::autodrive::workflow::proto::UssObjXTypeEn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssObjXHeightEn uss_obj_x_height_en = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_uss_obj_x_height_en(static_cast< ::autodrive::workflow::proto::UssObjXHeightEn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssObjXOnCourseEn uss_obj_x_on_course_en = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_uss_obj_x_on_course_en(static_cast< ::autodrive::workflow::proto::UssObjXOnCourseEn >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 finish_timestamp_si64 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &finish_timestamp_si64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssPoint uss_obj_x_pos_1 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uss_obj_x_pos_1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssPoint uss_obj_x_pos_2 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uss_obj_x_pos_2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssPoint uss_obj_x_err_pos_1 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uss_obj_x_err_pos_1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.UssPoint uss_obj_x_err_pos_2 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uss_obj_x_err_pos_2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.PerFusUssHisObjFrame his_obj_frame = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_his_obj_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 obj_history_ui8 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &obj_history_ui8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:autodrive.workflow.proto.PerFusUssObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:autodrive.workflow.proto.PerFusUssObj)
  return false;
#undef DO_
}

void PerFusUssObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:autodrive.workflow.proto.PerFusUssObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uss_obj_x_id_ui8 = 1;
  if (this->uss_obj_x_id_ui8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uss_obj_x_id_ui8(), output);
  }

  // uint32 uss_obj_x_cfd_ui8 = 2;
  if (this->uss_obj_x_cfd_ui8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uss_obj_x_cfd_ui8(), output);
  }

  // .autodrive.workflow.proto.UssObjXTypeEn uss_obj_x_type_en = 3;
  if (this->uss_obj_x_type_en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->uss_obj_x_type_en(), output);
  }

  // .autodrive.workflow.proto.UssObjXHeightEn uss_obj_x_height_en = 4;
  if (this->uss_obj_x_height_en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->uss_obj_x_height_en(), output);
  }

  // .autodrive.workflow.proto.UssObjXOnCourseEn uss_obj_x_on_course_en = 5;
  if (this->uss_obj_x_on_course_en() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->uss_obj_x_on_course_en(), output);
  }

  // int64 finish_timestamp_si64 = 6;
  if (this->finish_timestamp_si64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->finish_timestamp_si64(), output);
  }

  // .autodrive.workflow.proto.UssPoint uss_obj_x_pos_1 = 7;
  if (this->has_uss_obj_x_pos_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->uss_obj_x_pos_1_, output);
  }

  // .autodrive.workflow.proto.UssPoint uss_obj_x_pos_2 = 8;
  if (this->has_uss_obj_x_pos_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->uss_obj_x_pos_2_, output);
  }

  // .autodrive.workflow.proto.UssPoint uss_obj_x_err_pos_1 = 9;
  if (this->has_uss_obj_x_err_pos_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->uss_obj_x_err_pos_1_, output);
  }

  // .autodrive.workflow.proto.UssPoint uss_obj_x_err_pos_2 = 10;
  if (this->has_uss_obj_x_err_pos_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->uss_obj_x_err_pos_2_, output);
  }

  // .autodrive.workflow.proto.PerFusUssHisObjFrame his_obj_frame = 11;
  if (this->has_his_obj_frame()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->his_obj_frame_, output);
  }

  // uint32 obj_history_ui8 = 12;
  if (this->obj_history_ui8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->obj_history_ui8(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:autodrive.workflow.proto.PerFusUssObj)
}

::google::protobuf::uint8* PerFusUssObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:autodrive.workflow.proto.PerFusUssObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uss_obj_x_id_ui8 = 1;
  if (this->uss_obj_x_id_ui8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uss_obj_x_id_ui8(), target);
  }

  // uint32 uss_obj_x_cfd_ui8 = 2;
  if (this->uss_obj_x_cfd_ui8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uss_obj_x_cfd_ui8(), target);
  }

  // .autodrive.workflow.proto.UssObjXTypeEn uss_obj_x_type_en = 3;
  if (this->uss_obj_x_type_en() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->uss_obj_x_type_en(), target);
  }

  // .autodrive.workflow.proto.UssObjXHeightEn uss_obj_x_height_en = 4;
  if (this->uss_obj_x_height_en() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->uss_obj_x_height_en(), target);
  }

  // .autodrive.workflow.proto.UssObjXOnCourseEn uss_obj_x_on_course_en = 5;
  if (this->uss_obj_x_on_course_en() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->uss_obj_x_on_course_en(), target);
  }

  // int64 finish_timestamp_si64 = 6;
  if (this->finish_timestamp_si64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->finish_timestamp_si64(), target);
  }

  // .autodrive.workflow.proto.UssPoint uss_obj_x_pos_1 = 7;
  if (this->has_uss_obj_x_pos_1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->uss_obj_x_pos_1_, deterministic, target);
  }

  // .autodrive.workflow.proto.UssPoint uss_obj_x_pos_2 = 8;
  if (this->has_uss_obj_x_pos_2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->uss_obj_x_pos_2_, deterministic, target);
  }

  // .autodrive.workflow.proto.UssPoint uss_obj_x_err_pos_1 = 9;
  if (this->has_uss_obj_x_err_pos_1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->uss_obj_x_err_pos_1_, deterministic, target);
  }

  // .autodrive.workflow.proto.UssPoint uss_obj_x_err_pos_2 = 10;
  if (this->has_uss_obj_x_err_pos_2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *this->uss_obj_x_err_pos_2_, deterministic, target);
  }

  // .autodrive.workflow.proto.PerFusUssHisObjFrame his_obj_frame = 11;
  if (this->has_his_obj_frame()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, *this->his_obj_frame_, deterministic, target);
  }

  // uint32 obj_history_ui8 = 12;
  if (this->obj_history_ui8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->obj_history_ui8(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autodrive.workflow.proto.PerFusUssObj)
  return target;
}

size_t PerFusUssObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autodrive.workflow.proto.PerFusUssObj)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .autodrive.workflow.proto.UssPoint uss_obj_x_pos_1 = 7;
  if (this->has_uss_obj_x_pos_1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->uss_obj_x_pos_1_);
  }

  // .autodrive.workflow.proto.UssPoint uss_obj_x_pos_2 = 8;
  if (this->has_uss_obj_x_pos_2()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->uss_obj_x_pos_2_);
  }

  // .autodrive.workflow.proto.UssPoint uss_obj_x_err_pos_1 = 9;
  if (this->has_uss_obj_x_err_pos_1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->uss_obj_x_err_pos_1_);
  }

  // .autodrive.workflow.proto.UssPoint uss_obj_x_err_pos_2 = 10;
  if (this->has_uss_obj_x_err_pos_2()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->uss_obj_x_err_pos_2_);
  }

  // .autodrive.workflow.proto.PerFusUssHisObjFrame his_obj_frame = 11;
  if (this->has_his_obj_frame()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->his_obj_frame_);
  }

  // uint32 uss_obj_x_id_ui8 = 1;
  if (this->uss_obj_x_id_ui8() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uss_obj_x_id_ui8());
  }

  // uint32 uss_obj_x_cfd_ui8 = 2;
  if (this->uss_obj_x_cfd_ui8() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uss_obj_x_cfd_ui8());
  }

  // .autodrive.workflow.proto.UssObjXTypeEn uss_obj_x_type_en = 3;
  if (this->uss_obj_x_type_en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->uss_obj_x_type_en());
  }

  // .autodrive.workflow.proto.UssObjXHeightEn uss_obj_x_height_en = 4;
  if (this->uss_obj_x_height_en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->uss_obj_x_height_en());
  }

  // int64 finish_timestamp_si64 = 6;
  if (this->finish_timestamp_si64() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->finish_timestamp_si64());
  }

  // .autodrive.workflow.proto.UssObjXOnCourseEn uss_obj_x_on_course_en = 5;
  if (this->uss_obj_x_on_course_en() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->uss_obj_x_on_course_en());
  }

  // uint32 obj_history_ui8 = 12;
  if (this->obj_history_ui8() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->obj_history_ui8());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PerFusUssObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:autodrive.workflow.proto.PerFusUssObj)
  GOOGLE_DCHECK_NE(&from, this);
  const PerFusUssObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PerFusUssObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:autodrive.workflow.proto.PerFusUssObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:autodrive.workflow.proto.PerFusUssObj)
    MergeFrom(*source);
  }
}

void PerFusUssObj::MergeFrom(const PerFusUssObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:autodrive.workflow.proto.PerFusUssObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_uss_obj_x_pos_1()) {
    mutable_uss_obj_x_pos_1()->::autodrive::workflow::proto::UssPoint::MergeFrom(from.uss_obj_x_pos_1());
  }
  if (from.has_uss_obj_x_pos_2()) {
    mutable_uss_obj_x_pos_2()->::autodrive::workflow::proto::UssPoint::MergeFrom(from.uss_obj_x_pos_2());
  }
  if (from.has_uss_obj_x_err_pos_1()) {
    mutable_uss_obj_x_err_pos_1()->::autodrive::workflow::proto::UssPoint::MergeFrom(from.uss_obj_x_err_pos_1());
  }
  if (from.has_uss_obj_x_err_pos_2()) {
    mutable_uss_obj_x_err_pos_2()->::autodrive::workflow::proto::UssPoint::MergeFrom(from.uss_obj_x_err_pos_2());
  }
  if (from.has_his_obj_frame()) {
    mutable_his_obj_frame()->::autodrive::workflow::proto::PerFusUssHisObjFrame::MergeFrom(from.his_obj_frame());
  }
  if (from.uss_obj_x_id_ui8() != 0) {
    set_uss_obj_x_id_ui8(from.uss_obj_x_id_ui8());
  }
  if (from.uss_obj_x_cfd_ui8() != 0) {
    set_uss_obj_x_cfd_ui8(from.uss_obj_x_cfd_ui8());
  }
  if (from.uss_obj_x_type_en() != 0) {
    set_uss_obj_x_type_en(from.uss_obj_x_type_en());
  }
  if (from.uss_obj_x_height_en() != 0) {
    set_uss_obj_x_height_en(from.uss_obj_x_height_en());
  }
  if (from.finish_timestamp_si64() != 0) {
    set_finish_timestamp_si64(from.finish_timestamp_si64());
  }
  if (from.uss_obj_x_on_course_en() != 0) {
    set_uss_obj_x_on_course_en(from.uss_obj_x_on_course_en());
  }
  if (from.obj_history_ui8() != 0) {
    set_obj_history_ui8(from.obj_history_ui8());
  }
}

void PerFusUssObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:autodrive.workflow.proto.PerFusUssObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PerFusUssObj::CopyFrom(const PerFusUssObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autodrive.workflow.proto.PerFusUssObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerFusUssObj::IsInitialized() const {
  return true;
}

void PerFusUssObj::Swap(PerFusUssObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PerFusUssObj::InternalSwap(PerFusUssObj* other) {
  using std::swap;
  swap(uss_obj_x_pos_1_, other->uss_obj_x_pos_1_);
  swap(uss_obj_x_pos_2_, other->uss_obj_x_pos_2_);
  swap(uss_obj_x_err_pos_1_, other->uss_obj_x_err_pos_1_);
  swap(uss_obj_x_err_pos_2_, other->uss_obj_x_err_pos_2_);
  swap(his_obj_frame_, other->his_obj_frame_);
  swap(uss_obj_x_id_ui8_, other->uss_obj_x_id_ui8_);
  swap(uss_obj_x_cfd_ui8_, other->uss_obj_x_cfd_ui8_);
  swap(uss_obj_x_type_en_, other->uss_obj_x_type_en_);
  swap(uss_obj_x_height_en_, other->uss_obj_x_height_en_);
  swap(finish_timestamp_si64_, other->finish_timestamp_si64_);
  swap(uss_obj_x_on_course_en_, other->uss_obj_x_on_course_en_);
  swap(obj_history_ui8_, other->obj_history_ui8_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PerFusUssObj::GetMetadata() const {
  protobuf_uss_5fobstacles_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uss_5fobstacles_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PerFusUssAllCERawData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PerFusUssAllCERawData::kCe1To2DistanceFieldNumber;
const int PerFusUssAllCERawData::kCe2To1DistanceFieldNumber;
const int PerFusUssAllCERawData::kCe2To3DistanceFieldNumber;
const int PerFusUssAllCERawData::kCe3To2DistanceFieldNumber;
const int PerFusUssAllCERawData::kCe3To4DistanceFieldNumber;
const int PerFusUssAllCERawData::kCe4To3DistanceFieldNumber;
const int PerFusUssAllCERawData::kCe4To5DistanceFieldNumber;
const int PerFusUssAllCERawData::kCe5To4DistanceFieldNumber;
const int PerFusUssAllCERawData::kCe5To6DistanceFieldNumber;
const int PerFusUssAllCERawData::kCe6To5DistanceFieldNumber;
const int PerFusUssAllCERawData::kCe7To8DistanceFieldNumber;
const int PerFusUssAllCERawData::kCe8To7DistanceFieldNumber;
const int PerFusUssAllCERawData::kCe8To9DistanceFieldNumber;
const int PerFusUssAllCERawData::kCe9To8DistanceFieldNumber;
const int PerFusUssAllCERawData::kCe9To10DistanceFieldNumber;
const int PerFusUssAllCERawData::kCe10To9DistanceFieldNumber;
const int PerFusUssAllCERawData::kCe10To11DistanceFieldNumber;
const int PerFusUssAllCERawData::kCe11To10DistanceFieldNumber;
const int PerFusUssAllCERawData::kCe11To12DistanceFieldNumber;
const int PerFusUssAllCERawData::kCe12To11DistanceFieldNumber;
const int PerFusUssAllCERawData::kCe1To2TimestampFieldNumber;
const int PerFusUssAllCERawData::kCe2To1TimestampFieldNumber;
const int PerFusUssAllCERawData::kCe2To3TimestampFieldNumber;
const int PerFusUssAllCERawData::kCe3To2TimestampFieldNumber;
const int PerFusUssAllCERawData::kCe3To4TimestampFieldNumber;
const int PerFusUssAllCERawData::kCe4To3TimestampFieldNumber;
const int PerFusUssAllCERawData::kCe4To5TimestampFieldNumber;
const int PerFusUssAllCERawData::kCe5To4TimestampFieldNumber;
const int PerFusUssAllCERawData::kCe5To6TimestampFieldNumber;
const int PerFusUssAllCERawData::kCe6To5TimestampFieldNumber;
const int PerFusUssAllCERawData::kCe7To8TimestampFieldNumber;
const int PerFusUssAllCERawData::kCe8To7TimestampFieldNumber;
const int PerFusUssAllCERawData::kCe8To9TimestampFieldNumber;
const int PerFusUssAllCERawData::kCe9To8TimestampFieldNumber;
const int PerFusUssAllCERawData::kCe9To10TimestampFieldNumber;
const int PerFusUssAllCERawData::kCe10To9TimestampFieldNumber;
const int PerFusUssAllCERawData::kCe10To11TimestampFieldNumber;
const int PerFusUssAllCERawData::kCe11To10TimestampFieldNumber;
const int PerFusUssAllCERawData::kCe11To12TimestampFieldNumber;
const int PerFusUssAllCERawData::kCe12To11TimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PerFusUssAllCERawData::PerFusUssAllCERawData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_uss_5fobstacles_2eproto::InitDefaultsPerFusUssAllCERawData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:autodrive.workflow.proto.PerFusUssAllCERawData)
}
PerFusUssAllCERawData::PerFusUssAllCERawData(const PerFusUssAllCERawData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ce1_to_2distance_, &from.ce1_to_2distance_,
    static_cast<size_t>(reinterpret_cast<char*>(&ce12_to_11timestamp_) -
    reinterpret_cast<char*>(&ce1_to_2distance_)) + sizeof(ce12_to_11timestamp_));
  // @@protoc_insertion_point(copy_constructor:autodrive.workflow.proto.PerFusUssAllCERawData)
}

void PerFusUssAllCERawData::SharedCtor() {
  ::memset(&ce1_to_2distance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ce12_to_11timestamp_) -
      reinterpret_cast<char*>(&ce1_to_2distance_)) + sizeof(ce12_to_11timestamp_));
  _cached_size_ = 0;
}

PerFusUssAllCERawData::~PerFusUssAllCERawData() {
  // @@protoc_insertion_point(destructor:autodrive.workflow.proto.PerFusUssAllCERawData)
  SharedDtor();
}

void PerFusUssAllCERawData::SharedDtor() {
}

void PerFusUssAllCERawData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PerFusUssAllCERawData::descriptor() {
  ::protobuf_uss_5fobstacles_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uss_5fobstacles_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PerFusUssAllCERawData& PerFusUssAllCERawData::default_instance() {
  ::protobuf_uss_5fobstacles_2eproto::InitDefaultsPerFusUssAllCERawData();
  return *internal_default_instance();
}

PerFusUssAllCERawData* PerFusUssAllCERawData::New(::google::protobuf::Arena* arena) const {
  PerFusUssAllCERawData* n = new PerFusUssAllCERawData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PerFusUssAllCERawData::Clear() {
// @@protoc_insertion_point(message_clear_start:autodrive.workflow.proto.PerFusUssAllCERawData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ce1_to_2distance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ce12_to_11timestamp_) -
      reinterpret_cast<char*>(&ce1_to_2distance_)) + sizeof(ce12_to_11timestamp_));
  _internal_metadata_.Clear();
}

bool PerFusUssAllCERawData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:autodrive.workflow.proto.PerFusUssAllCERawData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 ce1_to_2distance = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ce1_to_2distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ce2_to_1distance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ce2_to_1distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ce2_to_3distance = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ce2_to_3distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ce3_to_2distance = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ce3_to_2distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ce3_to_4distance = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ce3_to_4distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ce4_to_3distance = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ce4_to_3distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ce4_to_5distance = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ce4_to_5distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ce5_to_4distance = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ce5_to_4distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ce5_to_6distance = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ce5_to_6distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ce6_to_5distance = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ce6_to_5distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ce7_to_8distance = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ce7_to_8distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ce8_to_7distance = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ce8_to_7distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ce8_to_9distance = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ce8_to_9distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ce9_to_8distance = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ce9_to_8distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ce9_to_10distance = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ce9_to_10distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ce10_to_9distance = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ce10_to_9distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ce10_to_11distance = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ce10_to_11distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ce11_to_10distance = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ce11_to_10distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ce11_to_12distance = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ce11_to_12distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ce12_to_11distance = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ce12_to_11distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ce1_to_2timestamp = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ce1_to_2timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ce2_to_1timestamp = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ce2_to_1timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ce2_to_3timestamp = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ce2_to_3timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ce3_to_2timestamp = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ce3_to_2timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ce3_to_4timestamp = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ce3_to_4timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ce4_to_3timestamp = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ce4_to_3timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ce4_to_5timestamp = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ce4_to_5timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ce5_to_4timestamp = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ce5_to_4timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ce5_to_6timestamp = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ce5_to_6timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ce6_to_5timestamp = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ce6_to_5timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ce7_to_8timestamp = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ce7_to_8timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ce8_to_7timestamp = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ce8_to_7timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ce8_to_9timestamp = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ce8_to_9timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ce9_to_8timestamp = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ce9_to_8timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ce9_to_10timestamp = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ce9_to_10timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ce10_to_9timestamp = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 288 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ce10_to_9timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ce10_to_11timestamp = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 296 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ce10_to_11timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ce11_to_10timestamp = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 304 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ce11_to_10timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ce11_to_12timestamp = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 312 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ce11_to_12timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ce12_to_11timestamp = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ce12_to_11timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:autodrive.workflow.proto.PerFusUssAllCERawData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:autodrive.workflow.proto.PerFusUssAllCERawData)
  return false;
#undef DO_
}

void PerFusUssAllCERawData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:autodrive.workflow.proto.PerFusUssAllCERawData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ce1_to_2distance = 1;
  if (this->ce1_to_2distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ce1_to_2distance(), output);
  }

  // uint32 ce2_to_1distance = 2;
  if (this->ce2_to_1distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ce2_to_1distance(), output);
  }

  // uint32 ce2_to_3distance = 3;
  if (this->ce2_to_3distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ce2_to_3distance(), output);
  }

  // uint32 ce3_to_2distance = 4;
  if (this->ce3_to_2distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ce3_to_2distance(), output);
  }

  // uint32 ce3_to_4distance = 5;
  if (this->ce3_to_4distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ce3_to_4distance(), output);
  }

  // uint32 ce4_to_3distance = 6;
  if (this->ce4_to_3distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->ce4_to_3distance(), output);
  }

  // uint32 ce4_to_5distance = 7;
  if (this->ce4_to_5distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->ce4_to_5distance(), output);
  }

  // uint32 ce5_to_4distance = 8;
  if (this->ce5_to_4distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->ce5_to_4distance(), output);
  }

  // uint32 ce5_to_6distance = 9;
  if (this->ce5_to_6distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->ce5_to_6distance(), output);
  }

  // uint32 ce6_to_5distance = 10;
  if (this->ce6_to_5distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->ce6_to_5distance(), output);
  }

  // uint32 ce7_to_8distance = 11;
  if (this->ce7_to_8distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->ce7_to_8distance(), output);
  }

  // uint32 ce8_to_7distance = 12;
  if (this->ce8_to_7distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->ce8_to_7distance(), output);
  }

  // uint32 ce8_to_9distance = 13;
  if (this->ce8_to_9distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->ce8_to_9distance(), output);
  }

  // uint32 ce9_to_8distance = 14;
  if (this->ce9_to_8distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->ce9_to_8distance(), output);
  }

  // uint32 ce9_to_10distance = 15;
  if (this->ce9_to_10distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->ce9_to_10distance(), output);
  }

  // uint32 ce10_to_9distance = 16;
  if (this->ce10_to_9distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->ce10_to_9distance(), output);
  }

  // uint32 ce10_to_11distance = 17;
  if (this->ce10_to_11distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->ce10_to_11distance(), output);
  }

  // uint32 ce11_to_10distance = 18;
  if (this->ce11_to_10distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->ce11_to_10distance(), output);
  }

  // uint32 ce11_to_12distance = 19;
  if (this->ce11_to_12distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->ce11_to_12distance(), output);
  }

  // uint32 ce12_to_11distance = 20;
  if (this->ce12_to_11distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->ce12_to_11distance(), output);
  }

  // int64 ce1_to_2timestamp = 21;
  if (this->ce1_to_2timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(21, this->ce1_to_2timestamp(), output);
  }

  // int64 ce2_to_1timestamp = 22;
  if (this->ce2_to_1timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(22, this->ce2_to_1timestamp(), output);
  }

  // int64 ce2_to_3timestamp = 23;
  if (this->ce2_to_3timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(23, this->ce2_to_3timestamp(), output);
  }

  // int64 ce3_to_2timestamp = 24;
  if (this->ce3_to_2timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(24, this->ce3_to_2timestamp(), output);
  }

  // int64 ce3_to_4timestamp = 25;
  if (this->ce3_to_4timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(25, this->ce3_to_4timestamp(), output);
  }

  // int64 ce4_to_3timestamp = 26;
  if (this->ce4_to_3timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(26, this->ce4_to_3timestamp(), output);
  }

  // int64 ce4_to_5timestamp = 27;
  if (this->ce4_to_5timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(27, this->ce4_to_5timestamp(), output);
  }

  // int64 ce5_to_4timestamp = 28;
  if (this->ce5_to_4timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(28, this->ce5_to_4timestamp(), output);
  }

  // int64 ce5_to_6timestamp = 29;
  if (this->ce5_to_6timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(29, this->ce5_to_6timestamp(), output);
  }

  // int64 ce6_to_5timestamp = 30;
  if (this->ce6_to_5timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(30, this->ce6_to_5timestamp(), output);
  }

  // int64 ce7_to_8timestamp = 31;
  if (this->ce7_to_8timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(31, this->ce7_to_8timestamp(), output);
  }

  // int64 ce8_to_7timestamp = 32;
  if (this->ce8_to_7timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(32, this->ce8_to_7timestamp(), output);
  }

  // int64 ce8_to_9timestamp = 33;
  if (this->ce8_to_9timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(33, this->ce8_to_9timestamp(), output);
  }

  // int64 ce9_to_8timestamp = 34;
  if (this->ce9_to_8timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(34, this->ce9_to_8timestamp(), output);
  }

  // int64 ce9_to_10timestamp = 35;
  if (this->ce9_to_10timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(35, this->ce9_to_10timestamp(), output);
  }

  // int64 ce10_to_9timestamp = 36;
  if (this->ce10_to_9timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(36, this->ce10_to_9timestamp(), output);
  }

  // int64 ce10_to_11timestamp = 37;
  if (this->ce10_to_11timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(37, this->ce10_to_11timestamp(), output);
  }

  // int64 ce11_to_10timestamp = 38;
  if (this->ce11_to_10timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(38, this->ce11_to_10timestamp(), output);
  }

  // int64 ce11_to_12timestamp = 39;
  if (this->ce11_to_12timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(39, this->ce11_to_12timestamp(), output);
  }

  // int64 ce12_to_11timestamp = 40;
  if (this->ce12_to_11timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(40, this->ce12_to_11timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:autodrive.workflow.proto.PerFusUssAllCERawData)
}

::google::protobuf::uint8* PerFusUssAllCERawData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:autodrive.workflow.proto.PerFusUssAllCERawData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ce1_to_2distance = 1;
  if (this->ce1_to_2distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ce1_to_2distance(), target);
  }

  // uint32 ce2_to_1distance = 2;
  if (this->ce2_to_1distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ce2_to_1distance(), target);
  }

  // uint32 ce2_to_3distance = 3;
  if (this->ce2_to_3distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ce2_to_3distance(), target);
  }

  // uint32 ce3_to_2distance = 4;
  if (this->ce3_to_2distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ce3_to_2distance(), target);
  }

  // uint32 ce3_to_4distance = 5;
  if (this->ce3_to_4distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ce3_to_4distance(), target);
  }

  // uint32 ce4_to_3distance = 6;
  if (this->ce4_to_3distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->ce4_to_3distance(), target);
  }

  // uint32 ce4_to_5distance = 7;
  if (this->ce4_to_5distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->ce4_to_5distance(), target);
  }

  // uint32 ce5_to_4distance = 8;
  if (this->ce5_to_4distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->ce5_to_4distance(), target);
  }

  // uint32 ce5_to_6distance = 9;
  if (this->ce5_to_6distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->ce5_to_6distance(), target);
  }

  // uint32 ce6_to_5distance = 10;
  if (this->ce6_to_5distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->ce6_to_5distance(), target);
  }

  // uint32 ce7_to_8distance = 11;
  if (this->ce7_to_8distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->ce7_to_8distance(), target);
  }

  // uint32 ce8_to_7distance = 12;
  if (this->ce8_to_7distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->ce8_to_7distance(), target);
  }

  // uint32 ce8_to_9distance = 13;
  if (this->ce8_to_9distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->ce8_to_9distance(), target);
  }

  // uint32 ce9_to_8distance = 14;
  if (this->ce9_to_8distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->ce9_to_8distance(), target);
  }

  // uint32 ce9_to_10distance = 15;
  if (this->ce9_to_10distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->ce9_to_10distance(), target);
  }

  // uint32 ce10_to_9distance = 16;
  if (this->ce10_to_9distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->ce10_to_9distance(), target);
  }

  // uint32 ce10_to_11distance = 17;
  if (this->ce10_to_11distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->ce10_to_11distance(), target);
  }

  // uint32 ce11_to_10distance = 18;
  if (this->ce11_to_10distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->ce11_to_10distance(), target);
  }

  // uint32 ce11_to_12distance = 19;
  if (this->ce11_to_12distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->ce11_to_12distance(), target);
  }

  // uint32 ce12_to_11distance = 20;
  if (this->ce12_to_11distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->ce12_to_11distance(), target);
  }

  // int64 ce1_to_2timestamp = 21;
  if (this->ce1_to_2timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(21, this->ce1_to_2timestamp(), target);
  }

  // int64 ce2_to_1timestamp = 22;
  if (this->ce2_to_1timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(22, this->ce2_to_1timestamp(), target);
  }

  // int64 ce2_to_3timestamp = 23;
  if (this->ce2_to_3timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(23, this->ce2_to_3timestamp(), target);
  }

  // int64 ce3_to_2timestamp = 24;
  if (this->ce3_to_2timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(24, this->ce3_to_2timestamp(), target);
  }

  // int64 ce3_to_4timestamp = 25;
  if (this->ce3_to_4timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(25, this->ce3_to_4timestamp(), target);
  }

  // int64 ce4_to_3timestamp = 26;
  if (this->ce4_to_3timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(26, this->ce4_to_3timestamp(), target);
  }

  // int64 ce4_to_5timestamp = 27;
  if (this->ce4_to_5timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(27, this->ce4_to_5timestamp(), target);
  }

  // int64 ce5_to_4timestamp = 28;
  if (this->ce5_to_4timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(28, this->ce5_to_4timestamp(), target);
  }

  // int64 ce5_to_6timestamp = 29;
  if (this->ce5_to_6timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(29, this->ce5_to_6timestamp(), target);
  }

  // int64 ce6_to_5timestamp = 30;
  if (this->ce6_to_5timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(30, this->ce6_to_5timestamp(), target);
  }

  // int64 ce7_to_8timestamp = 31;
  if (this->ce7_to_8timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(31, this->ce7_to_8timestamp(), target);
  }

  // int64 ce8_to_7timestamp = 32;
  if (this->ce8_to_7timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(32, this->ce8_to_7timestamp(), target);
  }

  // int64 ce8_to_9timestamp = 33;
  if (this->ce8_to_9timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(33, this->ce8_to_9timestamp(), target);
  }

  // int64 ce9_to_8timestamp = 34;
  if (this->ce9_to_8timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(34, this->ce9_to_8timestamp(), target);
  }

  // int64 ce9_to_10timestamp = 35;
  if (this->ce9_to_10timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(35, this->ce9_to_10timestamp(), target);
  }

  // int64 ce10_to_9timestamp = 36;
  if (this->ce10_to_9timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(36, this->ce10_to_9timestamp(), target);
  }

  // int64 ce10_to_11timestamp = 37;
  if (this->ce10_to_11timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(37, this->ce10_to_11timestamp(), target);
  }

  // int64 ce11_to_10timestamp = 38;
  if (this->ce11_to_10timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(38, this->ce11_to_10timestamp(), target);
  }

  // int64 ce11_to_12timestamp = 39;
  if (this->ce11_to_12timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(39, this->ce11_to_12timestamp(), target);
  }

  // int64 ce12_to_11timestamp = 40;
  if (this->ce12_to_11timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(40, this->ce12_to_11timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autodrive.workflow.proto.PerFusUssAllCERawData)
  return target;
}

size_t PerFusUssAllCERawData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autodrive.workflow.proto.PerFusUssAllCERawData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 ce1_to_2distance = 1;
  if (this->ce1_to_2distance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ce1_to_2distance());
  }

  // uint32 ce2_to_1distance = 2;
  if (this->ce2_to_1distance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ce2_to_1distance());
  }

  // uint32 ce2_to_3distance = 3;
  if (this->ce2_to_3distance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ce2_to_3distance());
  }

  // uint32 ce3_to_2distance = 4;
  if (this->ce3_to_2distance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ce3_to_2distance());
  }

  // uint32 ce3_to_4distance = 5;
  if (this->ce3_to_4distance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ce3_to_4distance());
  }

  // uint32 ce4_to_3distance = 6;
  if (this->ce4_to_3distance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ce4_to_3distance());
  }

  // uint32 ce4_to_5distance = 7;
  if (this->ce4_to_5distance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ce4_to_5distance());
  }

  // uint32 ce5_to_4distance = 8;
  if (this->ce5_to_4distance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ce5_to_4distance());
  }

  // uint32 ce5_to_6distance = 9;
  if (this->ce5_to_6distance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ce5_to_6distance());
  }

  // uint32 ce6_to_5distance = 10;
  if (this->ce6_to_5distance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ce6_to_5distance());
  }

  // uint32 ce7_to_8distance = 11;
  if (this->ce7_to_8distance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ce7_to_8distance());
  }

  // uint32 ce8_to_7distance = 12;
  if (this->ce8_to_7distance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ce8_to_7distance());
  }

  // uint32 ce8_to_9distance = 13;
  if (this->ce8_to_9distance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ce8_to_9distance());
  }

  // uint32 ce9_to_8distance = 14;
  if (this->ce9_to_8distance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ce9_to_8distance());
  }

  // uint32 ce9_to_10distance = 15;
  if (this->ce9_to_10distance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ce9_to_10distance());
  }

  // uint32 ce10_to_9distance = 16;
  if (this->ce10_to_9distance() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ce10_to_9distance());
  }

  // uint32 ce10_to_11distance = 17;
  if (this->ce10_to_11distance() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ce10_to_11distance());
  }

  // uint32 ce11_to_10distance = 18;
  if (this->ce11_to_10distance() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ce11_to_10distance());
  }

  // uint32 ce11_to_12distance = 19;
  if (this->ce11_to_12distance() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ce11_to_12distance());
  }

  // uint32 ce12_to_11distance = 20;
  if (this->ce12_to_11distance() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ce12_to_11distance());
  }

  // int64 ce1_to_2timestamp = 21;
  if (this->ce1_to_2timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ce1_to_2timestamp());
  }

  // int64 ce2_to_1timestamp = 22;
  if (this->ce2_to_1timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ce2_to_1timestamp());
  }

  // int64 ce2_to_3timestamp = 23;
  if (this->ce2_to_3timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ce2_to_3timestamp());
  }

  // int64 ce3_to_2timestamp = 24;
  if (this->ce3_to_2timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ce3_to_2timestamp());
  }

  // int64 ce3_to_4timestamp = 25;
  if (this->ce3_to_4timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ce3_to_4timestamp());
  }

  // int64 ce4_to_3timestamp = 26;
  if (this->ce4_to_3timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ce4_to_3timestamp());
  }

  // int64 ce4_to_5timestamp = 27;
  if (this->ce4_to_5timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ce4_to_5timestamp());
  }

  // int64 ce5_to_4timestamp = 28;
  if (this->ce5_to_4timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ce5_to_4timestamp());
  }

  // int64 ce5_to_6timestamp = 29;
  if (this->ce5_to_6timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ce5_to_6timestamp());
  }

  // int64 ce6_to_5timestamp = 30;
  if (this->ce6_to_5timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ce6_to_5timestamp());
  }

  // int64 ce7_to_8timestamp = 31;
  if (this->ce7_to_8timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ce7_to_8timestamp());
  }

  // int64 ce8_to_7timestamp = 32;
  if (this->ce8_to_7timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ce8_to_7timestamp());
  }

  // int64 ce8_to_9timestamp = 33;
  if (this->ce8_to_9timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ce8_to_9timestamp());
  }

  // int64 ce9_to_8timestamp = 34;
  if (this->ce9_to_8timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ce9_to_8timestamp());
  }

  // int64 ce9_to_10timestamp = 35;
  if (this->ce9_to_10timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ce9_to_10timestamp());
  }

  // int64 ce10_to_9timestamp = 36;
  if (this->ce10_to_9timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ce10_to_9timestamp());
  }

  // int64 ce10_to_11timestamp = 37;
  if (this->ce10_to_11timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ce10_to_11timestamp());
  }

  // int64 ce11_to_10timestamp = 38;
  if (this->ce11_to_10timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ce11_to_10timestamp());
  }

  // int64 ce11_to_12timestamp = 39;
  if (this->ce11_to_12timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ce11_to_12timestamp());
  }

  // int64 ce12_to_11timestamp = 40;
  if (this->ce12_to_11timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ce12_to_11timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PerFusUssAllCERawData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:autodrive.workflow.proto.PerFusUssAllCERawData)
  GOOGLE_DCHECK_NE(&from, this);
  const PerFusUssAllCERawData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PerFusUssAllCERawData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:autodrive.workflow.proto.PerFusUssAllCERawData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:autodrive.workflow.proto.PerFusUssAllCERawData)
    MergeFrom(*source);
  }
}

void PerFusUssAllCERawData::MergeFrom(const PerFusUssAllCERawData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:autodrive.workflow.proto.PerFusUssAllCERawData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ce1_to_2distance() != 0) {
    set_ce1_to_2distance(from.ce1_to_2distance());
  }
  if (from.ce2_to_1distance() != 0) {
    set_ce2_to_1distance(from.ce2_to_1distance());
  }
  if (from.ce2_to_3distance() != 0) {
    set_ce2_to_3distance(from.ce2_to_3distance());
  }
  if (from.ce3_to_2distance() != 0) {
    set_ce3_to_2distance(from.ce3_to_2distance());
  }
  if (from.ce3_to_4distance() != 0) {
    set_ce3_to_4distance(from.ce3_to_4distance());
  }
  if (from.ce4_to_3distance() != 0) {
    set_ce4_to_3distance(from.ce4_to_3distance());
  }
  if (from.ce4_to_5distance() != 0) {
    set_ce4_to_5distance(from.ce4_to_5distance());
  }
  if (from.ce5_to_4distance() != 0) {
    set_ce5_to_4distance(from.ce5_to_4distance());
  }
  if (from.ce5_to_6distance() != 0) {
    set_ce5_to_6distance(from.ce5_to_6distance());
  }
  if (from.ce6_to_5distance() != 0) {
    set_ce6_to_5distance(from.ce6_to_5distance());
  }
  if (from.ce7_to_8distance() != 0) {
    set_ce7_to_8distance(from.ce7_to_8distance());
  }
  if (from.ce8_to_7distance() != 0) {
    set_ce8_to_7distance(from.ce8_to_7distance());
  }
  if (from.ce8_to_9distance() != 0) {
    set_ce8_to_9distance(from.ce8_to_9distance());
  }
  if (from.ce9_to_8distance() != 0) {
    set_ce9_to_8distance(from.ce9_to_8distance());
  }
  if (from.ce9_to_10distance() != 0) {
    set_ce9_to_10distance(from.ce9_to_10distance());
  }
  if (from.ce10_to_9distance() != 0) {
    set_ce10_to_9distance(from.ce10_to_9distance());
  }
  if (from.ce10_to_11distance() != 0) {
    set_ce10_to_11distance(from.ce10_to_11distance());
  }
  if (from.ce11_to_10distance() != 0) {
    set_ce11_to_10distance(from.ce11_to_10distance());
  }
  if (from.ce11_to_12distance() != 0) {
    set_ce11_to_12distance(from.ce11_to_12distance());
  }
  if (from.ce12_to_11distance() != 0) {
    set_ce12_to_11distance(from.ce12_to_11distance());
  }
  if (from.ce1_to_2timestamp() != 0) {
    set_ce1_to_2timestamp(from.ce1_to_2timestamp());
  }
  if (from.ce2_to_1timestamp() != 0) {
    set_ce2_to_1timestamp(from.ce2_to_1timestamp());
  }
  if (from.ce2_to_3timestamp() != 0) {
    set_ce2_to_3timestamp(from.ce2_to_3timestamp());
  }
  if (from.ce3_to_2timestamp() != 0) {
    set_ce3_to_2timestamp(from.ce3_to_2timestamp());
  }
  if (from.ce3_to_4timestamp() != 0) {
    set_ce3_to_4timestamp(from.ce3_to_4timestamp());
  }
  if (from.ce4_to_3timestamp() != 0) {
    set_ce4_to_3timestamp(from.ce4_to_3timestamp());
  }
  if (from.ce4_to_5timestamp() != 0) {
    set_ce4_to_5timestamp(from.ce4_to_5timestamp());
  }
  if (from.ce5_to_4timestamp() != 0) {
    set_ce5_to_4timestamp(from.ce5_to_4timestamp());
  }
  if (from.ce5_to_6timestamp() != 0) {
    set_ce5_to_6timestamp(from.ce5_to_6timestamp());
  }
  if (from.ce6_to_5timestamp() != 0) {
    set_ce6_to_5timestamp(from.ce6_to_5timestamp());
  }
  if (from.ce7_to_8timestamp() != 0) {
    set_ce7_to_8timestamp(from.ce7_to_8timestamp());
  }
  if (from.ce8_to_7timestamp() != 0) {
    set_ce8_to_7timestamp(from.ce8_to_7timestamp());
  }
  if (from.ce8_to_9timestamp() != 0) {
    set_ce8_to_9timestamp(from.ce8_to_9timestamp());
  }
  if (from.ce9_to_8timestamp() != 0) {
    set_ce9_to_8timestamp(from.ce9_to_8timestamp());
  }
  if (from.ce9_to_10timestamp() != 0) {
    set_ce9_to_10timestamp(from.ce9_to_10timestamp());
  }
  if (from.ce10_to_9timestamp() != 0) {
    set_ce10_to_9timestamp(from.ce10_to_9timestamp());
  }
  if (from.ce10_to_11timestamp() != 0) {
    set_ce10_to_11timestamp(from.ce10_to_11timestamp());
  }
  if (from.ce11_to_10timestamp() != 0) {
    set_ce11_to_10timestamp(from.ce11_to_10timestamp());
  }
  if (from.ce11_to_12timestamp() != 0) {
    set_ce11_to_12timestamp(from.ce11_to_12timestamp());
  }
  if (from.ce12_to_11timestamp() != 0) {
    set_ce12_to_11timestamp(from.ce12_to_11timestamp());
  }
}

void PerFusUssAllCERawData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:autodrive.workflow.proto.PerFusUssAllCERawData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PerFusUssAllCERawData::CopyFrom(const PerFusUssAllCERawData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autodrive.workflow.proto.PerFusUssAllCERawData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerFusUssAllCERawData::IsInitialized() const {
  return true;
}

void PerFusUssAllCERawData::Swap(PerFusUssAllCERawData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PerFusUssAllCERawData::InternalSwap(PerFusUssAllCERawData* other) {
  using std::swap;
  swap(ce1_to_2distance_, other->ce1_to_2distance_);
  swap(ce2_to_1distance_, other->ce2_to_1distance_);
  swap(ce2_to_3distance_, other->ce2_to_3distance_);
  swap(ce3_to_2distance_, other->ce3_to_2distance_);
  swap(ce3_to_4distance_, other->ce3_to_4distance_);
  swap(ce4_to_3distance_, other->ce4_to_3distance_);
  swap(ce4_to_5distance_, other->ce4_to_5distance_);
  swap(ce5_to_4distance_, other->ce5_to_4distance_);
  swap(ce5_to_6distance_, other->ce5_to_6distance_);
  swap(ce6_to_5distance_, other->ce6_to_5distance_);
  swap(ce7_to_8distance_, other->ce7_to_8distance_);
  swap(ce8_to_7distance_, other->ce8_to_7distance_);
  swap(ce8_to_9distance_, other->ce8_to_9distance_);
  swap(ce9_to_8distance_, other->ce9_to_8distance_);
  swap(ce9_to_10distance_, other->ce9_to_10distance_);
  swap(ce10_to_9distance_, other->ce10_to_9distance_);
  swap(ce10_to_11distance_, other->ce10_to_11distance_);
  swap(ce11_to_10distance_, other->ce11_to_10distance_);
  swap(ce11_to_12distance_, other->ce11_to_12distance_);
  swap(ce12_to_11distance_, other->ce12_to_11distance_);
  swap(ce1_to_2timestamp_, other->ce1_to_2timestamp_);
  swap(ce2_to_1timestamp_, other->ce2_to_1timestamp_);
  swap(ce2_to_3timestamp_, other->ce2_to_3timestamp_);
  swap(ce3_to_2timestamp_, other->ce3_to_2timestamp_);
  swap(ce3_to_4timestamp_, other->ce3_to_4timestamp_);
  swap(ce4_to_3timestamp_, other->ce4_to_3timestamp_);
  swap(ce4_to_5timestamp_, other->ce4_to_5timestamp_);
  swap(ce5_to_4timestamp_, other->ce5_to_4timestamp_);
  swap(ce5_to_6timestamp_, other->ce5_to_6timestamp_);
  swap(ce6_to_5timestamp_, other->ce6_to_5timestamp_);
  swap(ce7_to_8timestamp_, other->ce7_to_8timestamp_);
  swap(ce8_to_7timestamp_, other->ce8_to_7timestamp_);
  swap(ce8_to_9timestamp_, other->ce8_to_9timestamp_);
  swap(ce9_to_8timestamp_, other->ce9_to_8timestamp_);
  swap(ce9_to_10timestamp_, other->ce9_to_10timestamp_);
  swap(ce10_to_9timestamp_, other->ce10_to_9timestamp_);
  swap(ce10_to_11timestamp_, other->ce10_to_11timestamp_);
  swap(ce11_to_10timestamp_, other->ce11_to_10timestamp_);
  swap(ce11_to_12timestamp_, other->ce11_to_12timestamp_);
  swap(ce12_to_11timestamp_, other->ce12_to_11timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PerFusUssAllCERawData::GetMetadata() const {
  protobuf_uss_5fobstacles_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uss_5fobstacles_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UssObstaclesMsg::InitAsDefaultInstance() {
  ::autodrive::workflow::proto::_UssObstaclesMsg_default_instance_._instance.get_mutable()->header_ = const_cast< ::autodrive::workflow::proto::MsgHeader*>(
      ::autodrive::workflow::proto::MsgHeader::internal_default_instance());
  ::autodrive::workflow::proto::_UssObstaclesMsg_default_instance_._instance.get_mutable()->error_ = const_cast< ::autodrive::workflow::proto::Error*>(
      ::autodrive::workflow::proto::Error::internal_default_instance());
  ::autodrive::workflow::proto::_UssObstaclesMsg_default_instance_._instance.get_mutable()->state_machine_ = const_cast< ::autodrive::workflow::proto::StateMachine*>(
      ::autodrive::workflow::proto::StateMachine::internal_default_instance());
  ::autodrive::workflow::proto::_UssObstaclesMsg_default_instance_._instance.get_mutable()->uss_ce_raw_obj_ = const_cast< ::autodrive::workflow::proto::PerFusUssAllCERawData*>(
      ::autodrive::workflow::proto::PerFusUssAllCERawData::internal_default_instance());
}
void UssObstaclesMsg::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void UssObstaclesMsg::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
}
void UssObstaclesMsg::clear_uss_header() {
  uss_header_.Clear();
}
void UssObstaclesMsg::clear_state_machine() {
  if (GetArenaNoVirtual() == NULL && state_machine_ != NULL) {
    delete state_machine_;
  }
  state_machine_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UssObstaclesMsg::kHeaderFieldNumber;
const int UssObstaclesMsg::kErrorFieldNumber;
const int UssObstaclesMsg::kVersionFieldNumber;
const int UssObstaclesMsg::kUssHeaderFieldNumber;
const int UssObstaclesMsg::kUssRawFieldNumber;
const int UssObstaclesMsg::kUssLpFieldNumber;
const int UssObstaclesMsg::kUssObjFieldNumber;
const int UssObstaclesMsg::kStateMachineFieldNumber;
const int UssObstaclesMsg::kSensorStampFieldNumber;
const int UssObstaclesMsg::kSampleStampFieldNumber;
const int UssObstaclesMsg::kRawArrayFieldNumber;
const int UssObstaclesMsg::kUssCeRawObjFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UssObstaclesMsg::UssObstaclesMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_uss_5fobstacles_2eproto::InitDefaultsUssObstaclesMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:autodrive.workflow.proto.UssObstaclesMsg)
}
UssObstaclesMsg::UssObstaclesMsg(const UssObstaclesMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      uss_header_(from.uss_header_),
      uss_raw_(from.uss_raw_),
      uss_lp_(from.uss_lp_),
      uss_obj_(from.uss_obj_),
      raw_array_(from.raw_array_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::autodrive::workflow::proto::MsgHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_error()) {
    error_ = new ::autodrive::workflow::proto::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  if (from.has_state_machine()) {
    state_machine_ = new ::autodrive::workflow::proto::StateMachine(*from.state_machine_);
  } else {
    state_machine_ = NULL;
  }
  if (from.has_uss_ce_raw_obj()) {
    uss_ce_raw_obj_ = new ::autodrive::workflow::proto::PerFusUssAllCERawData(*from.uss_ce_raw_obj_);
  } else {
    uss_ce_raw_obj_ = NULL;
  }
  ::memcpy(&sensor_stamp_, &from.sensor_stamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&sensor_stamp_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:autodrive.workflow.proto.UssObstaclesMsg)
}

void UssObstaclesMsg::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&header_)) + sizeof(version_));
  _cached_size_ = 0;
}

UssObstaclesMsg::~UssObstaclesMsg() {
  // @@protoc_insertion_point(destructor:autodrive.workflow.proto.UssObstaclesMsg)
  SharedDtor();
}

void UssObstaclesMsg::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete error_;
  if (this != internal_default_instance()) delete state_machine_;
  if (this != internal_default_instance()) delete uss_ce_raw_obj_;
}

void UssObstaclesMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UssObstaclesMsg::descriptor() {
  ::protobuf_uss_5fobstacles_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uss_5fobstacles_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UssObstaclesMsg& UssObstaclesMsg::default_instance() {
  ::protobuf_uss_5fobstacles_2eproto::InitDefaultsUssObstaclesMsg();
  return *internal_default_instance();
}

UssObstaclesMsg* UssObstaclesMsg::New(::google::protobuf::Arena* arena) const {
  UssObstaclesMsg* n = new UssObstaclesMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UssObstaclesMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:autodrive.workflow.proto.UssObstaclesMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uss_header_.Clear();
  uss_raw_.Clear();
  uss_lp_.Clear();
  uss_obj_.Clear();
  raw_array_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_machine_ != NULL) {
    delete state_machine_;
  }
  state_machine_ = NULL;
  if (GetArenaNoVirtual() == NULL && uss_ce_raw_obj_ != NULL) {
    delete uss_ce_raw_obj_;
  }
  uss_ce_raw_obj_ = NULL;
  ::memset(&sensor_stamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&sensor_stamp_)) + sizeof(version_));
  _internal_metadata_.Clear();
}

bool UssObstaclesMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:autodrive.workflow.proto.UssObstaclesMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .autodrive.workflow.proto.MsgHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.Error error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .autodrive.workflow.proto.PerFusUssHeader uss_header = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_uss_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .autodrive.workflow.proto.PerFusUssRawData uss_raw = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_uss_raw()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .autodrive.workflow.proto.PerFusUssLp uss_lp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_uss_lp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .autodrive.workflow.proto.PerFusUssObj uss_obj = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_uss_obj()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.StateMachine state_machine = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state_machine()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 sensor_stamp = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sensor_stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 sample_stamp = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sample_stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 raw_array = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_raw_array())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 90u, input, this->mutable_raw_array())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .autodrive.workflow.proto.PerFusUssAllCERawData uss_ce_raw_obj = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uss_ce_raw_obj()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:autodrive.workflow.proto.UssObstaclesMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:autodrive.workflow.proto.UssObstaclesMsg)
  return false;
#undef DO_
}

void UssObstaclesMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:autodrive.workflow.proto.UssObstaclesMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .autodrive.workflow.proto.MsgHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // .autodrive.workflow.proto.Error error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  // int32 version = 3;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->version(), output);
  }

  // repeated .autodrive.workflow.proto.PerFusUssHeader uss_header = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uss_header_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->uss_header(static_cast<int>(i)), output);
  }

  // repeated .autodrive.workflow.proto.PerFusUssRawData uss_raw = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uss_raw_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->uss_raw(static_cast<int>(i)), output);
  }

  // repeated .autodrive.workflow.proto.PerFusUssLp uss_lp = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uss_lp_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->uss_lp(static_cast<int>(i)), output);
  }

  // repeated .autodrive.workflow.proto.PerFusUssObj uss_obj = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uss_obj_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->uss_obj(static_cast<int>(i)), output);
  }

  // .autodrive.workflow.proto.StateMachine state_machine = 8;
  if (this->has_state_machine()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->state_machine_, output);
  }

  // int64 sensor_stamp = 9;
  if (this->sensor_stamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->sensor_stamp(), output);
  }

  // int64 sample_stamp = 10;
  if (this->sample_stamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->sample_stamp(), output);
  }

  // repeated uint32 raw_array = 11;
  if (this->raw_array_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _raw_array_cached_byte_size_));
  }
  for (int i = 0, n = this->raw_array_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->raw_array(i), output);
  }

  // .autodrive.workflow.proto.PerFusUssAllCERawData uss_ce_raw_obj = 12;
  if (this->has_uss_ce_raw_obj()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->uss_ce_raw_obj_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:autodrive.workflow.proto.UssObstaclesMsg)
}

::google::protobuf::uint8* UssObstaclesMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:autodrive.workflow.proto.UssObstaclesMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .autodrive.workflow.proto.MsgHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // .autodrive.workflow.proto.Error error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->error_, deterministic, target);
  }

  // int32 version = 3;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->version(), target);
  }

  // repeated .autodrive.workflow.proto.PerFusUssHeader uss_header = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uss_header_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->uss_header(static_cast<int>(i)), deterministic, target);
  }

  // repeated .autodrive.workflow.proto.PerFusUssRawData uss_raw = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uss_raw_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->uss_raw(static_cast<int>(i)), deterministic, target);
  }

  // repeated .autodrive.workflow.proto.PerFusUssLp uss_lp = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uss_lp_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->uss_lp(static_cast<int>(i)), deterministic, target);
  }

  // repeated .autodrive.workflow.proto.PerFusUssObj uss_obj = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uss_obj_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->uss_obj(static_cast<int>(i)), deterministic, target);
  }

  // .autodrive.workflow.proto.StateMachine state_machine = 8;
  if (this->has_state_machine()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->state_machine_, deterministic, target);
  }

  // int64 sensor_stamp = 9;
  if (this->sensor_stamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->sensor_stamp(), target);
  }

  // int64 sample_stamp = 10;
  if (this->sample_stamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->sample_stamp(), target);
  }

  // repeated uint32 raw_array = 11;
  if (this->raw_array_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _raw_array_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->raw_array_, target);
  }

  // .autodrive.workflow.proto.PerFusUssAllCERawData uss_ce_raw_obj = 12;
  if (this->has_uss_ce_raw_obj()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, *this->uss_ce_raw_obj_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autodrive.workflow.proto.UssObstaclesMsg)
  return target;
}

size_t UssObstaclesMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autodrive.workflow.proto.UssObstaclesMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .autodrive.workflow.proto.PerFusUssHeader uss_header = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->uss_header_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->uss_header(static_cast<int>(i)));
    }
  }

  // repeated .autodrive.workflow.proto.PerFusUssRawData uss_raw = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->uss_raw_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->uss_raw(static_cast<int>(i)));
    }
  }

  // repeated .autodrive.workflow.proto.PerFusUssLp uss_lp = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->uss_lp_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->uss_lp(static_cast<int>(i)));
    }
  }

  // repeated .autodrive.workflow.proto.PerFusUssObj uss_obj = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->uss_obj_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->uss_obj(static_cast<int>(i)));
    }
  }

  // repeated uint32 raw_array = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->raw_array_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _raw_array_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .autodrive.workflow.proto.MsgHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // .autodrive.workflow.proto.Error error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->error_);
  }

  // .autodrive.workflow.proto.StateMachine state_machine = 8;
  if (this->has_state_machine()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_machine_);
  }

  // .autodrive.workflow.proto.PerFusUssAllCERawData uss_ce_raw_obj = 12;
  if (this->has_uss_ce_raw_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->uss_ce_raw_obj_);
  }

  // int64 sensor_stamp = 9;
  if (this->sensor_stamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->sensor_stamp());
  }

  // int64 sample_stamp = 10;
  if (this->sample_stamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->sample_stamp());
  }

  // int32 version = 3;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UssObstaclesMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:autodrive.workflow.proto.UssObstaclesMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const UssObstaclesMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UssObstaclesMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:autodrive.workflow.proto.UssObstaclesMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:autodrive.workflow.proto.UssObstaclesMsg)
    MergeFrom(*source);
  }
}

void UssObstaclesMsg::MergeFrom(const UssObstaclesMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:autodrive.workflow.proto.UssObstaclesMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uss_header_.MergeFrom(from.uss_header_);
  uss_raw_.MergeFrom(from.uss_raw_);
  uss_lp_.MergeFrom(from.uss_lp_);
  uss_obj_.MergeFrom(from.uss_obj_);
  raw_array_.MergeFrom(from.raw_array_);
  if (from.has_header()) {
    mutable_header()->::autodrive::workflow::proto::MsgHeader::MergeFrom(from.header());
  }
  if (from.has_error()) {
    mutable_error()->::autodrive::workflow::proto::Error::MergeFrom(from.error());
  }
  if (from.has_state_machine()) {
    mutable_state_machine()->::autodrive::workflow::proto::StateMachine::MergeFrom(from.state_machine());
  }
  if (from.has_uss_ce_raw_obj()) {
    mutable_uss_ce_raw_obj()->::autodrive::workflow::proto::PerFusUssAllCERawData::MergeFrom(from.uss_ce_raw_obj());
  }
  if (from.sensor_stamp() != 0) {
    set_sensor_stamp(from.sensor_stamp());
  }
  if (from.sample_stamp() != 0) {
    set_sample_stamp(from.sample_stamp());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void UssObstaclesMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:autodrive.workflow.proto.UssObstaclesMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UssObstaclesMsg::CopyFrom(const UssObstaclesMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autodrive.workflow.proto.UssObstaclesMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UssObstaclesMsg::IsInitialized() const {
  return true;
}

void UssObstaclesMsg::Swap(UssObstaclesMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UssObstaclesMsg::InternalSwap(UssObstaclesMsg* other) {
  using std::swap;
  uss_header_.InternalSwap(&other->uss_header_);
  uss_raw_.InternalSwap(&other->uss_raw_);
  uss_lp_.InternalSwap(&other->uss_lp_);
  uss_obj_.InternalSwap(&other->uss_obj_);
  raw_array_.InternalSwap(&other->raw_array_);
  swap(header_, other->header_);
  swap(error_, other->error_);
  swap(state_machine_, other->state_machine_);
  swap(uss_ce_raw_obj_, other->uss_ce_raw_obj_);
  swap(sensor_stamp_, other->sensor_stamp_);
  swap(sample_stamp_, other->sample_stamp_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UssObstaclesMsg::GetMetadata() const {
  protobuf_uss_5fobstacles_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_uss_5fobstacles_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace workflow
}  // namespace autodrive

// @@protoc_insertion_point(global_scope)
